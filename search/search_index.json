{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.\\_]+"},"docs":[{"location":"","text":"AoE2DE UGC Guide \u00b6 The Ultimate Guide to AoE2DE User Generated Content (UGC) What is this guide? \u00b6 This guide aims to be the most intuitive, technical and comprehensive guide to all UGC for the game Age of Empires II. What is UGC? \u00b6 UGC stands for User Generated Content. It refers to custom maps, scenarios, mods and the like for any game. Why would you want to make custom content? \u00b6 Its fun! You can make your wildest ideas come to life by making custom content. Possibilities with UGC are endless! Topics this guide covers \u00b6 This guide will cover Making Custom Scenarios, Data Modding, RM Scripting and AI Scripting. Note that this is still a work in progress, so not all of the topics are available yet! Some topics already have very comprehensive and good guides out there. Such guides will be linked where relevant! Is this guide relevant for older versions of the game? \u00b6 Yes, most of the topics covered in this file will apply to all older versions of the game. How can you build this website locally so you can add more amazing content? \u00b6 You must have Python 3.6 or above installed to be able to use mkdocs clone the repository, then set up a virtual python environment and install the necessary packages: On Linux: 1 2 3 $ python3 -m venv venv $ source venv/bin/activate $ pip install -r requirements.txt On Windows: 1 2 3 > py -m venv venv > venv/Scripts/activate > pip install -r requirements.txt Now you can build and view the site by running mkdocs serve . About the Authors \u00b6 If you have questions, join our discord here ! This guide has been written by Author Discord GitHub YouTube Twitch Alian713 Alian713#0069 here - here KSneijders (MrKirby) MrKirby#5063 here - here hszemi hszemi#2325 here - here Bradical Bradical#2561 here - -","title":"AoE2DE UGC Guide"},{"location":"#aoe2de-ugc-guide","text":"The Ultimate Guide to AoE2DE User Generated Content (UGC)","title":"AoE2DE UGC Guide"},{"location":"#what-is-this-guide","text":"This guide aims to be the most intuitive, technical and comprehensive guide to all UGC for the game Age of Empires II.","title":"What is this guide?"},{"location":"#what-is-ugc","text":"UGC stands for User Generated Content. It refers to custom maps, scenarios, mods and the like for any game.","title":"What is UGC?"},{"location":"#why-would-you-want-to-make-custom-content","text":"Its fun! You can make your wildest ideas come to life by making custom content. Possibilities with UGC are endless!","title":"Why would you want to make custom content?"},{"location":"#topics-this-guide-covers","text":"This guide will cover Making Custom Scenarios, Data Modding, RM Scripting and AI Scripting. Note that this is still a work in progress, so not all of the topics are available yet! Some topics already have very comprehensive and good guides out there. Such guides will be linked where relevant!","title":"Topics this guide covers"},{"location":"#is-this-guide-relevant-for-older-versions-of-the-game","text":"Yes, most of the topics covered in this file will apply to all older versions of the game.","title":"Is this guide relevant for older versions of the game?"},{"location":"#how-can-you-build-this-website-locally-so-you-can-add-more-amazing-content","text":"You must have Python 3.6 or above installed to be able to use mkdocs clone the repository, then set up a virtual python environment and install the necessary packages: On Linux: 1 2 3 $ python3 -m venv venv $ source venv/bin/activate $ pip install -r requirements.txt On Windows: 1 2 3 > py -m venv venv > venv/Scripts/activate > pip install -r requirements.txt Now you can build and view the site by running mkdocs serve .","title":"How can you build this website locally so you can add more amazing content?"},{"location":"#about-the-authors","text":"If you have questions, join our discord here ! This guide has been written by Author Discord GitHub YouTube Twitch Alian713 Alian713#0069 here - here KSneijders (MrKirby) MrKirby#5063 here - here hszemi hszemi#2325 here - here Bradical Bradical#2561 here - -","title":"About the Authors"},{"location":"general/","text":"Game Mechanics \u00b6 This is the part of the guide where common game mechanics required for various map making/modding purposes are discussed.","title":"Game Mechanics"},{"location":"general/#game-mechanics","text":"This is the part of the guide where common game mechanics required for various map making/modding purposes are discussed.","title":"Game Mechanics"},{"location":"general/damage_calculation/","text":"The Armour & Attack Class System: The Backbone of Age of Empires II \u00b6 Written by: Alian713 1. The Purpose \u00b6 Have you ever wondered how bonus damage works in AoE2? How does a Halberdier get its +32 damage against cavalry? How does a Cataphract only take +16 damage from Halbderdiers instead of the full 32? And finally, how could you give bonus damage or armour against bonus damage to units for yourself? Lets find the answers to these questions by learning about the armour and attack class system of AoE2 2. Why do you, a map maker, need to know this? \u00b6 Understanding how damage calculation works and how attacks from one unit to another are calculated is essential for modding and using some of the effects in triggers. Aside from that, it is quite interesting in itself to know how damage is calculated behind the scenes in the game. 3. The System \u00b6 3.1. Introduction \u00b6 Each unit in the game has two essential properties, a list of Attack Classes and a list of Armour Classes . These are also commonly called the Damage Classes , and are used to calculate the damage each unit does to any other unit. There are a total of 36 damage classes in the game but pierce and melee damage classes are the most commonly known ones, as they are the only ones which are actually shown in game. There is also a 3 rd property that we need to know about, which is the Base Armour . This is almost always set to 1000 for every unit. 3.2. List of Damage Classes \u00b6 The following are all the damage classes along with their IDs that exist in the game: (Note that the Armour Classes have the same names and ids as the Attack classes, the reason for this will become clear once you read through the explanation provided below) Class Name ID Wonder 0 Infantry 1 Turtle Ships 2 Base Pierce 3 Base Melee 4 War Elephants 5 Unused 6 Unused 7 Cavalry 8 Unused 9 Unused 10 All Buildings (except Port) 11 Unused 12 Stone Defense 13 Predator Animals 14 Archers 15 Ships Saboteers (camels pre AK) 16 Rams Trebuchets Siege Towers 17 Trees 18 Unique Units 19 Siege Weapons 20 Standard Buildings 21 Walls & Gates 22 Gunpowder Units 23 Hunted Predator Animals 24 Monks 25 Castles 26 Spearmen 27 Cavalry Archers 28 Eagle Warriors 29 Camels (post AK) 30 Unused 31 Condottieri 32 Projectile Gunpowder Secondary 33 Fishing Ships 34 Mamelukes 35 Heroes and Kings 36 Hussite Wagons 37 The explanation of how this system works is given using the example of a Halberdier vs War Elephant, but this method is a general method applicable to any two units fighting each other (At first glance, all of this may seem daunting, but it will get clearer as we walk through the two examples given below!) 3.3. Explanation Using Maths \u00b6 The case of the Halberdier attacking the War Elephant: Attack Classes Halberdier Quantity Armour Classes War Elephant Quantity - - 3 (Base Pierce) 2 4 (Base Melee) 6 4 (Base Melee) 1 5 (War Elephants) 28 5 (War Elephants) 0 8 (Cavalry) 32 8 (Cavalry) 0 16 (Ships & Saboteers) 17 - 17 - - 19 (Unique Units) 17 21 (Standard Buildings) 1 - - 29 (Eagle Warriors) 1 - - 30 (Camels) 26 - - - - 31 (Unused) 26 34 (Fishing Ship) 17 - - 35 (Mamelukes) 11 - - Here you can see all the attack classes listed out for the Halberdier and the armour classes listed out for the War Elephant. For calculating the total amount of damage that this unupgraded Halberdier deals to the unupgraded War Elephant, we go through these steps given below: Identify the damage classes that are in common for the attacking unit's attack class list and the defending unit's armour class list. The damage classes which are in common are: Base Melee (4) , War Elephants (5) and Cavalry (8) (they are also highlighted in the table above) for which the War Elephant has armour classes and the Halberdier has attack classes. For each damage class that is in common, subtract the armour of the defending unit from the attack of the attacking unit. Round up to 0 if you get a negative value. Here, \\(\\color{yellow} Ar_i\\) is the quantity of the armour class with id \\(i\\) for the War Elephant. For example, \\(\\color{yellow} Ar_{19}\\) refers to the Unique Units armour class of the War Elephant. \\(\\color{#bfe3b4} At_i\\) is the quantity of the attack class with id \\(i\\) for the Halberdier. For example, \\(\\color{#bfe3b4} At_{16}\\) refers to the Ships and saboteer attack class of the Halberdier. \\(\\color{yellow} Ba\\) is the Base Armour value for the defending unit, the war elephant. (Note that the ids for every armour class in the game can be found in the table under the topic 3.2.) Melee Damage Class: \\(\\text{dmg}_4 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_4-\\color{yellow} Ar_4, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_4 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 6-\\color{yellow} 1, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_4 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 5, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_4 = \\color{#ff6961} 5\\) War Elephant Damage Class: \\(\\text{dmg}_5 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_5-\\color{yellow} Ar_5, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_5 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 28-\\color{yellow} 0, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_5 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 28, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_5 = \\color{#ff6961} 28\\) Cavalry Damage Class: \\(\\text{dmg}_8 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} Ar_8-\\color{yellow} At_8, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_8 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 32-\\color{yellow} 0, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_8 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 32, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_8 = \\color{#ff6961} 32\\) For each attack class of the attacking unit for which there is no armour class for the defending unit, we use the base armour value to calculate how much attack needs to be dealt. Ships & Saboteers Damage Class: \\(\\text{dmg}_{16} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_{16}-\\color{yellow} Ba, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{16} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 17-\\color{yellow} 1000, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{16} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} -983, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{16} = \\color{#ff6961} 0\\) Standard Buildings: \\(\\text{dmg}_{21} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_{21}-\\color{yellow} Ba, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{21} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 1-\\color{yellow} 1000, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{21} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} -999, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{21} = \\color{#ff6961} 0\\) Eagle Warriors: \\(\\text{dmg}_{29} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_{29}-\\color{yellow} Ba, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{29} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 1-\\color{yellow} 1000, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{29} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} -999, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{29} = \\color{#ff6961} 0\\) Camels: \\(\\text{dmg}_{30} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_{30}-\\color{yellow} Ba, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{30} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 26-\\color{yellow} 1000, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{30} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} -974, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{30} = \\color{#ff6961} 0\\) Fishing Ships: \\(\\text{dmg}_{34} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_{34}-\\color{yellow} Ba, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{34} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 17-\\color{yellow} 1000, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{34} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} -983, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{34} = \\color{#ff6961} 0\\) Fishing Ships: \\(\\text{dmg}_{35} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_{35}-\\color{yellow} Ba, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{35} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 11-\\color{yellow} 1000, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{35} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} -989, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{35} = \\color{#ff6961} 0\\) Trick: Remember, the value for Base Armour is almost always 1000, so unless the unit has an attack of more than 1000 in an attack class, they practically have no effect on the amount of damage dealt! This above calculation with base armour can thus be skipped if that is the case Now add all of the differences found above. Round up to 1 if you get 0. \\(\\text{dmg} = \\color{#add8e6} \\text{max}( \\color{#bfe3b4} \\text{dmg}_4 + \\text{dmg}_5 + \\text{dmg}_8 +\\) \\(\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\color{#bfe3b4}\\text{dmg}_{16} + \\text{dmg}_{21} + \\text{dmg}_{29} + \\text{dmg}_{30} + \\text{dmg}_{34} + \\text{dmg}_{35}, \\; \\color{#bfe3b4} 1 \\color{#add8e6})\\) \\(\\text{dmg} = \\color{#add8e6} \\text{max}( \\color{#bfe3b4} 5+28+32+0, \\; \\color{#bfe3b4} 1 \\color{#add8e6})\\) \\(\\text{dmg} = \\color{#add8e6} \\text{max}( \\color{#bfe3b4} 65, \\; \\color{#bfe3b4} 1 \\color{#add8e6})\\) \\(\\text{dmg} = 65\\) The value thus obtained is the damage that the Halberdier deals to the War Elephant. The General formula for damage calculation between any two units is thus: if \\(\\color{#a66fb5} D\\) is the set of all attack classes for the attacking unit, \\(\\color{#bfe3b4} At_i\\) is the quanitity of the attack class with id \\(i\\) for the attacking unit. For example, \\(\\color{#bfe3b4} At_1\\) refers to the Infantry attack class of the unit. \\(\\color{yellow} Ar_i\\) is quantity of the armour class with id \\(i\\) for the defending unit. For example, \\(\\color{yellow} Ar_{19}\\) refers to the Unique Unit armour class of the defending unit. Note that if an armour class does not exist for the defending unit, use the base armour value in that case! (Note that the ids for every armour class in the game can be found in the table under the topic 3.2.) then: \\[ \\text{dmg} = \\color{#ff6961} \\text{max}( \\color{#a66fb5} \\sum\\limits_{\\forall \\; i \\; \\in D}^{} \\color{#add8e6}\\text{max}( \\color{#bfe3b4} At_i-\\color{yellow} Ar_i, \\; \\color{white} 0 \\color{#add8e6}), \\; \\color{white} 1 \\color{#ff6961}) \\] Note: \\(\\color{#a66fb5} \\sum\\limits_{\\forall \\; i \\; \\in D}^{}\\) means, add up something \\(for\\) \\(all\\) \\(i\\) \\(in\\) \\(D\\) 3.4. Explanation Using Code \u00b6 The case of the War Elephant attacking the Halberdier: Attack Classes War Elephant Quantity Armour Classes Halberdier Quantity - - 1 (Infantry) 2 - - 3 (Base Pierce) 2 4 (Base Melee) 15 4 (Base Melee) 1 11 (All buildings) 7 - - 13 (Stone Defense) 7 - - 21 (Standard Buildings) 0 - - - - 27 (Unique Units) 0 - - 31 (Unused) 0 Here you can see all the attack classes listed out for the War Elephant and the armour classes listed out for the Halberdier. For calculating the total amount of damage that this unupgraded War Elephant deals to the unupgraded Halberdier, we go through these steps given below: Identify the damage classes that are in common for the attacking unit's attack class list and the defending unit's armour class list. For each damage class that is in common, subtract the armour of the defending unit from the attack of the attacking unit. Round up to 0 if you get a negative value. For each attack class of the attacking unit for which there is no armour class for the defending unit, we use the base armour value to calculate how much attack needs to be dealt. Now add all of the differences found above. Round up to 1 if you get 0. The value thus obtained is the damage that the War Elephant deals to the Halberdier. The only common damage class is Base Melee (4) (highlighted in the table above) This means that the damage that the War Elephant does to the Halberdier is simply given by \\(\\text{dmg} = 15-1 = 14\\) (The calculation with the base armour is not shown here since no attack class has an attack of more than 1000 to overecome the base armour) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 damage = 0 # 1. for each attack_class that the attacking unit has for attack_class , attack in attacker . attack_classes : used_armour = target . base_armour # almost always 1000 if attack_class in targer . armour_classes : used_armour = target . armour_classes [ attack_class ] # 2. Find the difference of the attacker's attack and the target's armour. # If the difference is negative, round it up to 0. Add this value to damage damage = damage + max ( attack - used_armour , 0 ) # if the total damage is less than 1, round it up to 1 damage = max ( damage , 1 ) Every unit in the game always has the Base Pierce (3) , Base Melee (4) and Leitis (31) damage classes. Every unique unit in the game always has the 19 (Unitque Unit) armour class. (Can you think of where this armour class is used? Hint: which unit deals bonus damage to all unique units?) In this manner, the damage classes determine which units deal bonus damage to other units 3.5. Answering the questions \u00b6 After having gone through this, can you now think of the answers to the questions posed at the beginning of the guide? Q1. How does a Cataphract only take +16 damage from Halbderdiers instead of the full 32? Q2. How to give bonus damage or bonus damage resistance to a particular unit? Before you move on to read the answers, try and think about how these bonus damages might be being achieved. A1. Cataphracts have 16 armour on the Cavalry (8) armour class, which is the attack class used by Halberdiers for extra 32 damage vs regular cavalry. A2. One of the unused damage classes can be used for this purpose. Giving the desired unit attack on an unused class and giving the target unit 0 armour on the same unused class will produce the effect of the desired unit doing bonus damage to the target unit. 3.6. The Sicilian 50% Bonus Damage Reduction \u00b6 The damage from all classes except the Base Pierce (3) , Base Melee (4) and Leitis (31) is multiplied by 0.5 before it is added to the total damage for Sicilian units. This property of bonus damage resistance is controlled by the Bonus Damage Resist attribute of a unit. (Yes, every single unit can have a different value for this)","title":"Damage Calculation"},{"location":"general/damage_calculation/#the-armour-attack-class-system-the-backbone-of-age-of-empires-ii","text":"Written by: Alian713","title":"The Armour &amp; Attack Class System: The Backbone of Age of Empires II"},{"location":"general/damage_calculation/#1-the-purpose","text":"Have you ever wondered how bonus damage works in AoE2? How does a Halberdier get its +32 damage against cavalry? How does a Cataphract only take +16 damage from Halbderdiers instead of the full 32? And finally, how could you give bonus damage or armour against bonus damage to units for yourself? Lets find the answers to these questions by learning about the armour and attack class system of AoE2","title":"1. The Purpose"},{"location":"general/damage_calculation/#2-why-do-you-a-map-maker-need-to-know-this","text":"Understanding how damage calculation works and how attacks from one unit to another are calculated is essential for modding and using some of the effects in triggers. Aside from that, it is quite interesting in itself to know how damage is calculated behind the scenes in the game.","title":"2. Why do you, a map maker, need to know this?"},{"location":"general/damage_calculation/#3-the-system","text":"","title":"3. The System"},{"location":"general/damage_calculation/#31-introduction","text":"Each unit in the game has two essential properties, a list of Attack Classes and a list of Armour Classes . These are also commonly called the Damage Classes , and are used to calculate the damage each unit does to any other unit. There are a total of 36 damage classes in the game but pierce and melee damage classes are the most commonly known ones, as they are the only ones which are actually shown in game. There is also a 3 rd property that we need to know about, which is the Base Armour . This is almost always set to 1000 for every unit.","title":"3.1. Introduction"},{"location":"general/damage_calculation/#32-list-of-damage-classes","text":"The following are all the damage classes along with their IDs that exist in the game: (Note that the Armour Classes have the same names and ids as the Attack classes, the reason for this will become clear once you read through the explanation provided below) Class Name ID Wonder 0 Infantry 1 Turtle Ships 2 Base Pierce 3 Base Melee 4 War Elephants 5 Unused 6 Unused 7 Cavalry 8 Unused 9 Unused 10 All Buildings (except Port) 11 Unused 12 Stone Defense 13 Predator Animals 14 Archers 15 Ships Saboteers (camels pre AK) 16 Rams Trebuchets Siege Towers 17 Trees 18 Unique Units 19 Siege Weapons 20 Standard Buildings 21 Walls & Gates 22 Gunpowder Units 23 Hunted Predator Animals 24 Monks 25 Castles 26 Spearmen 27 Cavalry Archers 28 Eagle Warriors 29 Camels (post AK) 30 Unused 31 Condottieri 32 Projectile Gunpowder Secondary 33 Fishing Ships 34 Mamelukes 35 Heroes and Kings 36 Hussite Wagons 37 The explanation of how this system works is given using the example of a Halberdier vs War Elephant, but this method is a general method applicable to any two units fighting each other (At first glance, all of this may seem daunting, but it will get clearer as we walk through the two examples given below!)","title":"3.2. List of Damage Classes"},{"location":"general/damage_calculation/#33-explanation-using-maths","text":"The case of the Halberdier attacking the War Elephant: Attack Classes Halberdier Quantity Armour Classes War Elephant Quantity - - 3 (Base Pierce) 2 4 (Base Melee) 6 4 (Base Melee) 1 5 (War Elephants) 28 5 (War Elephants) 0 8 (Cavalry) 32 8 (Cavalry) 0 16 (Ships & Saboteers) 17 - 17 - - 19 (Unique Units) 17 21 (Standard Buildings) 1 - - 29 (Eagle Warriors) 1 - - 30 (Camels) 26 - - - - 31 (Unused) 26 34 (Fishing Ship) 17 - - 35 (Mamelukes) 11 - - Here you can see all the attack classes listed out for the Halberdier and the armour classes listed out for the War Elephant. For calculating the total amount of damage that this unupgraded Halberdier deals to the unupgraded War Elephant, we go through these steps given below: Identify the damage classes that are in common for the attacking unit's attack class list and the defending unit's armour class list. The damage classes which are in common are: Base Melee (4) , War Elephants (5) and Cavalry (8) (they are also highlighted in the table above) for which the War Elephant has armour classes and the Halberdier has attack classes. For each damage class that is in common, subtract the armour of the defending unit from the attack of the attacking unit. Round up to 0 if you get a negative value. Here, \\(\\color{yellow} Ar_i\\) is the quantity of the armour class with id \\(i\\) for the War Elephant. For example, \\(\\color{yellow} Ar_{19}\\) refers to the Unique Units armour class of the War Elephant. \\(\\color{#bfe3b4} At_i\\) is the quantity of the attack class with id \\(i\\) for the Halberdier. For example, \\(\\color{#bfe3b4} At_{16}\\) refers to the Ships and saboteer attack class of the Halberdier. \\(\\color{yellow} Ba\\) is the Base Armour value for the defending unit, the war elephant. (Note that the ids for every armour class in the game can be found in the table under the topic 3.2.) Melee Damage Class: \\(\\text{dmg}_4 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_4-\\color{yellow} Ar_4, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_4 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 6-\\color{yellow} 1, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_4 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 5, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_4 = \\color{#ff6961} 5\\) War Elephant Damage Class: \\(\\text{dmg}_5 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_5-\\color{yellow} Ar_5, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_5 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 28-\\color{yellow} 0, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_5 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 28, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_5 = \\color{#ff6961} 28\\) Cavalry Damage Class: \\(\\text{dmg}_8 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} Ar_8-\\color{yellow} At_8, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_8 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 32-\\color{yellow} 0, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_8 = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 32, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_8 = \\color{#ff6961} 32\\) For each attack class of the attacking unit for which there is no armour class for the defending unit, we use the base armour value to calculate how much attack needs to be dealt. Ships & Saboteers Damage Class: \\(\\text{dmg}_{16} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_{16}-\\color{yellow} Ba, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{16} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 17-\\color{yellow} 1000, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{16} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} -983, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{16} = \\color{#ff6961} 0\\) Standard Buildings: \\(\\text{dmg}_{21} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_{21}-\\color{yellow} Ba, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{21} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 1-\\color{yellow} 1000, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{21} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} -999, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{21} = \\color{#ff6961} 0\\) Eagle Warriors: \\(\\text{dmg}_{29} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_{29}-\\color{yellow} Ba, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{29} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 1-\\color{yellow} 1000, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{29} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} -999, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{29} = \\color{#ff6961} 0\\) Camels: \\(\\text{dmg}_{30} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_{30}-\\color{yellow} Ba, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{30} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 26-\\color{yellow} 1000, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{30} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} -974, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{30} = \\color{#ff6961} 0\\) Fishing Ships: \\(\\text{dmg}_{34} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_{34}-\\color{yellow} Ba, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{34} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 17-\\color{yellow} 1000, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{34} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} -983, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{34} = \\color{#ff6961} 0\\) Fishing Ships: \\(\\text{dmg}_{35} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} At_{35}-\\color{yellow} Ba, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{35} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} 11-\\color{yellow} 1000, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{35} = \\color{#ff6961}\\text{max}( \\color{#bfe3b4} -989, \\; \\color{white} 0 \\color{#ff6961})\\) \\(\\text{dmg}_{35} = \\color{#ff6961} 0\\) Trick: Remember, the value for Base Armour is almost always 1000, so unless the unit has an attack of more than 1000 in an attack class, they practically have no effect on the amount of damage dealt! This above calculation with base armour can thus be skipped if that is the case Now add all of the differences found above. Round up to 1 if you get 0. \\(\\text{dmg} = \\color{#add8e6} \\text{max}( \\color{#bfe3b4} \\text{dmg}_4 + \\text{dmg}_5 + \\text{dmg}_8 +\\) \\(\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\color{#bfe3b4}\\text{dmg}_{16} + \\text{dmg}_{21} + \\text{dmg}_{29} + \\text{dmg}_{30} + \\text{dmg}_{34} + \\text{dmg}_{35}, \\; \\color{#bfe3b4} 1 \\color{#add8e6})\\) \\(\\text{dmg} = \\color{#add8e6} \\text{max}( \\color{#bfe3b4} 5+28+32+0, \\; \\color{#bfe3b4} 1 \\color{#add8e6})\\) \\(\\text{dmg} = \\color{#add8e6} \\text{max}( \\color{#bfe3b4} 65, \\; \\color{#bfe3b4} 1 \\color{#add8e6})\\) \\(\\text{dmg} = 65\\) The value thus obtained is the damage that the Halberdier deals to the War Elephant. The General formula for damage calculation between any two units is thus: if \\(\\color{#a66fb5} D\\) is the set of all attack classes for the attacking unit, \\(\\color{#bfe3b4} At_i\\) is the quanitity of the attack class with id \\(i\\) for the attacking unit. For example, \\(\\color{#bfe3b4} At_1\\) refers to the Infantry attack class of the unit. \\(\\color{yellow} Ar_i\\) is quantity of the armour class with id \\(i\\) for the defending unit. For example, \\(\\color{yellow} Ar_{19}\\) refers to the Unique Unit armour class of the defending unit. Note that if an armour class does not exist for the defending unit, use the base armour value in that case! (Note that the ids for every armour class in the game can be found in the table under the topic 3.2.) then: \\[ \\text{dmg} = \\color{#ff6961} \\text{max}( \\color{#a66fb5} \\sum\\limits_{\\forall \\; i \\; \\in D}^{} \\color{#add8e6}\\text{max}( \\color{#bfe3b4} At_i-\\color{yellow} Ar_i, \\; \\color{white} 0 \\color{#add8e6}), \\; \\color{white} 1 \\color{#ff6961}) \\] Note: \\(\\color{#a66fb5} \\sum\\limits_{\\forall \\; i \\; \\in D}^{}\\) means, add up something \\(for\\) \\(all\\) \\(i\\) \\(in\\) \\(D\\)","title":"3.3. Explanation Using Maths"},{"location":"general/damage_calculation/#34-explanation-using-code","text":"The case of the War Elephant attacking the Halberdier: Attack Classes War Elephant Quantity Armour Classes Halberdier Quantity - - 1 (Infantry) 2 - - 3 (Base Pierce) 2 4 (Base Melee) 15 4 (Base Melee) 1 11 (All buildings) 7 - - 13 (Stone Defense) 7 - - 21 (Standard Buildings) 0 - - - - 27 (Unique Units) 0 - - 31 (Unused) 0 Here you can see all the attack classes listed out for the War Elephant and the armour classes listed out for the Halberdier. For calculating the total amount of damage that this unupgraded War Elephant deals to the unupgraded Halberdier, we go through these steps given below: Identify the damage classes that are in common for the attacking unit's attack class list and the defending unit's armour class list. For each damage class that is in common, subtract the armour of the defending unit from the attack of the attacking unit. Round up to 0 if you get a negative value. For each attack class of the attacking unit for which there is no armour class for the defending unit, we use the base armour value to calculate how much attack needs to be dealt. Now add all of the differences found above. Round up to 1 if you get 0. The value thus obtained is the damage that the War Elephant deals to the Halberdier. The only common damage class is Base Melee (4) (highlighted in the table above) This means that the damage that the War Elephant does to the Halberdier is simply given by \\(\\text{dmg} = 15-1 = 14\\) (The calculation with the base armour is not shown here since no attack class has an attack of more than 1000 to overecome the base armour) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 damage = 0 # 1. for each attack_class that the attacking unit has for attack_class , attack in attacker . attack_classes : used_armour = target . base_armour # almost always 1000 if attack_class in targer . armour_classes : used_armour = target . armour_classes [ attack_class ] # 2. Find the difference of the attacker's attack and the target's armour. # If the difference is negative, round it up to 0. Add this value to damage damage = damage + max ( attack - used_armour , 0 ) # if the total damage is less than 1, round it up to 1 damage = max ( damage , 1 ) Every unit in the game always has the Base Pierce (3) , Base Melee (4) and Leitis (31) damage classes. Every unique unit in the game always has the 19 (Unitque Unit) armour class. (Can you think of where this armour class is used? Hint: which unit deals bonus damage to all unique units?) In this manner, the damage classes determine which units deal bonus damage to other units","title":"3.4. Explanation Using Code"},{"location":"general/damage_calculation/#35-answering-the-questions","text":"After having gone through this, can you now think of the answers to the questions posed at the beginning of the guide? Q1. How does a Cataphract only take +16 damage from Halbderdiers instead of the full 32? Q2. How to give bonus damage or bonus damage resistance to a particular unit? Before you move on to read the answers, try and think about how these bonus damages might be being achieved. A1. Cataphracts have 16 armour on the Cavalry (8) armour class, which is the attack class used by Halberdiers for extra 32 damage vs regular cavalry. A2. One of the unused damage classes can be used for this purpose. Giving the desired unit attack on an unused class and giving the target unit 0 armour on the same unused class will produce the effect of the desired unit doing bonus damage to the target unit.","title":"3.5. Answering the questions"},{"location":"general/damage_calculation/#36-the-sicilian-50-bonus-damage-reduction","text":"The damage from all classes except the Base Pierce (3) , Base Melee (4) and Leitis (31) is multiplied by 0.5 before it is added to the total damage for Sicilian units. This property of bonus damage resistance is controlled by the Bonus Damage Resist attribute of a unit. (Yes, every single unit can have a different value for this)","title":"3.6. The Sicilian 50% Bonus Damage Reduction"},{"location":"general/attributes/attributes/","text":"Written by: Alian713 This page is a list of all the unit attributes that can be modified in the scenario editor and their purposes. If you know of any attributes that are not written on this page, or if the descriptions of the attributes are wrong, please let the authors of this guide know! 0. Hit Points \u00b6 ID: 0 This attribute refers to the health of the units 1. Line of Sight \u00b6 ID: 1 This is the distance a unit can see around itself 2. Garrison Capacity \u00b6 ID: 2 This is the amount of units that can garrison inside another unit 3. Unit Size X \u00b6 ID: 3 This determines the x-size of the unit's collision hitbox (width of the unit) 4. Unit Size Y \u00b6 ID: 4 This determines the y-size of the unit's collision hitbox (length of the unit) 5. Movement Speed \u00b6 ID: 5 This is the movement speed of a unit, measured in tiles per second 6. Rotation Speed \u00b6 ID: 6 This is the rate at which units can rotate, measured in seconds per frame (this many seconds must pass before the object can switch to the next rotation frame). For example, for a trebuchet to start attacking a building facing the opposite direction, it has to rotate to face that way first 8. Armor \u00b6 ID: 8 This is the quantity of armour a unit has on any of its Armour Classes . If you do not know what an Armour Class is, refer to the Damage Calculation section of this guide. Note that changing the armour through this option will show it as being added to the base armour amount. (for example: 4+4) 9. Attack \u00b6 ID: 9 This is the quantity of attack a unit has on any of its Attack Classes . If you do not know what an Attack Class is, refer to the Damage Calculation section of this guide. Note that changing the attack through this option will show it as being added to the base attack amount. (for example: 6+2) 10. Attack Reload Time \u00b6 ID: 10 This is the minimum time that must pass before a unit is able to fire another shot. For melee units it is the minimum time between two successive hits that they can do 11. Accuracy Percent \u00b6 ID: 11 This determines how accurately a unit can aim at another unit This accuracy is the accuracy of a unit to fire at the exact centre of its target. If the shot fired is not aimed at the exact centre of the target, it may still hit the target if its not off by too much since it can still land within the hitbox of the target, just not at the exact centre Thus, bigger targets are actually easier to hit, which explains why buildings are an easier target to hit for trebuchets than small units In this image, you can see that shots that were fired in the red area in the 2 nd scenario would've hit if the target had been closer like in the first scenario, but since the target is far away, they actually miss More technically, the visual angle of an object of the same size that is farther away is smaller, thus giving a smaller room for error for the shot in terms of the range of angles that will make the shot hit The chance of a unit getting converted by a monk is also determined by its accuracy If you modify an onager to have a big blast radius and give it a small accuracy, then attack a lot of units bunched together, the accuracy determines what percentage of units take damage from the blast of the onager! This is the reason why warwolf trebuchets get 100% accuracy because otherwise the blast wouldn't damage all of the units. Another interesting consequence of this is the delete trick with onagers and mangonels. This is where a mangonel is deleted immediately after it fires its shot and because a dead unit doesn't have an accuracy, it defaults to 100% and thus deals more damage to all the units in the blast radius Note: There are two other factors that play a role in determining the damage from the shot fired by the deleted mangonel The damage from a mangonel's shot is decreased over distance when moving outward from the centre of the blast (the targeted point). However, when the mangonel is deleted, this decrease over distance doesn't happen, and the projectile deals the full 100% damage to all the units in the blast radius! A shot that is fired from lower elevation would normally deal only 75% of its normal damage due to the elevation damage reduction. deleting a mangonel in this case also makes the damage the full 100% as if there was no elevation difference 12. Max Range \u00b6 ID: 12 This is the maximum range of a unit. Note that to be able to shoot at a target, it must be visible to the unit via its own line of sight or from another unit's line of sight 13. Work Rate \u00b6 ID: 13 This is the work rate for any unit that can do work. Villagers, Fishing Ships, Serjeants 14. Carry Capacity \u00b6 ID: 14 This is the carry capacity of Villagers 15. Base Armor \u00b6 ID: 15 This is the quantity of base armour a unit has on any of its Armour Classes . If you do not know what an Armour Class is, refer to the Damage Calculation section of this guide. Note that changing the armour through this option will show it as the base armour itself, and it will not be added to the regular amount 16. Projectile Unit \u00b6 ID: 16 This is the ID of the projectile that a unit fires 17. Building Icon Override \u00b6 ID: 17 The functionality of this attribute is unknown as it doesn't always behave certainly. If you know what this attribute does, please let the authors of this guide know! 18. Terrain Defense Bonus \u00b6 ID: 18 Unknown... What does this attribute do? 19. Projectile Smart Mode \u00b6 ID: 19 This is a combinable bit field. Controls the following two behaviours for projectiles: For example, if we set this property of the projectile used by an archer to 1 , it will have ballistics. (This is exactly what researching ballistics does in the first place). If we set this property to 2 , a missed projectile that hits another unit will deal its full damage instead of the 50% that it would normally do What if we want to enable both properties at once? This is achieved by adding the flag values for both of them together. Setting this property to 3 enables both effects Property Flag Value No Ballistics 0 Has Ballistics 1 Deals full damage on missed hit 2 20. Minimum Range \u00b6 ID: 20 The minimum distance a unit must be from an attacking unit for the attacking unit to be able to fire its projectile 21. Amount of 1 st Resource Storage \u00b6 ID: 21 This is the amount of 1 st resource contained in any unit. Refer to A.G.E. to see which resource this is for each unit 22. Blast Width \u00b6 ID: 22 All enemy units inside this radius take damage from an attacking unit. This is used by elephants, Druzhina Halberdiers, and Logistica Cataphracts 23. Search Radius \u00b6 ID: 23 The maximum distance at which a unit can detect and auto attack enemy units 24. Bonus Damage Resistance \u00b6 ID: 24 Used by Sicilians for the 50% bonus damage resistance. Set to 0.5 for all Sicilian land military units except siege 25. Icon ID \u00b6 ID: 25 The ID of the icon that you want a unit to show 26. Amount of 2 nd Resource Storage \u00b6 ID: 26 This is the amount of 2 nd resource contained in any unit. Refer to A.G.E. to see which resource this is for each unit 27. Amount of 3 rd Resource Storage \u00b6 ID: 27 This is the amount of 3 rd resource contained in any unit. Refer to A.G.E. to see which resource this is for each unit 28. Fog Visibility \u00b6 ID: 28 Controls visibility of a unit through the fog of war Property Flag Value Not Visible 0 Always Visible 1 Visible If Alive 2 Inverted Visibility 3 Check Doppelganger 4 29. Occlusion Mode \u00b6 ID: 29 This is a combinable bit field. Controls the outlines of units as seen through other units Property Flag Value No outline 0 Display outline when behind other units that have flag 2 1 Other units' outlines are rendered when they are behind this unit 2 Display outline on this unit's foundation when behind other units that have flag 2 4 30. Garrison Type \u00b6 ID: 30 This is a combinable bit field. Controls which units are able to garrison in a building. A unit needs to have the garrison in building task to be able to garrison in a building to begin with Property Flag Value Villagers 1 Infantry 2 Cavalry 4 Monks 8 Herdables 16 Siege 32 Ships 64 32. Unit Size Z \u00b6 ID: 32 This determines the z-size of the unit's collision hitbox (height of the unit) 40. Hero Status \u00b6 ID: 40 This is a combinable bit field. Controls the following properties: For example, if we set the hero status of a knight to 2, a monk will not be able to convert it. If we set the hero status of a militia to 4, it will regenerate HP automatically What if we want to enable multiple properties at once? This is achieved by adding the flag values for those properties together and setting the hero status to that value. For example, if we want to make a paladin both unconvertable and regenerate HP automatically, we can set its hero status to 2+4 = 6. This means that the hero status of a unit can take on any values in the range 1-63. If you set it to any other value, it does not have any effect on the unit This works because notice that there is one and only one way to add different flag values together to obtain a particular value for the hero status! For example, if we have a value of 20 for the hero status of a unit, the only way to make 20 from the above flag values is to add 4 and 16. Thus, we know that the properties corresponding to the flag values 4 (self regeneration) and 16 (protected formation by default) must be enabled for that unit This is a consequence of the fact that every number can be represented as a unique sum of powers of two (binary numbers) Property Flag Value Full Hero Status 1 Cannot be Converted 2 Self Regeneration (30 HP/min) 4 Defensive Stance by Default 8 Protected Formation by Default 16 Safe Delete Confirmation 32 Hero Glow 64 Invert All Flags (except flag 1) 128 41. Frame Delay \u00b6 ID: 41 The amount of delay between the point when the attacking animation starts and the actual hit happening for military units. This is what makes Cavalry Archers annoying to micro 42. Train Location \u00b6 ID: 42 The ID of the unit that trains any given unit. Barracks train Militia, so the train location of a Militia is the ID of the Barracks 43. Train Button \u00b6 ID: 43 The button used for training any given unit. For example, Militia are trained by using the first button, hence the Button Location of Militia is 1. This number ranges from 0-15 44. Blast Attack Level \u00b6 ID: 44 A unit deals blast damage to other units with equal or higher Blast Defense Level that are in its blast radius. For example, while mangonels (blast attack: 2) can damage your own units (blast defense of all player owned units is always 2), scorpions (blast attack: 3) cannot do the same One of the flags 0-3 can be combined with one of the flags from 4-64 by adding the two values Property Flag Value damage resources, nearby allied units and tress 0 damage trees, nearby allied units 1 damage nearby allied units 2 damage targeted unit only 3 Deal a fixed 5 HP of damage to nearby units 4 Deal 50% of unit's own damage to nearby units 8 Deal 25% of unit's own damage to nearby units 16 Deal 33% of unit's own damage to nearby units 32 Attenuate damage as distance from the centre of attack increases (infantry only) 64 Blast damage is dealt along the direction the unit is facing only. This area is a very narrow cone 128 45. Blast Defense Level \u00b6 ID: 45 A unit feels the blast damage from other units with equal or lower Blast Attack Level and if it is inside the attacker's blast radius. For example, while onagers (blast attack: 1) can cut trees (blast defense 1), mangonels (blast attack: 2) cannot do the same Property Flag Value damage resources, nearby allied units and tress 0 damage trees, nearby allied units 1 damage nearby allied units 2 damage targeted unit only 3 46. Shown Attack \u00b6 ID: 46 The amount of attack that is displayed as a unit's attack (may not actually be the true attack) 47. Shown Range \u00b6 ID: 47 The quantity that is displayed as a unit's attack ingame (may not actually be the true attack) 48. Shown Melee Armor \u00b6 ID: 48 The quantity that is displayed as a unit's melee armour ingame (may not actually be the true armour) 49. Shown Pierce Armor \u00b6 ID: 49 The quantity that is displayed as a unit's pierce armour ingame (may not actually be the true armour) 50. Object Name ID \u00b6 ID: 50 The string ID to use for the name of an object. A string ID is used for refering to strings that the game recognises by default. It can be used to automatically set names by using a value that the game recognises. Trying out the value 1 on a unit and seeing what happens is left as an excersise for the reader 51. Short Description ID \u00b6 ID: 51 The string ID for the Short Description of an object. A string ID is used for refering to strings that the game recognises by default. It can be used to automatically set a Short Description by using a value that the game recognises. Trying out the value 1 on a unit and seeing what happens is left as an excersise for the reader 53. Terrain Restriction ID \u00b6 ID: 53 This number determines how a unit interacts with terrains and which terrains it can walk on Property Flag Value All 0 Land And Shallows 1 Beach 2 Water Small Trail 3 Land 4 Nothing 5 Water No Trail 6 All Except Water 7 Land Except Farm 8 Nothing 2 9 Land And Beach 10 Land Except Farm 2 11 All Except Water Bridge Cannon 12 Water Medium Trail 13 All Except Water Bridge Arrow 14 Water Large Trail 15 Grass And Beach 16 Water And Bridge Except Beach 17 All Except Water Bridge Spear 18 Only Water And Ice 19 All Except Water Wheel 20 Shallow Water 21 All Dart 22 All Arrow Fire 23 All Cannon Fire 24 All Spear Fire 25 All Dart Fire 26 All Laser 27 All Except Water Cavalry 28 All Except Water Packet Trebuchet 29 Water Smallest Trail 30 54. Unit Trait \u00b6 ID: 54 This is a combinable bit field. Controls the following properties: See Also: Trait Piece Property Flag Value Garrison Unit 1 Ship Unit 2 Build Another Building (Serjeants) 4 Transform Into Another Unit (Ratha) 8 Auto Scout Unit 16 56. Trait Piece \u00b6 ID: 56 This can be set to the ID of a unit that is used along with some of the Unit Traits See Also: Unit Trait Property Flag Value Unused 1 Unused 2 Build Unit 4 Transform Unit 8 Unused 16 57. Dead Unit ID \u00b6 ID: 57 This is the ID of the unit to spawn after the current unit dies. This is whats used to make the dismounted konniks possible 58. Hotkey ID \u00b6 ID: 58 This number determines which hotkey is assigned to a unit 59. Maximum Charge \u00b6 ID: 59 The maximum amount of charge that a unit can hold 60. Recharge Rate \u00b6 ID: 60 The rate of charge regeneration per second 61. Charge Event \u00b6 ID: 61 This action depletes the unit's charge Property Flag Value If charge type is set to 1 , 2 or 3 , depletes charge on attacking 1 62. Charge Type \u00b6 ID: 62 The type of charge that a unit holds Property Flag Value Attack charge 1 ??? charge 2 Area attack charge 3 Agility charge 4 63. Combat Ability \u00b6 ID: 63 Combinable bit field. Controls several attacking behaviours for units Property Flag Value Ignore melee and pierce armours of the targeted unit 1 Resist armour-ignoring attacks 2 Damage the targeted unit's armor (Obuch) 4 Attack ground ability 8 Bulk volley release (kipchak/siege weapons) 16 64. Attack Dispersion \u00b6 ID: 64 Half of the radius from the target unit in which missed projectiles fired by this unit can land in 65. Secondary Projectile Unit \u00b6 ID: 65 This is the ID of the secondary projectile that a unit fires (Chu Ko Nu) 66. Blood Unit \u00b6 ID: 66 This is the ID of a secondary unit to spawn after the current unit dies. This could potentially be used along with dead unit ID to spawn two units after a single unit dies 67. Projectile Hit Mode \u00b6 ID: 67 Controls how a projectile collides with units in the path of its target. Currently changing this through XS has no effect Property Flag Value Collide only with the targeted unit 0 Collide with any damage-able units in the path to the targetted unit 1 Collide with any unit in the path to the targetted unit 2 68. Projectile Vanish Mode \u00b6 ID: 68 Controls if a projectile passes through or disappears on impact. Currently changing this through XS has no effect Property Flag Value Disappear on first impact 0 Pass through 1 69. Projectile Arc \u00b6 ID: 69 Controls the maximum height of the fired projectile 100. Resource Costs \u00b6 ID: 100 Refers to the first resource cost of a unit. Refer to A.G.E. to see which resource cost that is 101. Train Time \u00b6 ID: 101 This is the amount of time it takes to create a unit 102. Total Missiles \u00b6 ID: 102 This is the number of projectiles a unit fires. The Chu Ko Nu fires 3 and the Elite Chu Ko Nu fires 5 103. Food Costs \u00b6 ID: 103 The food cost of a unit 104. Wood Costs \u00b6 ID: 104 The wood cost of a unit 105. Gold Costs \u00b6 ID: 105 The gold cost of a unit 106. Stone Costs \u00b6 ID: 106 The stone cost of a unit 107. Max Total Missiles \u00b6 ID: 107 The maximum number of projectiles a unit can fire when other units are garrisoned inside of it. A castle fires 5 projectiles by default but can fire more if units are garrisoned inside it. This attribute controls the maximum number of those 108. Garrison Heal Rate \u00b6 ID: 108 The rate measured in HP/s at which garissoned units are healed inside a given building 109. Regeneration Rate \u00b6 ID: 109 The rate measured in HP/minute at which units heal themselves. This value is overridden to 30 HP/minute if the flag for Self Regeneration is set in the Hero Status of a unit 110. Population \u00b6 ID: 110 Modifies the population headroom storage of a unit. Negative values = require population (units), positive values = give population (houses). This is not a real attribute that exists in A.G.E., just seems like a way to edit the population heardroom provided by a unit","title":"Attributes"},{"location":"general/attributes/attributes/#0-hit-points","text":"ID: 0 This attribute refers to the health of the units","title":"0. Hit Points"},{"location":"general/attributes/attributes/#1-line-of-sight","text":"ID: 1 This is the distance a unit can see around itself","title":"1. Line of Sight"},{"location":"general/attributes/attributes/#2-garrison-capacity","text":"ID: 2 This is the amount of units that can garrison inside another unit","title":"2. Garrison Capacity"},{"location":"general/attributes/attributes/#3-unit-size-x","text":"ID: 3 This determines the x-size of the unit's collision hitbox (width of the unit)","title":"3. Unit Size X"},{"location":"general/attributes/attributes/#4-unit-size-y","text":"ID: 4 This determines the y-size of the unit's collision hitbox (length of the unit)","title":"4. Unit Size Y"},{"location":"general/attributes/attributes/#5-movement-speed","text":"ID: 5 This is the movement speed of a unit, measured in tiles per second","title":"5. Movement Speed"},{"location":"general/attributes/attributes/#6-rotation-speed","text":"ID: 6 This is the rate at which units can rotate, measured in seconds per frame (this many seconds must pass before the object can switch to the next rotation frame). For example, for a trebuchet to start attacking a building facing the opposite direction, it has to rotate to face that way first","title":"6. Rotation Speed"},{"location":"general/attributes/attributes/#8-armor","text":"ID: 8 This is the quantity of armour a unit has on any of its Armour Classes . If you do not know what an Armour Class is, refer to the Damage Calculation section of this guide. Note that changing the armour through this option will show it as being added to the base armour amount. (for example: 4+4)","title":"8. Armor"},{"location":"general/attributes/attributes/#9-attack","text":"ID: 9 This is the quantity of attack a unit has on any of its Attack Classes . If you do not know what an Attack Class is, refer to the Damage Calculation section of this guide. Note that changing the attack through this option will show it as being added to the base attack amount. (for example: 6+2)","title":"9. Attack"},{"location":"general/attributes/attributes/#10-attack-reload-time","text":"ID: 10 This is the minimum time that must pass before a unit is able to fire another shot. For melee units it is the minimum time between two successive hits that they can do","title":"10. Attack Reload Time"},{"location":"general/attributes/attributes/#11-accuracy-percent","text":"ID: 11 This determines how accurately a unit can aim at another unit This accuracy is the accuracy of a unit to fire at the exact centre of its target. If the shot fired is not aimed at the exact centre of the target, it may still hit the target if its not off by too much since it can still land within the hitbox of the target, just not at the exact centre Thus, bigger targets are actually easier to hit, which explains why buildings are an easier target to hit for trebuchets than small units In this image, you can see that shots that were fired in the red area in the 2 nd scenario would've hit if the target had been closer like in the first scenario, but since the target is far away, they actually miss More technically, the visual angle of an object of the same size that is farther away is smaller, thus giving a smaller room for error for the shot in terms of the range of angles that will make the shot hit The chance of a unit getting converted by a monk is also determined by its accuracy If you modify an onager to have a big blast radius and give it a small accuracy, then attack a lot of units bunched together, the accuracy determines what percentage of units take damage from the blast of the onager! This is the reason why warwolf trebuchets get 100% accuracy because otherwise the blast wouldn't damage all of the units. Another interesting consequence of this is the delete trick with onagers and mangonels. This is where a mangonel is deleted immediately after it fires its shot and because a dead unit doesn't have an accuracy, it defaults to 100% and thus deals more damage to all the units in the blast radius Note: There are two other factors that play a role in determining the damage from the shot fired by the deleted mangonel The damage from a mangonel's shot is decreased over distance when moving outward from the centre of the blast (the targeted point). However, when the mangonel is deleted, this decrease over distance doesn't happen, and the projectile deals the full 100% damage to all the units in the blast radius! A shot that is fired from lower elevation would normally deal only 75% of its normal damage due to the elevation damage reduction. deleting a mangonel in this case also makes the damage the full 100% as if there was no elevation difference","title":"11. Accuracy Percent"},{"location":"general/attributes/attributes/#12-max-range","text":"ID: 12 This is the maximum range of a unit. Note that to be able to shoot at a target, it must be visible to the unit via its own line of sight or from another unit's line of sight","title":"12. Max Range"},{"location":"general/attributes/attributes/#13-work-rate","text":"ID: 13 This is the work rate for any unit that can do work. Villagers, Fishing Ships, Serjeants","title":"13. Work Rate"},{"location":"general/attributes/attributes/#14-carry-capacity","text":"ID: 14 This is the carry capacity of Villagers","title":"14. Carry Capacity"},{"location":"general/attributes/attributes/#15-base-armor","text":"ID: 15 This is the quantity of base armour a unit has on any of its Armour Classes . If you do not know what an Armour Class is, refer to the Damage Calculation section of this guide. Note that changing the armour through this option will show it as the base armour itself, and it will not be added to the regular amount","title":"15. Base Armor"},{"location":"general/attributes/attributes/#16-projectile-unit","text":"ID: 16 This is the ID of the projectile that a unit fires","title":"16. Projectile Unit"},{"location":"general/attributes/attributes/#17-building-icon-override","text":"ID: 17 The functionality of this attribute is unknown as it doesn't always behave certainly. If you know what this attribute does, please let the authors of this guide know!","title":"17. Building Icon Override"},{"location":"general/attributes/attributes/#18-terrain-defense-bonus","text":"ID: 18 Unknown... What does this attribute do?","title":"18. Terrain Defense Bonus"},{"location":"general/attributes/attributes/#19-projectile-smart-mode","text":"ID: 19 This is a combinable bit field. Controls the following two behaviours for projectiles: For example, if we set this property of the projectile used by an archer to 1 , it will have ballistics. (This is exactly what researching ballistics does in the first place). If we set this property to 2 , a missed projectile that hits another unit will deal its full damage instead of the 50% that it would normally do What if we want to enable both properties at once? This is achieved by adding the flag values for both of them together. Setting this property to 3 enables both effects Property Flag Value No Ballistics 0 Has Ballistics 1 Deals full damage on missed hit 2","title":"19. Projectile Smart Mode"},{"location":"general/attributes/attributes/#20-minimum-range","text":"ID: 20 The minimum distance a unit must be from an attacking unit for the attacking unit to be able to fire its projectile","title":"20. Minimum Range"},{"location":"general/attributes/attributes/#21-amount-of-1st-resource-storage","text":"ID: 21 This is the amount of 1 st resource contained in any unit. Refer to A.G.E. to see which resource this is for each unit","title":"21. Amount of 1st Resource Storage"},{"location":"general/attributes/attributes/#22-blast-width","text":"ID: 22 All enemy units inside this radius take damage from an attacking unit. This is used by elephants, Druzhina Halberdiers, and Logistica Cataphracts","title":"22. Blast Width"},{"location":"general/attributes/attributes/#23-search-radius","text":"ID: 23 The maximum distance at which a unit can detect and auto attack enemy units","title":"23. Search Radius"},{"location":"general/attributes/attributes/#24-bonus-damage-resistance","text":"ID: 24 Used by Sicilians for the 50% bonus damage resistance. Set to 0.5 for all Sicilian land military units except siege","title":"24. Bonus Damage Resistance"},{"location":"general/attributes/attributes/#25-icon-id","text":"ID: 25 The ID of the icon that you want a unit to show","title":"25. Icon ID"},{"location":"general/attributes/attributes/#26-amount-of-2nd-resource-storage","text":"ID: 26 This is the amount of 2 nd resource contained in any unit. Refer to A.G.E. to see which resource this is for each unit","title":"26. Amount of 2nd Resource Storage"},{"location":"general/attributes/attributes/#27-amount-of-3rd-resource-storage","text":"ID: 27 This is the amount of 3 rd resource contained in any unit. Refer to A.G.E. to see which resource this is for each unit","title":"27. Amount of 3rd Resource Storage"},{"location":"general/attributes/attributes/#28-fog-visibility","text":"ID: 28 Controls visibility of a unit through the fog of war Property Flag Value Not Visible 0 Always Visible 1 Visible If Alive 2 Inverted Visibility 3 Check Doppelganger 4","title":"28. Fog Visibility"},{"location":"general/attributes/attributes/#29-occlusion-mode","text":"ID: 29 This is a combinable bit field. Controls the outlines of units as seen through other units Property Flag Value No outline 0 Display outline when behind other units that have flag 2 1 Other units' outlines are rendered when they are behind this unit 2 Display outline on this unit's foundation when behind other units that have flag 2 4","title":"29. Occlusion Mode"},{"location":"general/attributes/attributes/#30-garrison-type","text":"ID: 30 This is a combinable bit field. Controls which units are able to garrison in a building. A unit needs to have the garrison in building task to be able to garrison in a building to begin with Property Flag Value Villagers 1 Infantry 2 Cavalry 4 Monks 8 Herdables 16 Siege 32 Ships 64","title":"30. Garrison Type"},{"location":"general/attributes/attributes/#32-unit-size-z","text":"ID: 32 This determines the z-size of the unit's collision hitbox (height of the unit)","title":"32. Unit Size Z"},{"location":"general/attributes/attributes/#40-hero-status","text":"ID: 40 This is a combinable bit field. Controls the following properties: For example, if we set the hero status of a knight to 2, a monk will not be able to convert it. If we set the hero status of a militia to 4, it will regenerate HP automatically What if we want to enable multiple properties at once? This is achieved by adding the flag values for those properties together and setting the hero status to that value. For example, if we want to make a paladin both unconvertable and regenerate HP automatically, we can set its hero status to 2+4 = 6. This means that the hero status of a unit can take on any values in the range 1-63. If you set it to any other value, it does not have any effect on the unit This works because notice that there is one and only one way to add different flag values together to obtain a particular value for the hero status! For example, if we have a value of 20 for the hero status of a unit, the only way to make 20 from the above flag values is to add 4 and 16. Thus, we know that the properties corresponding to the flag values 4 (self regeneration) and 16 (protected formation by default) must be enabled for that unit This is a consequence of the fact that every number can be represented as a unique sum of powers of two (binary numbers) Property Flag Value Full Hero Status 1 Cannot be Converted 2 Self Regeneration (30 HP/min) 4 Defensive Stance by Default 8 Protected Formation by Default 16 Safe Delete Confirmation 32 Hero Glow 64 Invert All Flags (except flag 1) 128","title":"40. Hero Status"},{"location":"general/attributes/attributes/#41-frame-delay","text":"ID: 41 The amount of delay between the point when the attacking animation starts and the actual hit happening for military units. This is what makes Cavalry Archers annoying to micro","title":"41. Frame Delay"},{"location":"general/attributes/attributes/#42-train-location","text":"ID: 42 The ID of the unit that trains any given unit. Barracks train Militia, so the train location of a Militia is the ID of the Barracks","title":"42. Train Location"},{"location":"general/attributes/attributes/#43-train-button","text":"ID: 43 The button used for training any given unit. For example, Militia are trained by using the first button, hence the Button Location of Militia is 1. This number ranges from 0-15","title":"43. Train Button"},{"location":"general/attributes/attributes/#44-blast-attack-level","text":"ID: 44 A unit deals blast damage to other units with equal or higher Blast Defense Level that are in its blast radius. For example, while mangonels (blast attack: 2) can damage your own units (blast defense of all player owned units is always 2), scorpions (blast attack: 3) cannot do the same One of the flags 0-3 can be combined with one of the flags from 4-64 by adding the two values Property Flag Value damage resources, nearby allied units and tress 0 damage trees, nearby allied units 1 damage nearby allied units 2 damage targeted unit only 3 Deal a fixed 5 HP of damage to nearby units 4 Deal 50% of unit's own damage to nearby units 8 Deal 25% of unit's own damage to nearby units 16 Deal 33% of unit's own damage to nearby units 32 Attenuate damage as distance from the centre of attack increases (infantry only) 64 Blast damage is dealt along the direction the unit is facing only. This area is a very narrow cone 128","title":"44. Blast Attack Level"},{"location":"general/attributes/attributes/#45-blast-defense-level","text":"ID: 45 A unit feels the blast damage from other units with equal or lower Blast Attack Level and if it is inside the attacker's blast radius. For example, while onagers (blast attack: 1) can cut trees (blast defense 1), mangonels (blast attack: 2) cannot do the same Property Flag Value damage resources, nearby allied units and tress 0 damage trees, nearby allied units 1 damage nearby allied units 2 damage targeted unit only 3","title":"45. Blast Defense Level"},{"location":"general/attributes/attributes/#46-shown-attack","text":"ID: 46 The amount of attack that is displayed as a unit's attack (may not actually be the true attack)","title":"46. Shown Attack"},{"location":"general/attributes/attributes/#47-shown-range","text":"ID: 47 The quantity that is displayed as a unit's attack ingame (may not actually be the true attack)","title":"47. Shown Range"},{"location":"general/attributes/attributes/#48-shown-melee-armor","text":"ID: 48 The quantity that is displayed as a unit's melee armour ingame (may not actually be the true armour)","title":"48. Shown Melee Armor"},{"location":"general/attributes/attributes/#49-shown-pierce-armor","text":"ID: 49 The quantity that is displayed as a unit's pierce armour ingame (may not actually be the true armour)","title":"49. Shown Pierce Armor"},{"location":"general/attributes/attributes/#50-object-name-id","text":"ID: 50 The string ID to use for the name of an object. A string ID is used for refering to strings that the game recognises by default. It can be used to automatically set names by using a value that the game recognises. Trying out the value 1 on a unit and seeing what happens is left as an excersise for the reader","title":"50. Object Name ID"},{"location":"general/attributes/attributes/#51-short-description-id","text":"ID: 51 The string ID for the Short Description of an object. A string ID is used for refering to strings that the game recognises by default. It can be used to automatically set a Short Description by using a value that the game recognises. Trying out the value 1 on a unit and seeing what happens is left as an excersise for the reader","title":"51. Short Description ID"},{"location":"general/attributes/attributes/#53-terrain-restriction-id","text":"ID: 53 This number determines how a unit interacts with terrains and which terrains it can walk on Property Flag Value All 0 Land And Shallows 1 Beach 2 Water Small Trail 3 Land 4 Nothing 5 Water No Trail 6 All Except Water 7 Land Except Farm 8 Nothing 2 9 Land And Beach 10 Land Except Farm 2 11 All Except Water Bridge Cannon 12 Water Medium Trail 13 All Except Water Bridge Arrow 14 Water Large Trail 15 Grass And Beach 16 Water And Bridge Except Beach 17 All Except Water Bridge Spear 18 Only Water And Ice 19 All Except Water Wheel 20 Shallow Water 21 All Dart 22 All Arrow Fire 23 All Cannon Fire 24 All Spear Fire 25 All Dart Fire 26 All Laser 27 All Except Water Cavalry 28 All Except Water Packet Trebuchet 29 Water Smallest Trail 30","title":"53. Terrain Restriction ID"},{"location":"general/attributes/attributes/#54-unit-trait","text":"ID: 54 This is a combinable bit field. Controls the following properties: See Also: Trait Piece Property Flag Value Garrison Unit 1 Ship Unit 2 Build Another Building (Serjeants) 4 Transform Into Another Unit (Ratha) 8 Auto Scout Unit 16","title":"54. Unit Trait"},{"location":"general/attributes/attributes/#56-trait-piece","text":"ID: 56 This can be set to the ID of a unit that is used along with some of the Unit Traits See Also: Unit Trait Property Flag Value Unused 1 Unused 2 Build Unit 4 Transform Unit 8 Unused 16","title":"56. Trait Piece"},{"location":"general/attributes/attributes/#57-dead-unit-id","text":"ID: 57 This is the ID of the unit to spawn after the current unit dies. This is whats used to make the dismounted konniks possible","title":"57. Dead Unit ID"},{"location":"general/attributes/attributes/#58-hotkey-id","text":"ID: 58 This number determines which hotkey is assigned to a unit","title":"58. Hotkey ID"},{"location":"general/attributes/attributes/#59-maximum-charge","text":"ID: 59 The maximum amount of charge that a unit can hold","title":"59. Maximum Charge"},{"location":"general/attributes/attributes/#60-recharge-rate","text":"ID: 60 The rate of charge regeneration per second","title":"60. Recharge Rate"},{"location":"general/attributes/attributes/#61-charge-event","text":"ID: 61 This action depletes the unit's charge Property Flag Value If charge type is set to 1 , 2 or 3 , depletes charge on attacking 1","title":"61. Charge Event"},{"location":"general/attributes/attributes/#62-charge-type","text":"ID: 62 The type of charge that a unit holds Property Flag Value Attack charge 1 ??? charge 2 Area attack charge 3 Agility charge 4","title":"62. Charge Type"},{"location":"general/attributes/attributes/#63-combat-ability","text":"ID: 63 Combinable bit field. Controls several attacking behaviours for units Property Flag Value Ignore melee and pierce armours of the targeted unit 1 Resist armour-ignoring attacks 2 Damage the targeted unit's armor (Obuch) 4 Attack ground ability 8 Bulk volley release (kipchak/siege weapons) 16","title":"63. Combat Ability"},{"location":"general/attributes/attributes/#64-attack-dispersion","text":"ID: 64 Half of the radius from the target unit in which missed projectiles fired by this unit can land in","title":"64. Attack Dispersion"},{"location":"general/attributes/attributes/#65-secondary-projectile-unit","text":"ID: 65 This is the ID of the secondary projectile that a unit fires (Chu Ko Nu)","title":"65. Secondary Projectile Unit"},{"location":"general/attributes/attributes/#66-blood-unit","text":"ID: 66 This is the ID of a secondary unit to spawn after the current unit dies. This could potentially be used along with dead unit ID to spawn two units after a single unit dies","title":"66. Blood Unit"},{"location":"general/attributes/attributes/#67-projectile-hit-mode","text":"ID: 67 Controls how a projectile collides with units in the path of its target. Currently changing this through XS has no effect Property Flag Value Collide only with the targeted unit 0 Collide with any damage-able units in the path to the targetted unit 1 Collide with any unit in the path to the targetted unit 2","title":"67. Projectile Hit Mode"},{"location":"general/attributes/attributes/#68-projectile-vanish-mode","text":"ID: 68 Controls if a projectile passes through or disappears on impact. Currently changing this through XS has no effect Property Flag Value Disappear on first impact 0 Pass through 1","title":"68. Projectile Vanish Mode"},{"location":"general/attributes/attributes/#69-projectile-arc","text":"ID: 69 Controls the maximum height of the fired projectile","title":"69. Projectile Arc"},{"location":"general/attributes/attributes/#100-resource-costs","text":"ID: 100 Refers to the first resource cost of a unit. Refer to A.G.E. to see which resource cost that is","title":"100. Resource Costs"},{"location":"general/attributes/attributes/#101-train-time","text":"ID: 101 This is the amount of time it takes to create a unit","title":"101. Train Time"},{"location":"general/attributes/attributes/#102-total-missiles","text":"ID: 102 This is the number of projectiles a unit fires. The Chu Ko Nu fires 3 and the Elite Chu Ko Nu fires 5","title":"102. Total Missiles"},{"location":"general/attributes/attributes/#103-food-costs","text":"ID: 103 The food cost of a unit","title":"103. Food Costs"},{"location":"general/attributes/attributes/#104-wood-costs","text":"ID: 104 The wood cost of a unit","title":"104. Wood Costs"},{"location":"general/attributes/attributes/#105-gold-costs","text":"ID: 105 The gold cost of a unit","title":"105. Gold Costs"},{"location":"general/attributes/attributes/#106-stone-costs","text":"ID: 106 The stone cost of a unit","title":"106. Stone Costs"},{"location":"general/attributes/attributes/#107-max-total-missiles","text":"ID: 107 The maximum number of projectiles a unit can fire when other units are garrisoned inside of it. A castle fires 5 projectiles by default but can fire more if units are garrisoned inside it. This attribute controls the maximum number of those","title":"107. Max Total Missiles"},{"location":"general/attributes/attributes/#108-garrison-heal-rate","text":"ID: 108 The rate measured in HP/s at which garissoned units are healed inside a given building","title":"108. Garrison Heal Rate"},{"location":"general/attributes/attributes/#109-regeneration-rate","text":"ID: 109 The rate measured in HP/minute at which units heal themselves. This value is overridden to 30 HP/minute if the flag for Self Regeneration is set in the Hero Status of a unit","title":"109. Regeneration Rate"},{"location":"general/attributes/attributes/#110-population","text":"ID: 110 Modifies the population headroom storage of a unit. Negative values = require population (units), positive values = give population (houses). This is not a real attribute that exists in A.G.E., just seems like a way to edit the population heardroom provided by a unit","title":"110. Population"},{"location":"general/hotkeys/hotkeys/","text":"Hotkeys \u00b6 Written by: Alian713 1. What is a hotkey? \u00b6 A hotkey is a key or combination of keys that can be pressed to allow for quick execution of certain tasks. For example, pressing Ctrl+1 allows you to set a control group of units that you can then quickly select by pressing 1 . The standard way to bind hotkeys to units and actions is to assign them through the ingame menu. While this works great for the standard ingame units, what if you want to give hotkeys to a unit when you are making a custom scenario, a random map with custom units or a mod? 2. About Hotkey IDs \u00b6 Every standard unit in the game has a \"Hotkey ID\" that tells the game which key is needed to be pressed for the hotkey. you can check A.G.E. to see what the value for the Hotkey ID for each unit is. If you do not know what A.G.E. is, refer to the Data Mods section of this guide. Setting one unit's hotkey ID to the same value as another unit will make the hotkey for the first unit the same as the second unit. For example, if you set the hotkey ID for militia to the same value as villagers, then the hotkey for creating militia will become the same as the one used for creating villagers. Similarly, if you set one building's hotkey ID to the same value as another building, it will make the hotkey for the first building the same as the second building. For example, if you set the hotkey ID for stables to the same value as houses, then the hotkey for creating stables will become the same as the one used for creating houses. Note that the above hotkeys can be different for different players. However, if you set a unit's hotkey ID to a building's hotkey ID (or vice versa) it won't actually assign the expected hotkey to the unit. In this case the hotkey assigned to the unit or building is a different, fixed key, which does not change for different players . For example, setting a villager's hotkey ID to the same as a house will always make the villager use Q as its hotkeys. How do we know which key this is going to be? This key is determined by the first character of the string (the text within quotes) corresponding to the hotkey ID in the file called key-value-strings-utf8.txt located in this directory: 1 PATH_TO_DE_FOLDER/AoE2DE/resources/en/strings/key-value/ If we search for the value 16344 in this file, which is the hotkey ID of the house, it can be seen that the string corresponding to it is \"Q\" and its first character is Q which is the hotkey that is used in this case. In fact, we can actually use any number from this file as a hotkey ID and the hotkey set by it is determined by the first character of the corresponding string. For example, the value 15188 has the string \"Gold Score\" corresponding to it, and its first character is G . This means the value 15188 sets the key G as the hotkey. Sometimes, the numbers in this file will have strings whoes starting characters are special characters. In this case, a different hotkey (this remains the same for a particular starting character) is used. The table below contains every unique starting character present in the strings file and the key that it corresponds to. 3. First Character of String ID to Hotkey Reference \u00b6 String ID Starting Character Hotkey Key 10101 SPACE 15000 ! PAGE UP 2312 % LEFT ARROW 19707 ' RIGHT ARROW 19731 ( DOWN ARROW 9025 - INSERT 19602 . DELETE 99 0 ZERO 98 1 ONE 10360 2 TWO 9786 3 THREE 10362 4 FOUR 9785 5 FIVE 213 6 SIX 8828 7 SEVEN 9448 8 EIGHT 9783 9 NINE 1001 A A 1005 B B 1201 C C 1151 D D 1007 E E 4137 F F 2012 G G 2407 H H 1212 I I 1222 J J 4141 K K 1101 L L 1006 M M 3001 N N 214 O O 1210 P P 4169 Q Q 1200 R R 1102 S S 2016 T T 1205 U U 1150 V V 1008 W W 1002 X X 2008 Y Y 4174 Z Z 19704 ] APPLICATION 19721 ` NUM ZERO 4563 a NUM ONE 19499 d NUM FOUR 5558 e NUM FIVE 10069 g NUM SEVEN 1011 h NUM EIGHT 20123 n NUM DELETE 9798 r F3 22019 s F4 9840 v F7 1152 w F8 10661 ~ F15","title":"Hotkeys"},{"location":"general/hotkeys/hotkeys/#hotkeys","text":"Written by: Alian713","title":"Hotkeys"},{"location":"general/hotkeys/hotkeys/#1-what-is-a-hotkey","text":"A hotkey is a key or combination of keys that can be pressed to allow for quick execution of certain tasks. For example, pressing Ctrl+1 allows you to set a control group of units that you can then quickly select by pressing 1 . The standard way to bind hotkeys to units and actions is to assign them through the ingame menu. While this works great for the standard ingame units, what if you want to give hotkeys to a unit when you are making a custom scenario, a random map with custom units or a mod?","title":"1. What is a hotkey?"},{"location":"general/hotkeys/hotkeys/#2-about-hotkey-ids","text":"Every standard unit in the game has a \"Hotkey ID\" that tells the game which key is needed to be pressed for the hotkey. you can check A.G.E. to see what the value for the Hotkey ID for each unit is. If you do not know what A.G.E. is, refer to the Data Mods section of this guide. Setting one unit's hotkey ID to the same value as another unit will make the hotkey for the first unit the same as the second unit. For example, if you set the hotkey ID for militia to the same value as villagers, then the hotkey for creating militia will become the same as the one used for creating villagers. Similarly, if you set one building's hotkey ID to the same value as another building, it will make the hotkey for the first building the same as the second building. For example, if you set the hotkey ID for stables to the same value as houses, then the hotkey for creating stables will become the same as the one used for creating houses. Note that the above hotkeys can be different for different players. However, if you set a unit's hotkey ID to a building's hotkey ID (or vice versa) it won't actually assign the expected hotkey to the unit. In this case the hotkey assigned to the unit or building is a different, fixed key, which does not change for different players . For example, setting a villager's hotkey ID to the same as a house will always make the villager use Q as its hotkeys. How do we know which key this is going to be? This key is determined by the first character of the string (the text within quotes) corresponding to the hotkey ID in the file called key-value-strings-utf8.txt located in this directory: 1 PATH_TO_DE_FOLDER/AoE2DE/resources/en/strings/key-value/ If we search for the value 16344 in this file, which is the hotkey ID of the house, it can be seen that the string corresponding to it is \"Q\" and its first character is Q which is the hotkey that is used in this case. In fact, we can actually use any number from this file as a hotkey ID and the hotkey set by it is determined by the first character of the corresponding string. For example, the value 15188 has the string \"Gold Score\" corresponding to it, and its first character is G . This means the value 15188 sets the key G as the hotkey. Sometimes, the numbers in this file will have strings whoes starting characters are special characters. In this case, a different hotkey (this remains the same for a particular starting character) is used. The table below contains every unique starting character present in the strings file and the key that it corresponds to.","title":"2. About Hotkey IDs"},{"location":"general/hotkeys/hotkeys/#3-first-character-of-string-id-to-hotkey-reference","text":"String ID Starting Character Hotkey Key 10101 SPACE 15000 ! PAGE UP 2312 % LEFT ARROW 19707 ' RIGHT ARROW 19731 ( DOWN ARROW 9025 - INSERT 19602 . DELETE 99 0 ZERO 98 1 ONE 10360 2 TWO 9786 3 THREE 10362 4 FOUR 9785 5 FIVE 213 6 SIX 8828 7 SEVEN 9448 8 EIGHT 9783 9 NINE 1001 A A 1005 B B 1201 C C 1151 D D 1007 E E 4137 F F 2012 G G 2407 H H 1212 I I 1222 J J 4141 K K 1101 L L 1006 M M 3001 N N 214 O O 1210 P P 4169 Q Q 1200 R R 1102 S S 2016 T T 1205 U U 1150 V V 1008 W W 1002 X X 2008 Y Y 4174 Z Z 19704 ] APPLICATION 19721 ` NUM ZERO 4563 a NUM ONE 19499 d NUM FOUR 5558 e NUM FIVE 10069 g NUM SEVEN 1011 h NUM EIGHT 20123 n NUM DELETE 9798 r F3 22019 s F4 9840 v F7 1152 w F8 10661 ~ F15","title":"3. First Character of String ID to Hotkey Reference"},{"location":"general/resources/resources/","text":"Player Resources \u00b6 Written by: Alian713 & Bradical This page is a list of all the player resources in the scenario editor and their purposes. If you know of any resources that are not written on this page, or if the descriptions of the resources are wrong, please let the authors of this guide know! 0. !Food Storage \u00b6 ID: 0 Purpose: Current food amount 1. !Wood Storage \u00b6 ID: 1 Purpose: Current wood amount 2. !Stone Storage \u00b6 ID: 2 Purpose: Current stone amount 3. !Gold Storage \u00b6 ID: 3 Purpose: Current gold amount 4. Population Headroom \u00b6 ID: 4 Purpose: Amount of free population space. Note that this is NOT the population cap 5. Conversion Range \u00b6 ID: 5 Purpose: Unknown... What does this resource do? 6. Current Age \u00b6 ID: 6 Purpose: Controls the age name and icon at the top of the screen Default Values: 0: Dark Age 1: Feudal Age 2: Castle Age 3: Imperial Age Note: Setting this to an amount higher than 3 cycles the icon but keeps the age at imperial 7. Relics Captured \u00b6 ID: 7 Purpose: Number of relics held 8. Unused Resource 008 \u00b6 ID: 8 Purpose: Unused 9. Trade Goods \u00b6 ID: 9 Purpose: Unused 10. Unused Resource 010 \u00b6 ID: 10 Purpose: Unused 11. Current Population \u00b6 ID: 11 Purpose: The current population 12. Corpse Decay Time \u00b6 ID: 12 Purpose: Unknown... What does this resource do? 13. Remarkable Discovery \u00b6 ID: 13 Purpose: Unknown... What does this resource do? 14. Monuments Captured \u00b6 ID: 14 Purpose: Number of monuments owned 15. Meat Storage \u00b6 ID: 15 Purpose: Unknown... What does this resource do? 16. Berry Storage \u00b6 ID: 16 Purpose: Unknown... What does this resource do? 17. Fish Storage \u00b6 ID: 17 Purpose: Unknown... What does this resource do? 18. Unused Resource 018 \u00b6 ID: 18 Purpose: Unused 19. Total Units Owned \u00b6 ID: 19 Purpose: Total units owned, excluding buildings 20. Units Killed \u00b6 ID: 20 Purpose: Total units killed, excluding buildings 21. Technology Count \u00b6 ID: 21 Purpose: Number of technologies researched till now 22. % Map Explored \u00b6 ID: 22 Purpose: Percentage of the map explored 23. Castle Age Tech ID \u00b6 ID: 23 Purpose: Always 102 Note: Nothing happens when you change this, probably for mods only 24. Imperial Age Tech ID \u00b6 ID: 24 Purpose: Always 103 Note: Nothing happens when you change this, probably for mods only 25. Feudal Age Tech ID \u00b6 ID: 25 Purpose: Always 101 Note: Nothing happens when you change this, probably for mods only 26. Attack Warning Sound ID \u00b6 ID: 26 Purpose: Always 0 Note: Nothing happens when you change this, probably for mods only 27. Enable Monk Conversion \u00b6 ID: 27 Purpose: Boolean: allow enemy monk conversions Default Values: 0: No (default) \\(\\geq\\) 1: Yes, after Atonement 28. Enable Building Conversion \u00b6 ID: 28 Purpose: Boolean: allow enemy building conversions Default Values: 0: No (default) 1: Yes, after Redemption \\(\\geq\\) 2: Monks can convert buildings from range 29. Unused Resource 029 \u00b6 ID: 29 Purpose: Unused 30. Unused Resource 030 \u00b6 ID: 30 Purpose: Unused 31. Unused Resource 031 \u00b6 ID: 31 Purpose: Unused 32. Bonus Population Cap \u00b6 ID: 32 Purpose: Additional pop space to grant on top of maximum pop cap Note: 10 for goths 33. Food Maintenance \u00b6 ID: 33 Purpose: Unknown... What does this resource do? 34. Faith \u00b6 ID: 34 Purpose: Unknown... What does this resource do? 35. Faith Recharging Rate \u00b6 ID: 35 Purpose: Monk faith recovery rate Default Values: 1: The unit of measurement for this rate is unknown 36. Farm Food Amount \u00b6 ID: 36 Purpose: Maximum farm food amount Default Values: 175: Default 220: Chinese Note: This is what horse collar etc. technologies modify 37. Civilian Population \u00b6 ID: 37 Purpose: Current civilian population 38. Unused Resource 038 \u00b6 ID: 38 Purpose: Unused 39. All Techs Achieved \u00b6 ID: 39 Purpose: Boolean: If all available technologies have been researched Default Values: 0: No 1: Yes 40. Military Population \u00b6 ID: 40 Purpose: Current military popupation 41. Conversions \u00b6 ID: 41 Purpose: Number of units converted 42. Standing Wonders \u00b6 ID: 42 Purpose: Number of standing wonders 43. Razings \u00b6 ID: 43 Purpose: Number of buildings razed 44. Kill Ratio \u00b6 ID: 44 Purpose: This is the number of units lost subtracted from the number of units killed in total 45. Survival to Finish \u00b6 ID: 45 Purpose: Boolean: This is set to 0 under the same conditions which are required to defeat a player Default Values: 0: No 1: Yes 46. Tribute Inefficiency \u00b6 ID: 46 Purpose: This is the fraction of tributes sent that are collected as tax Default Values: 0.3: Default 0.2: After Coinage 0: After Banking 47. Gold Mining Productivity \u00b6 ID: 47 Purpose: Multiplier for gold mined by gold miners Default Values: 1: Default 1.15: Mayans Note: Since this works by multiplying the amount of resources gathered by a villager, it has a side effect of increasing the gather rate. In the case of Mayans, This is compensated for by reducing villager work rate by 15% 48. Town Center Unavailable \u00b6 ID: 48 Purpose: Boolean: allow building extra tcs Default Values: 0: No (Sudden Death) 1: Yes (Normal) 49. Gold Counter \u00b6 ID: 49 Purpose: Total gold collected 50. Reveal Ally \u00b6 ID: 50 Purpose: Boolean: show ally los for the source player Default Values: 0: No (default) 1: Yes, after Cartography or with a Portuguese ally Note: Once set to 1 , setting it back to 0 won't take away the LoS of allies 51. Unused Resource 051 \u00b6 ID: 51 Purpose: Unused 52. Monasteries \u00b6 ID: 52 Purpose: Number of monasteries 53. Tribute Sent \u00b6 ID: 53 Purpose: Total of all resources tributed to others. This does not count taxes paid on tributing 54. All Monuments Captured \u00b6 ID: 54 Purpose: Boolean: all monuments on the map captured Default Values: 0: No 1: Yes 55. All Relics Captured \u00b6 ID: 55 Purpose: Boolean: all relics on the map captured Default Values: 0: No 1: Yes 56. Ore Storage \u00b6 ID: 56 Purpose: Unused 57. Kidnap Storage \u00b6 ID: 57 Purpose: Number of units kidnapped Note: This is probably only used by mods, this usage may be incorrect 58. Dark Age Tech ID \u00b6 ID: 58 Purpose: Always 104 Note: Nothing happens when you change this 59. Unused Resource 059 \u00b6 ID: 59 Purpose: Unused 60. Unused Resource 060 \u00b6 ID: 60 Purpose: Unused 61. Unused Resource 061 \u00b6 ID: 61 Purpose: Unused 62. Building Housing Rate \u00b6 ID: 62 Purpose: Unknown... What does this resource do? 63. Tax Gather Rate \u00b6 ID: 63 Purpose: Unknown... What does this resource do? 64. Gather Accumulator \u00b6 ID: 64 Purpose: Unknown... What does this resource do? 65. Salvage Decay Rate \u00b6 ID: 65 Purpose: Unknown... What does this resource do? 66. Unused Resource 066 \u00b6 ID: 66 Purpose: Unused 67. Can Convert \u00b6 ID: 67 Purpose: Boolean: monks can convert enemy units Default Values: 0: No 1: Yes (default) 68. Hit Points Killed \u00b6 ID: 68 Purpose: Cumulative hp of all units killed 69. Killed P1 \u00b6 ID: 69 Purpose: Number of player 1 units killed 70. Killed P2 \u00b6 ID: 70 Purpose: Number of player 2 units killed 71. Killed P3 \u00b6 ID: 71 Purpose: Number of player 3 units killed 72. Killed P4 \u00b6 ID: 72 Purpose: Number of player 4 units killed 73. Killed P5 \u00b6 ID: 73 Purpose: Number of player 5 units killed 74. Killed P6 \u00b6 ID: 74 Purpose: Number of player 6 units killed 75. Killed P7 \u00b6 ID: 75 Purpose: Number of player 7 units killed 76. Killed P8 \u00b6 ID: 76 Purpose: Number of player 8 units killed 77. Conversion Resistance \u00b6 ID: 77 Purpose: Coefficient of conversion resistance Default Values: 0: Default +2: with Teuton ally +3: after Faith Note: Probability of conversion is divided by this value for ALL source player units, Teuton team bonus for conversion resistance works by increasing this 78. Trade Vig Rate \u00b6 ID: 78 Purpose: Market exchange rate fraction for the source player Default Values: 0.3: Default 0.15: after Guilds 0.05: Saracens 79. Stone Mining Productivity \u00b6 ID: 79 Purpose: Multiplier for stone mined by stone miners Default Values: 1: Default 1.15: Mayans Note: Since this works by multiplying the amount of resources gathered by a villager, it has a side effect of increasing the gather rate. In the case of Mayans, This is compensated for by reducing villager work rate by 15% 80. Queued Units \u00b6 ID: 80 Purpose: Amount of units in queue Note: Note that only the units waiting to be trained are considered in the queue so if an archery range has 3 archers being made, there is 1 archer that is being trained and 2 archers that are in queue 81. Training Count \u00b6 ID: 81 Purpose: Amount of units being trained Note: Note that only the FIRST unit in each building is considered as being trained so if a town centre has 4 villagers being made, there is 1 archer that is being trained and 3 villagers that are in queue 82. Start with Unit 444 (PTWC) \u00b6 ID: 82 Purpose: Boolean: started with PTWC Note: Setting this to 1 in an RMS allows for starting with PTWC. Manually changing this in the editor does nothing 83. Boarding Recharge Rate \u00b6 ID: 83 Purpose: ABGAL faith recharge rate amount Note: This is similar to monk's faith except for a special ship unit 536 called the ABGAL in the editor that can convert ships form 1 range away 84. Starting Villagers \u00b6 ID: 84 Purpose: Number of starting villagers Default Values: 3: Default 4: Mayans 6: Chinese Note: Only works for RMS, changing this manually in the editor does nothing 85. Research Cost Modifier \u00b6 ID: 85 Purpose: Multiply technology costs by this value Default Values: 1: Default 0.9: Chinese in feudal age 0.85: Chinese in castle age 0.80: Chinese in imperial age 86. Research Time Modifier \u00b6 ID: 86 Purpose: Multiply technology research times by this value 87. Convert Boats \u00b6 ID: 87 Purpose: Boolean: allow monks to convert boats Default Values: 0: No 1: Yes (default) 88. Fish Trap Food Amount \u00b6 ID: 88 Purpose: Maximum fishtrap food amount Default Values: 710: Default 2130: Malay 89. Heal Rate Modifier \u00b6 ID: 89 Purpose: Monk healing rate modifier Default Values: 0: The unit of measuremeant for this is unknown 90. Healing Range \u00b6 ID: 90 Purpose: Monk heal range Default Values: 4: Tiles 91. Starting Food \u00b6 ID: 91 Purpose: Starting food amount Note: Only works for RMS, changing this manually in the editor does nothing but its a way to check starting food amount 92. Starting Wood \u00b6 ID: 92 Purpose: Starting wood amount Note: Only works for RMS, changing this manually in the editor does nothing but its a way to check starting wood amount 93. Starting Stone \u00b6 ID: 93 Purpose: Starting stone amount Note: Only works for RMS, changing this manually in the editor does nothing but its a way to check starting stone amount 94. Starting Gold \u00b6 ID: 94 Purpose: Starting gold amount Note: Only works for RMS, changing this manually in the editor does nothing but its a way to check starting gold amount 95. Enable PTWC / Kidnap / Loot \u00b6 ID: 95 Purpose: Enable town centre packing for the source player Default Values: 0: Default 1: Allows the TC to be packed and moved \\(\\geq\\) 2: No noticeable effect Note: Enabling kidnap/loot requires modding the units to have the kidnap/pillage action 96. No Dropsite Farmers \u00b6 ID: 96 Purpose: Enable Khmer farmer bonus Default Values: 0: Default 1: Khmer. Farmers no longer need dropoff and steadily gain resources while farming 97. Dominant Sheep Control \u00b6 ID: 97 Purpose: Boolean: force sheep conversion Default Values: 0: Default \\(\\geq\\) 1: Celts Note: If this is set to a non zero value, other players' sheep convert to you even if they have a unit in their LOS, unless this is also a non zero value for them. Celt sheep bonus 98. Building Cost Sum \u00b6 ID: 98 Purpose: Total cost of all units and buildings owned 99. Tech Cost Sum \u00b6 ID: 99 Purpose: Total cost of all researches researched 100. Relic Income Sum \u00b6 ID: 100 Purpose: Total relic gold generated 101. Trade Income Sum \u00b6 ID: 101 Purpose: Total trade gold generated 102. P1 Tribute \u00b6 ID: 102 Purpose: Amount of resources tributed to player 1 103. P2 Tribute \u00b6 ID: 103 Purpose: Amount of resources tributed to player 2 104. P3 Tribute \u00b6 ID: 104 Purpose: Amount of resources tributed to player 3 105. P4 Tribute \u00b6 ID: 105 Purpose: Amount of resources tributed to player 4 106. P5 Tribute \u00b6 ID: 106 Purpose: Amount of resources tributed to player 5 107. P6 Tribute \u00b6 ID: 107 Purpose: Amount of resources tributed to player 6 108. P7 Tribute \u00b6 ID: 108 Purpose: Amount of resources tributed to player 7 109. P8 Tribute \u00b6 ID: 109 Purpose: Amount of resources tributed to player 8 110. P1 Kill Value \u00b6 ID: 110 Purpose: Total cost of all units killed of player 1 111. P2 Kill Value \u00b6 ID: 111 Purpose: Total cost of all units killed of player 2 112. P3 Kill Value \u00b6 ID: 112 Purpose: Total cost of all units killed of player 3 113. P4 Kill Value \u00b6 ID: 113 Purpose: Total cost of all units killed of player 4 114. P5 Kill Value \u00b6 ID: 114 Purpose: Total cost of all units killed of player 5 115. P6 Kill Value \u00b6 ID: 115 Purpose: Total cost of all units killed of player 6 116. P7 Kill Value \u00b6 ID: 116 Purpose: Total cost of all units killed of player 7 117. P8 Kill Value \u00b6 ID: 117 Purpose: Total cost of all units killed of player 8 118. P1 Razings \u00b6 ID: 118 Purpose: Number of buildings destroyed of player 1 119. P2 Razings \u00b6 ID: 119 Purpose: Number of buildings destroyed of player 2 120. P3 Razings \u00b6 ID: 120 Purpose: Number of buildings destroyed of player 3 121. P4 Razings \u00b6 ID: 121 Purpose: Number of buildings destroyed of player 4 122. P5 Razings \u00b6 ID: 122 Purpose: Number of buildings destroyed of player 5 123. P6 Razings \u00b6 ID: 123 Purpose: Number of buildings destroyed of player 6 124. P7 Razings \u00b6 ID: 124 Purpose: Number of buildings destroyed of player 7 125. P8 Razings \u00b6 ID: 125 Purpose: Number of buildings destroyed of player 8 126. P1 Razing Value \u00b6 ID: 126 Purpose: Total cost of all buildings destroyed of player 1 127. P2 Razing Value \u00b6 ID: 127 Purpose: Total cost of all buildings destroyed of player 2 128. P3 Razing Value \u00b6 ID: 128 Purpose: Total cost of all buildings destroyed of player 3 129. P4 Razing Value \u00b6 ID: 129 Purpose: Total cost of all buildings destroyed of player 4 130. P5 Razing Value \u00b6 ID: 130 Purpose: Total cost of all buildings destroyed of player 5 131. P6 Razing Value \u00b6 ID: 131 Purpose: Total cost of all buildings destroyed of player 6 132. P7 Razing Value \u00b6 ID: 132 Purpose: Total cost of all buildings destroyed of player 7 133. P8 Razing Value \u00b6 ID: 133 Purpose: Total cost of all buildings destroyed of player 8 134. Standing Castles \u00b6 ID: 134 Purpose: Number of standing castles 135. Hit Points Razed \u00b6 ID: 135 Purpose: Total HP of all buildings destroyed 136. Kills by P1 \u00b6 ID: 136 Purpose: Number of own units killed by player 1 137. Kills by P2 \u00b6 ID: 137 Purpose: Number of own units killed by player 2 138. Kills by P3 \u00b6 ID: 138 Purpose: Number of own units killed by player 3 139. Kills by P4 \u00b6 ID: 139 Purpose: Number of own units killed by player 4 140. Kills by P5 \u00b6 ID: 140 Purpose: Number of own units killed by player 5 141. Kills by P6 \u00b6 ID: 141 Purpose: Number of own units killed by player 6 142. Kills by P7 \u00b6 ID: 142 Purpose: Number of own units killed by player 7 143. Kills by P8 \u00b6 ID: 143 Purpose: Number of own units killed by player 8 144. Razings by P1 \u00b6 ID: 144 Purpose: Number of own buildings destroyed by player 1 145. Razings by P2 \u00b6 ID: 145 Purpose: Number of own buildings destroyed by player 2 146. Razings by P3 \u00b6 ID: 146 Purpose: Number of own buildings destroyed by player 3 147. Razings by P4 \u00b6 ID: 147 Purpose: Number of own buildings destroyed by player 4 148. Razings by P5 \u00b6 ID: 148 Purpose: Number of own buildings destroyed by player 5 149. Razings by P6 \u00b6 ID: 149 Purpose: Number of own buildings destroyed by player 6 150. Razings by P7 \u00b6 ID: 150 Purpose: Number of own buildings destroyed by player 7 151. Razings by P8 \u00b6 ID: 151 Purpose: Number of own buildings destroyed by player 8 152. Value Killed by Others \u00b6 ID: 152 Purpose: Total cost of all own units lost 153. Value Razed by Others \u00b6 ID: 153 Purpose: Total cost of all own buildings lost 154. Killed by Others \u00b6 ID: 154 Purpose: Number of own units killed by other players 155. Razed by Others \u00b6 ID: 155 Purpose: Number of own buildings destroyed by other players 156. Tribute from P1 \u00b6 ID: 156 Purpose: Tribute received from player 1 157. Tribute from P2 \u00b6 ID: 157 Purpose: Tribute received from player 2 158. Tribute from P3 \u00b6 ID: 158 Purpose: Tribute received from player 3 159. Tribute from P4 \u00b6 ID: 159 Purpose: Tribute received from player 4 160. Tribute from P5 \u00b6 ID: 160 Purpose: Tribute received from player 5 161. Tribute from P6 \u00b6 ID: 161 Purpose: Tribute received from player 6 162. Tribute from P7 \u00b6 ID: 162 Purpose: Tribute received from player 7 163. Tribute from P8 \u00b6 ID: 163 Purpose: Tribute received from player 8 164. Value Current Units \u00b6 ID: 164 Purpose: Total cost of all own alive units 165. Value Current Buildings \u00b6 ID: 165 Purpose: Total cost of all own standing buildings 166. Food Total \u00b6 ID: 166 Purpose: Total food collected 167. Wood Total \u00b6 ID: 167 Purpose: Total wood collected 168. Stone Total \u00b6 ID: 168 Purpose: Total stone collected 169. Gold Total \u00b6 ID: 169 Purpose: Total gold collected 170. Total Value of Kills \u00b6 ID: 170 Purpose: Total cost of all units killed 171. Total Tribute Received \u00b6 ID: 171 Purpose: Total of all resources received in tribute 172. Total Value of Razings \u00b6 ID: 172 Purpose: Total cost of all buildings destroyed 173. Total Castles Built \u00b6 ID: 173 Purpose: Number of total castles built 174. Total Wonders Built \u00b6 ID: 174 Purpose: Number of total wonders built 175. Tribute score \u00b6 ID: 175 Purpose: Total amount of resources sent in tribute including taxes. 10% of this is counted towards the economy score 176. Convert Min Adjustment \u00b6 ID: 176 Purpose: Additional monk seconds needed before a conversion is even possible Note: A great explanation of how this works here by T-West 177. Convert Max Adjustment \u00b6 ID: 177 Purpose: Additional monk seconds needed before a conversion is forced Note: A great explanation of how this works here by T-West 178. Convert Resist Min Adjustment \u00b6 ID: 178 Purpose: Additional monk seconds needed before conversion by enemy monks is even possible Note: A great explanation of how this works here by T-West 179. Convert Resist Max Adjustment \u00b6 ID: 179 Purpose: Additional monk seconds needed before conversion by enemy monks is forced Note: A great explanation of how this works here by T-West 180. Convert Building Min \u00b6 ID: 180 Purpose: Minimum time required to convert a building Note: A great explanation of how this works here by T-West 181. Convert Building Max \u00b6 ID: 181 Purpose: Maximum time required to convert a building Note: A great explanation for how this works here by T-West 182. Convert Building Chance \u00b6 ID: 182 Purpose: Percent chance for monks to convert buildings Note: A great explanation for how this works here by T-West 183. Reveal Enemy \u00b6 ID: 183 Purpose: Boolean: show enemy los for the source player Default Values: 0: No (default) 1: Yes, after Spies Note: Once set to 1 , setting it back to 0 won't take away LoS of enemies! 184. Value Wonders Castles \u00b6 ID: 184 Purpose: Total cost of all wonders and castles constructed 185. Food Score \u00b6 ID: 185 Purpose: Unknown... what does this resource do? 186. Wood Score \u00b6 ID: 186 Purpose: Unknown... what does this resource do? 187. Stone Score \u00b6 ID: 187 Purpose: Unknown... what does this resource do? 188. Gold Score \u00b6 ID: 188 Purpose: Unknown... what does this resource do? 189. Chopping Productivity \u00b6 ID: 189 Purpose: Multiplier for wood chopped by lumberjacks Default Values: 1: Default 1.15: Mayans Note: Since this works by multiplying the amount of resources gathered by a villager, it has a side effect of increasing the gather rate. In the case of Mayans, This is compensated for by reducing villager work rate by 15% 190. Food Gathering Productivity \u00b6 ID: 190 Purpose: Multiplier for food gathered from all sources Default Values: 1: Default 1.15: Mayans Note: Since this works by multiplying the amount of resources gathered by a villager, it has a side effect of increasing the gather rate. In the case of Mayans, This is compensated for by reducing villager work rate by 15%. The work rate for farmers is reduced by about 23.4% 191. Relic Gold Production Rate \u00b6 ID: 191 Purpose: Relic gold generation rate in gold per minute Default Values: 30: Default. 30 gold per minute (0.5 gold per second) 15: After getting hit with Atheism 192. Converted Units Die \u00b6 ID: 192 Purpose: Boolean: converted units die instead of switching over to the enemy Default Values: 0: No (default) 1: Yes, after Heresey 193. Theocracy \u00b6 ID: 193 Purpose: Boolean: only one monk needs to regen faith after group conversion for the source player Default Values: 0: No (default) 1: Yes, after researching Theocracy 194. Crenellations \u00b6 ID: 194 Purpose: Boolean: Garrisoned infantry fire arrows Default Values: 0: No (default) 1: Yes, after crenellations 195. Construction Rate Modifier \u00b6 ID: 195 Purpose: Builder work rate multiplier Default Values: 0: Default 1.3: Spanish Note: The actual work rate for builders is given by construction_rate_mod * builder.default_work_rate 196. Hun Wonder Discount \u00b6 ID: 196 Purpose: Additional time required for relic/wonder victories in one tenth of a year Default Values: 0: default 1000: (100 years) for the Hun player, after researching atheism. The value of this resource of each player is added to determine the total extra time for relic/wonder victories, i.e. it adds up if multiple hun players get the tech Note: Internally, relic and wonder victory countdowns are measured in one tenths of an year, the fractional part is just not shown ingame 197. Spies Discount \u00b6 ID: 197 Purpose: Boolean: Halves the cost of spies per villager, and caps it at 15k gold max instead of the usual 30k Default Values: 0: Default 198. Unused Resource 198 \u00b6 ID: 198 Purpose: Unused 199. Unused Resource 199 \u00b6 ID: 199 Purpose: Unused 200. Unused Resource 200 \u00b6 ID: 200 Purpose: Unused 201. Unused Resource 201 \u00b6 ID: 201 Purpose: Unused 202. Unused Resource 202 \u00b6 ID: 202 Purpose: Unused 203. Unused Resource 203 \u00b6 ID: 203 Purpose: Unused 204. Unused Resource 204 \u00b6 ID: 204 Purpose: Unused 205. Feitoria Food Productivity \u00b6 ID: 205 Purpose: Feitoria food production rate multiplier Default Values: 1: Default Note: The amount of food obtained from owning n number of Feitorias is given by n * feitoria_food_productivity * 1.6 206. Feitoria Wood Productivity \u00b6 ID: 206 Purpose: Feitoria wood production rate multiplier Default Values: 1: Default Note: The amount of wood obtained from owning n number of Feitorias is given by n * feitoria_wood_productivity * 0.7 207. Feitoria Stone Productivity \u00b6 ID: 207 Purpose: Feitoria stone production rate multiplier Default Values: 1: Default Note: The amount of stone obtained from owning n number of Feitorias is given by n * feitoria_stone_productivity * 0.3 208. Feitoria Gold Productivity \u00b6 ID: 208 Purpose: Feitoria gold production rate multiplier Default Values: 1: Default Note: The amount of gold obtained from owning n number of Feitorias is given by n * feitoria_gold_productivity * 1 209. Reveal Enemy Town Centers \u00b6 ID: 209 Purpose: Boolean: reveal enemy town centre location for the source player Default Values: 0: Default 5: Vietnamese Note: The bonus works for all values \\(\\geq\\) 1, the choice of setting it to 5 for vietnamese seems arbitrary 210. Relics Visible on Map \u00b6 ID: 210 Purpose: Boolean: reveal relics on map amount Default Values: -1: Default 42: Burmese Note: Burmese reveal relics on map bonus. Only works in RMS, manually changing this in the editor does not seem to have any effects 211. Elevation Higher Bonus \u00b6 ID: 211 Purpose: The fraction for additional bonus damage dealt from higher elevation Default Values: 0: Default 0.25: Tatars Note: Damage that units on higher elevation deal to units on lower elevation is multiplied by 1.25 + elevation_bonus_higher 212. Elevation Lower Bonus \u00b6 ID: 212 Purpose: The fraction for additional bonus damage dealt from lower elevation Default Values: 0: Default Note: Damage that units on lower elevation deal to units on higher elevation is multiplied by 0.75 + elevation_bonus_lower 213. Raiding Productivity \u00b6 ID: 213 Purpose: Keshik gold generation rate per 100 seconds Default Values: 0: Default 50: (0.5 g/s) Tatars Note: Note that in practice, due to attack reload time and frame delay, Keshiks don't actually produce 0.5 g/s, but a slightly lower value 214. Mercenary Kipchak Count \u00b6 ID: 214 Purpose: Total number of mercenary kipchak creatable Default Values: 0: Default 10: after a Cuman ally researches Cuman Mercenaries Note: Researching Cuman Mercenaries sets this to 10. Making mercenary Kipchaks costs one unit of this resource 215. Mercenary Kipchak Limit \u00b6 ID: 215 Purpose: Number of mercenary kipchaks created/queued Note: Making mercenary Kipchaks gives one unit of this resource 216. Shepherd Productivity \u00b6 ID: 216 Purpose: Amount of food collected from sheep multiplier Default Values: 1: Default 1.57: Tatars Note: Since this works by multiplying the amount of resources gathered by a villager, it has a side effect of increasing the gather rate. In the case of Tatars, This is compensated for by reducing villager work rate by 57% 217. Shared Line of Sight \u00b6 ID: 217 Purpose: Unknown... what does this resource do? 218. Early Town Center Limit \u00b6 ID: 218 Purpose: This is the number of extra TCs a player is allowed to build IF TCs are enabled in feudal age Default Values: 1: Default 2: Cumans Note: Since generic civs don't get access to TCs in feudal, the 10k amount doesn't matter, but if you're trying to make a map where you want people to be able to make TCs in feudal, make sure to set this value to 10k for cumans! 219. Fishing Productivity \u00b6 ID: 219 Purpose: Multiplier for food gathered by fishing ships Default Values: 1: Default Note: Since this works by multiplying the amount of resources gathered by a fishing ship, it has a side effect of increasing the gather rate 220. Unused Resource 220 \u00b6 ID: 220 Purpose: Unused 221. Monument Food Productivity \u00b6 ID: 221 Purpose: Monument food trickle rate multiplier Default Values: 1: In KoTH games Note: The amount of resources obtained by owning a monument is 0.7925 * food_trickle_from_monument 222. Monument Wood Productivity \u00b6 ID: 222 Purpose: Monument wood trickle rate multiplier Default Values: 1: In KoTH games Note: The amount of resources obtained by owning a monument is 0.7925 * wood_trickle_from_monument 223. Monument Stone Productivity \u00b6 ID: 223 Purpose: Monument stone trickle rate multiplier Default Values: 1: In KoTH games Note: The amount of resources obtained by owning a monument is 0.7925 * stone_trickle_from_monument 224. Monument Gold Productivity \u00b6 ID: 224 Purpose: Monument gold trickle rate multiplier Default Values: 1: In KoTH games Note: The amount of resources obtained by owning a monument is 0.7925 * gold_trickle_from_monument 225. Relic Food Production Rate \u00b6 ID: 225 Purpose: Relic food production per minute Default Values: 0: Default 30: Burgundians 15: Burgundians after getting hit with Atheism 226. Villagers Killed by Gaia \u00b6 ID: 226 Purpose: Total number of villagers lost to gaia 227. Villagers Killed by Animals \u00b6 ID: 227 Purpose: Total number of villagers lost to wild animals 228. Villagers Killed by AI Player \u00b6 ID: 228 Purpose: Total number of villagers lost to AIs 229. Villagers Killed by Human Player \u00b6 ID: 229 Purpose: Total number of villagers lost to human players 230. Food Generation Rate \u00b6 ID: 230 Purpose: Free food trickle rate (per minute) 231. Wood Generation Rate \u00b6 ID: 231 Purpose: Free wood trickle rate (per minute) 232. Stone Generation Rate \u00b6 ID: 232 Purpose: Free stone trickle rate (per minute) 233. Gold Generation Rate \u00b6 ID: 233 Purpose: Free gold trickle rate (per minute) 234. Spawn Limit \u00b6 ID: 234 Purpose: The limit to the number of spawning buildings that can spawn units from spawn command in a technology Note: This is usually overridden by techs 235. Flemish Militia Population \u00b6 ID: 235 Purpose: Number of alive flemish militia 236. Farming Gold Productivity \u00b6 ID: 236 Purpose: Farming gold generation rate per 100 seconds Default Values: 0: Default 2: (0.02 g/s per farmer) after Burgundian Vineyards Note: Only generates gold while collecting food from farms, and not when walking on them down 237. Folwark Collection Amount \u00b6 ID: 237 Purpose: This is the amount of food collected from farms built around a folwark Default Values: 0: Default 17.5: Poles 19.25: Poles with Chinese Ally 25: Poles with Horse Collar 27.5: Poles with Horse Collar & Chinese Ally 37.5: Poles with Heavy Plow 41.25: Poles with Heavy Plow & Chinese Ally 55: Poles with Crop Rotation 60.5: Poles with Crop Rotation & Chinese Ally 238. Folwark Attribute Type \u00b6 ID: 238 Purpose: This is the ID of the resource that is given when a farm is constructed around a folwark Default Values: 0: Poles -1: Default 239. Folwark Building Type \u00b6 ID: 239 Purpose: This is the ID of the building that the Folwark needs to upgrade from for the farm collection ability to work Default Values: 68: (Mill) Poles -1: Default 240. Units Converted \u00b6 ID: 240 Purpose: The amount of units lost to enemy conversions 241. Stone Mining Gold Productivity \u00b6 ID: 241 Purpose: Stone mining gold generation rate per 100 seconds Default Values: 0: Default 18: Poles 20.7: Poles with Stone Mining 23.805: Poles with Stone Shaft Mining 242. Trade Workshop Food Productivity \u00b6 ID: 242 Purpose: Trade Workshop food production rate multiplier Default Values: 1: Default Note: The amount of food obtained from owning n number of TWS (Unit 1647) is given by n * tws_food_productivity * 2.25 243. Trade Workshop Wood Productivity \u00b6 ID: 243 Purpose: Trade Workshop wood production rate multiplier Default Values: 1: Default Note: The amount of wood obtained from owning n number of TWS (Unit 1647) is given by n * tws_wood_productivity * 2.25 244. Trade Workshop Stone Productivity \u00b6 ID: 244 Purpose: Trade Workshop stone production rate multiplier Default Values: 0: Default Note: The amount of stone obtained from owning n number of TWS (Unit 1647) is given by n * tws_stone_productivity * 2.25 245. Trade Workshop Gold Productivity \u00b6 ID: 245 Purpose: Trade Workshop gold production rate multiplier Default Values: 1: Default Note: The amount of gold obtained from owning n number of TWS (Unit 1647) is given by n * tws_gold_productivity * 2.25 246. Units Value Total \u00b6 ID: 246 Purpose: Total cost of all units created so far Note: This does not decrease when the units die 247. Buildings Value Total \u00b6 ID: 247 Purpose: Total cost of all buildings created so far Note: Increases when foundations are placed. This does not decrease if the foundation is deleted 248. Villagers Created Total \u00b6 ID: 248 Purpose: Total number of villagers created so far 249. Villagers Idle Periods Total \u00b6 ID: 249 Purpose: Amount of villagers that entered an idle state since game start Note: This only updates every 5 physical minutes. The number of villagers that entered an idle state since the last updated is added to this resource. Starting villager count is the initial value 250. Villagers Idle Seconds Total \u00b6 ID: 250 Purpose: Amount of total seconds all villagers have been idle since game start Note: This only updates every 5 physical minutes. The idle time in seconds for all villagers since the last time this resource was updated is added to this resource. A villager immediately adds its own idle time to this resource if it dies 251. Trade Food Percent \u00b6 ID: 251 Purpose: Percentage of gold generated from trade that is also given as food Default Values: 0: Default 10: Bengalis 252. Trade Wood Percent \u00b6 ID: 252 Purpose: Percentage of gold generated from trade that is also given as wood Default Values: 0: Default 253. Trade Stone Percent \u00b6 ID: 253 Purpose: Percentage of gold generated from trade that is also given as stone Default Values: 0: Default 254. Livestock Food Productivity \u00b6 ID: 254 Purpose: Garrisoned herdable food generation rate per 60 seconds Default Values: 0: Default 3.5: (0.0583 f/s per herdable) Gurjaras 255. Speed Up Building Type \u00b6 ID: 255 Purpose: This is the ID of the building to use for the speed up effect. Default Values: 1754: (Caravanserai) Default Note: See also: Speed Up Building Type Speed Up Building Range Speed Up Percentage Speed Up Object Type Speed Up Effect Type Speed Up Secondary Effect Type Speed Up Secondary Percentage 256. Speed Up Building Range \u00b6 ID: 256 Purpose: This specifies the range (in tiles) of the area created around the building ( Speed Up Building Type ) (square, from the edges of the building) for the speed up effect Default Values: 8: Default Note: See also: Speed Up Building Type Speed Up Building Range Speed Up Percentage Speed Up Object Type Speed Up Effect Type Speed Up Secondary Effect Type Speed Up Secondary Percentage 257. Speed Up Percentage \u00b6 ID: 257 Purpose: The formulae given below are used with this resource as the value to adjust the attribute ( Speed Up Effect Type ) of all units of class ( Speed Up Object Type ) when they are in the range of the speed up effect Default Values: 0.2: Default Note: For each of the attributes that work with this resource, the new value to set is determined using the following formulae: (013) new_workrate = original + value (005) new_movement_speed = original * (1 + value) (109) new_regeneration_rate = original + (3600/value) See also: Speed Up Building Type Speed Up Building Range Speed Up Percentage Speed Up Object Type Speed Up Effect Type Speed Up Secondary Effect Type Speed Up Secondary Percentage 258. Speed Up Object Type \u00b6 ID: 258 Purpose: This is 900 + class_id for the class of units that should be affected by the speed up effect Default Values: 919: (Trade Cart class) Default Note: See also: Speed Up Building Type Speed Up Building Range Speed Up Percentage Speed Up Object Type Speed Up Effect Type Speed Up Secondary Effect Type Speed Up Secondary Percentage 259. Speed Up Effect Type \u00b6 ID: 259 Purpose: The ID of the attribute that is modified by the speed up effect. Only 5 (Movement Speed), 13 (Work Rate) and 109 (Regeneration) have been found to work so far Default Values: 5: (Movement Speed) Default Note: See also: Speed Up Building Type Speed Up Building Range Speed Up Percentage Speed Up Object Type Speed Up Effect Type Speed Up Secondary Effect Type Speed Up Secondary Percentage 260. Speed Up Secondary Effect Type \u00b6 ID: 260 Purpose: This is the ID of the secondary attribute that is modified by the speed up effect. Only 5 (Movement Speed), 13 (Work Rate) and 109 (Regeneration) have been found to work so far Default Values: 109: (Regeneration Rate) Default Note: See also: Speed Up Building Type Speed Up Building Range Speed Up Percentage Speed Up Object Type Speed Up Effect Type Speed Up Secondary Effect Type Speed Up Secondary Percentage 261. Speed Up Secondary Percentage \u00b6 ID: 261 Purpose: This amount is added to the secondary attribute ( Speed Up Secondary Effect Type ) of all units of class ( Speed Up Object Type ) when they are in the range of the speed up effect Default Values: 60: Default Note: See also: Speed Up Building Type Speed Up Building Range Speed Up Percentage Speed Up Object Type Speed Up Effect Type Speed Up Secondary Effect Type Speed Up Secondary Percentage 262. Extra Elephant Convert Resist \u00b6 ID: 262 Purpose: Provides additional conversion resistance to elephant units Default Values: 0: Default 1: Bengalis 263. Starting Scout ID \u00b6 ID: 263 Purpose: Unit ID for the starting scout. Can be set to any unit (even buildings) Default Values: 448: (Scout Cavalry) Default 751: (Eagle Scout) Aztecs, Incas and Mayans 1755: (Camel Scout) Gurjaras 264. Relic Wood Production Rate \u00b6 ID: 264 Purpose: Relic wood production per minute Default Values: 0: Default Note: This is not affected by Atheism 265. Relic Stone Production Rate \u00b6 ID: 265 Purpose: Relic stone production per minute Note: This is not affected by Atheism 266. Chopping Gold Productivity \u00b6 ID: 266 Purpose: Lumberjack chopping gold generation rate per 100 seconds Default Values: 0: Default 1.5: (0.015 g/s per lumberjack) Vietnamese with paper money 1.8: (0.018 g/s per lumberjack) Vietnamese with paper money & Double Bit Axe 2.16: (0.0216 g/s per lumberjack) Vietnamese with paper money & Double Bit Axe & Bow Saw 2.376: (0.02376 g/s per lumberjack) Vietnamese with paper money & Double Bit Axe & Bow Saw & Two-Man Saw Note: Only generates gold while collecting wood from trees, and not when cutting them down 267. Unused Resource 267 \u00b6 ID: 267 Purpose: Unused 268. Unused Resource 268 \u00b6 ID: 268 Purpose: Unused 269. Unused Resource 269 \u00b6 ID: 269 Purpose: Unused","title":"Resources"},{"location":"general/resources/resources/#player-resources","text":"Written by: Alian713 & Bradical This page is a list of all the player resources in the scenario editor and their purposes. If you know of any resources that are not written on this page, or if the descriptions of the resources are wrong, please let the authors of this guide know!","title":"Player Resources"},{"location":"general/resources/resources/#0-food-storage","text":"ID: 0 Purpose: Current food amount","title":"0. !Food Storage"},{"location":"general/resources/resources/#1-wood-storage","text":"ID: 1 Purpose: Current wood amount","title":"1. !Wood Storage"},{"location":"general/resources/resources/#2-stone-storage","text":"ID: 2 Purpose: Current stone amount","title":"2. !Stone Storage"},{"location":"general/resources/resources/#3-gold-storage","text":"ID: 3 Purpose: Current gold amount","title":"3. !Gold Storage"},{"location":"general/resources/resources/#4-population-headroom","text":"ID: 4 Purpose: Amount of free population space. Note that this is NOT the population cap","title":"4. Population Headroom"},{"location":"general/resources/resources/#5-conversion-range","text":"ID: 5 Purpose: Unknown... What does this resource do?","title":"5. Conversion Range"},{"location":"general/resources/resources/#6-current-age","text":"ID: 6 Purpose: Controls the age name and icon at the top of the screen Default Values: 0: Dark Age 1: Feudal Age 2: Castle Age 3: Imperial Age Note: Setting this to an amount higher than 3 cycles the icon but keeps the age at imperial","title":"6. Current Age"},{"location":"general/resources/resources/#7-relics-captured","text":"ID: 7 Purpose: Number of relics held","title":"7. Relics Captured"},{"location":"general/resources/resources/#8-unused-resource-008","text":"ID: 8 Purpose: Unused","title":"8. Unused Resource 008"},{"location":"general/resources/resources/#9-trade-goods","text":"ID: 9 Purpose: Unused","title":"9. Trade Goods"},{"location":"general/resources/resources/#10-unused-resource-010","text":"ID: 10 Purpose: Unused","title":"10. Unused Resource 010"},{"location":"general/resources/resources/#11-current-population","text":"ID: 11 Purpose: The current population","title":"11. Current Population"},{"location":"general/resources/resources/#12-corpse-decay-time","text":"ID: 12 Purpose: Unknown... What does this resource do?","title":"12. Corpse Decay Time"},{"location":"general/resources/resources/#13-remarkable-discovery","text":"ID: 13 Purpose: Unknown... What does this resource do?","title":"13. Remarkable Discovery"},{"location":"general/resources/resources/#14-monuments-captured","text":"ID: 14 Purpose: Number of monuments owned","title":"14. Monuments Captured"},{"location":"general/resources/resources/#15-meat-storage","text":"ID: 15 Purpose: Unknown... What does this resource do?","title":"15. Meat Storage"},{"location":"general/resources/resources/#16-berry-storage","text":"ID: 16 Purpose: Unknown... What does this resource do?","title":"16. Berry Storage"},{"location":"general/resources/resources/#17-fish-storage","text":"ID: 17 Purpose: Unknown... What does this resource do?","title":"17. Fish Storage"},{"location":"general/resources/resources/#18-unused-resource-018","text":"ID: 18 Purpose: Unused","title":"18. Unused Resource 018"},{"location":"general/resources/resources/#19-total-units-owned","text":"ID: 19 Purpose: Total units owned, excluding buildings","title":"19. Total Units Owned"},{"location":"general/resources/resources/#20-units-killed","text":"ID: 20 Purpose: Total units killed, excluding buildings","title":"20. Units Killed"},{"location":"general/resources/resources/#21-technology-count","text":"ID: 21 Purpose: Number of technologies researched till now","title":"21. Technology Count"},{"location":"general/resources/resources/#22-map-explored","text":"ID: 22 Purpose: Percentage of the map explored","title":"22. % Map Explored"},{"location":"general/resources/resources/#23-castle-age-tech-id","text":"ID: 23 Purpose: Always 102 Note: Nothing happens when you change this, probably for mods only","title":"23. Castle Age Tech ID"},{"location":"general/resources/resources/#24-imperial-age-tech-id","text":"ID: 24 Purpose: Always 103 Note: Nothing happens when you change this, probably for mods only","title":"24. Imperial Age Tech ID"},{"location":"general/resources/resources/#25-feudal-age-tech-id","text":"ID: 25 Purpose: Always 101 Note: Nothing happens when you change this, probably for mods only","title":"25. Feudal Age Tech ID"},{"location":"general/resources/resources/#26-attack-warning-sound-id","text":"ID: 26 Purpose: Always 0 Note: Nothing happens when you change this, probably for mods only","title":"26. Attack Warning Sound ID"},{"location":"general/resources/resources/#27-enable-monk-conversion","text":"ID: 27 Purpose: Boolean: allow enemy monk conversions Default Values: 0: No (default) \\(\\geq\\) 1: Yes, after Atonement","title":"27. Enable Monk Conversion"},{"location":"general/resources/resources/#28-enable-building-conversion","text":"ID: 28 Purpose: Boolean: allow enemy building conversions Default Values: 0: No (default) 1: Yes, after Redemption \\(\\geq\\) 2: Monks can convert buildings from range","title":"28. Enable Building Conversion"},{"location":"general/resources/resources/#29-unused-resource-029","text":"ID: 29 Purpose: Unused","title":"29. Unused Resource 029"},{"location":"general/resources/resources/#30-unused-resource-030","text":"ID: 30 Purpose: Unused","title":"30. Unused Resource 030"},{"location":"general/resources/resources/#31-unused-resource-031","text":"ID: 31 Purpose: Unused","title":"31. Unused Resource 031"},{"location":"general/resources/resources/#32-bonus-population-cap","text":"ID: 32 Purpose: Additional pop space to grant on top of maximum pop cap Note: 10 for goths","title":"32. Bonus Population Cap"},{"location":"general/resources/resources/#33-food-maintenance","text":"ID: 33 Purpose: Unknown... What does this resource do?","title":"33. Food Maintenance"},{"location":"general/resources/resources/#34-faith","text":"ID: 34 Purpose: Unknown... What does this resource do?","title":"34. Faith"},{"location":"general/resources/resources/#35-faith-recharging-rate","text":"ID: 35 Purpose: Monk faith recovery rate Default Values: 1: The unit of measurement for this rate is unknown","title":"35. Faith Recharging Rate"},{"location":"general/resources/resources/#36-farm-food-amount","text":"ID: 36 Purpose: Maximum farm food amount Default Values: 175: Default 220: Chinese Note: This is what horse collar etc. technologies modify","title":"36. Farm Food Amount"},{"location":"general/resources/resources/#37-civilian-population","text":"ID: 37 Purpose: Current civilian population","title":"37. Civilian Population"},{"location":"general/resources/resources/#38-unused-resource-038","text":"ID: 38 Purpose: Unused","title":"38. Unused Resource 038"},{"location":"general/resources/resources/#39-all-techs-achieved","text":"ID: 39 Purpose: Boolean: If all available technologies have been researched Default Values: 0: No 1: Yes","title":"39. All Techs Achieved"},{"location":"general/resources/resources/#40-military-population","text":"ID: 40 Purpose: Current military popupation","title":"40. Military Population"},{"location":"general/resources/resources/#41-conversions","text":"ID: 41 Purpose: Number of units converted","title":"41. Conversions"},{"location":"general/resources/resources/#42-standing-wonders","text":"ID: 42 Purpose: Number of standing wonders","title":"42. Standing Wonders"},{"location":"general/resources/resources/#43-razings","text":"ID: 43 Purpose: Number of buildings razed","title":"43. Razings"},{"location":"general/resources/resources/#44-kill-ratio","text":"ID: 44 Purpose: This is the number of units lost subtracted from the number of units killed in total","title":"44. Kill Ratio"},{"location":"general/resources/resources/#45-survival-to-finish","text":"ID: 45 Purpose: Boolean: This is set to 0 under the same conditions which are required to defeat a player Default Values: 0: No 1: Yes","title":"45. Survival to Finish"},{"location":"general/resources/resources/#46-tribute-inefficiency","text":"ID: 46 Purpose: This is the fraction of tributes sent that are collected as tax Default Values: 0.3: Default 0.2: After Coinage 0: After Banking","title":"46. Tribute Inefficiency"},{"location":"general/resources/resources/#47-gold-mining-productivity","text":"ID: 47 Purpose: Multiplier for gold mined by gold miners Default Values: 1: Default 1.15: Mayans Note: Since this works by multiplying the amount of resources gathered by a villager, it has a side effect of increasing the gather rate. In the case of Mayans, This is compensated for by reducing villager work rate by 15%","title":"47. Gold Mining Productivity"},{"location":"general/resources/resources/#48-town-center-unavailable","text":"ID: 48 Purpose: Boolean: allow building extra tcs Default Values: 0: No (Sudden Death) 1: Yes (Normal)","title":"48. Town Center Unavailable"},{"location":"general/resources/resources/#49-gold-counter","text":"ID: 49 Purpose: Total gold collected","title":"49. Gold Counter"},{"location":"general/resources/resources/#50-reveal-ally","text":"ID: 50 Purpose: Boolean: show ally los for the source player Default Values: 0: No (default) 1: Yes, after Cartography or with a Portuguese ally Note: Once set to 1 , setting it back to 0 won't take away the LoS of allies","title":"50. Reveal Ally"},{"location":"general/resources/resources/#51-unused-resource-051","text":"ID: 51 Purpose: Unused","title":"51. Unused Resource 051"},{"location":"general/resources/resources/#52-monasteries","text":"ID: 52 Purpose: Number of monasteries","title":"52. Monasteries"},{"location":"general/resources/resources/#53-tribute-sent","text":"ID: 53 Purpose: Total of all resources tributed to others. This does not count taxes paid on tributing","title":"53. Tribute Sent"},{"location":"general/resources/resources/#54-all-monuments-captured","text":"ID: 54 Purpose: Boolean: all monuments on the map captured Default Values: 0: No 1: Yes","title":"54. All Monuments Captured"},{"location":"general/resources/resources/#55-all-relics-captured","text":"ID: 55 Purpose: Boolean: all relics on the map captured Default Values: 0: No 1: Yes","title":"55. All Relics Captured"},{"location":"general/resources/resources/#56-ore-storage","text":"ID: 56 Purpose: Unused","title":"56. Ore Storage"},{"location":"general/resources/resources/#57-kidnap-storage","text":"ID: 57 Purpose: Number of units kidnapped Note: This is probably only used by mods, this usage may be incorrect","title":"57. Kidnap Storage"},{"location":"general/resources/resources/#58-dark-age-tech-id","text":"ID: 58 Purpose: Always 104 Note: Nothing happens when you change this","title":"58. Dark Age Tech ID"},{"location":"general/resources/resources/#59-unused-resource-059","text":"ID: 59 Purpose: Unused","title":"59. Unused Resource 059"},{"location":"general/resources/resources/#60-unused-resource-060","text":"ID: 60 Purpose: Unused","title":"60. Unused Resource 060"},{"location":"general/resources/resources/#61-unused-resource-061","text":"ID: 61 Purpose: Unused","title":"61. Unused Resource 061"},{"location":"general/resources/resources/#62-building-housing-rate","text":"ID: 62 Purpose: Unknown... What does this resource do?","title":"62. Building Housing Rate"},{"location":"general/resources/resources/#63-tax-gather-rate","text":"ID: 63 Purpose: Unknown... What does this resource do?","title":"63. Tax Gather Rate"},{"location":"general/resources/resources/#64-gather-accumulator","text":"ID: 64 Purpose: Unknown... What does this resource do?","title":"64. Gather Accumulator"},{"location":"general/resources/resources/#65-salvage-decay-rate","text":"ID: 65 Purpose: Unknown... What does this resource do?","title":"65. Salvage Decay Rate"},{"location":"general/resources/resources/#66-unused-resource-066","text":"ID: 66 Purpose: Unused","title":"66. Unused Resource 066"},{"location":"general/resources/resources/#67-can-convert","text":"ID: 67 Purpose: Boolean: monks can convert enemy units Default Values: 0: No 1: Yes (default)","title":"67. Can Convert"},{"location":"general/resources/resources/#68-hit-points-killed","text":"ID: 68 Purpose: Cumulative hp of all units killed","title":"68. Hit Points Killed"},{"location":"general/resources/resources/#69-killed-p1","text":"ID: 69 Purpose: Number of player 1 units killed","title":"69. Killed P1"},{"location":"general/resources/resources/#70-killed-p2","text":"ID: 70 Purpose: Number of player 2 units killed","title":"70. Killed P2"},{"location":"general/resources/resources/#71-killed-p3","text":"ID: 71 Purpose: Number of player 3 units killed","title":"71. Killed P3"},{"location":"general/resources/resources/#72-killed-p4","text":"ID: 72 Purpose: Number of player 4 units killed","title":"72. Killed P4"},{"location":"general/resources/resources/#73-killed-p5","text":"ID: 73 Purpose: Number of player 5 units killed","title":"73. Killed P5"},{"location":"general/resources/resources/#74-killed-p6","text":"ID: 74 Purpose: Number of player 6 units killed","title":"74. Killed P6"},{"location":"general/resources/resources/#75-killed-p7","text":"ID: 75 Purpose: Number of player 7 units killed","title":"75. Killed P7"},{"location":"general/resources/resources/#76-killed-p8","text":"ID: 76 Purpose: Number of player 8 units killed","title":"76. Killed P8"},{"location":"general/resources/resources/#77-conversion-resistance","text":"ID: 77 Purpose: Coefficient of conversion resistance Default Values: 0: Default +2: with Teuton ally +3: after Faith Note: Probability of conversion is divided by this value for ALL source player units, Teuton team bonus for conversion resistance works by increasing this","title":"77. Conversion Resistance"},{"location":"general/resources/resources/#78-trade-vig-rate","text":"ID: 78 Purpose: Market exchange rate fraction for the source player Default Values: 0.3: Default 0.15: after Guilds 0.05: Saracens","title":"78. Trade Vig Rate"},{"location":"general/resources/resources/#79-stone-mining-productivity","text":"ID: 79 Purpose: Multiplier for stone mined by stone miners Default Values: 1: Default 1.15: Mayans Note: Since this works by multiplying the amount of resources gathered by a villager, it has a side effect of increasing the gather rate. In the case of Mayans, This is compensated for by reducing villager work rate by 15%","title":"79. Stone Mining Productivity"},{"location":"general/resources/resources/#80-queued-units","text":"ID: 80 Purpose: Amount of units in queue Note: Note that only the units waiting to be trained are considered in the queue so if an archery range has 3 archers being made, there is 1 archer that is being trained and 2 archers that are in queue","title":"80. Queued Units"},{"location":"general/resources/resources/#81-training-count","text":"ID: 81 Purpose: Amount of units being trained Note: Note that only the FIRST unit in each building is considered as being trained so if a town centre has 4 villagers being made, there is 1 archer that is being trained and 3 villagers that are in queue","title":"81. Training Count"},{"location":"general/resources/resources/#82-start-with-unit-444-ptwc","text":"ID: 82 Purpose: Boolean: started with PTWC Note: Setting this to 1 in an RMS allows for starting with PTWC. Manually changing this in the editor does nothing","title":"82. Start with Unit 444 (PTWC)"},{"location":"general/resources/resources/#83-boarding-recharge-rate","text":"ID: 83 Purpose: ABGAL faith recharge rate amount Note: This is similar to monk's faith except for a special ship unit 536 called the ABGAL in the editor that can convert ships form 1 range away","title":"83. Boarding Recharge Rate"},{"location":"general/resources/resources/#84-starting-villagers","text":"ID: 84 Purpose: Number of starting villagers Default Values: 3: Default 4: Mayans 6: Chinese Note: Only works for RMS, changing this manually in the editor does nothing","title":"84. Starting Villagers"},{"location":"general/resources/resources/#85-research-cost-modifier","text":"ID: 85 Purpose: Multiply technology costs by this value Default Values: 1: Default 0.9: Chinese in feudal age 0.85: Chinese in castle age 0.80: Chinese in imperial age","title":"85. Research Cost Modifier"},{"location":"general/resources/resources/#86-research-time-modifier","text":"ID: 86 Purpose: Multiply technology research times by this value","title":"86. Research Time Modifier"},{"location":"general/resources/resources/#87-convert-boats","text":"ID: 87 Purpose: Boolean: allow monks to convert boats Default Values: 0: No 1: Yes (default)","title":"87. Convert Boats"},{"location":"general/resources/resources/#88-fish-trap-food-amount","text":"ID: 88 Purpose: Maximum fishtrap food amount Default Values: 710: Default 2130: Malay","title":"88. Fish Trap Food Amount"},{"location":"general/resources/resources/#89-heal-rate-modifier","text":"ID: 89 Purpose: Monk healing rate modifier Default Values: 0: The unit of measuremeant for this is unknown","title":"89. Heal Rate Modifier"},{"location":"general/resources/resources/#90-healing-range","text":"ID: 90 Purpose: Monk heal range Default Values: 4: Tiles","title":"90. Healing Range"},{"location":"general/resources/resources/#91-starting-food","text":"ID: 91 Purpose: Starting food amount Note: Only works for RMS, changing this manually in the editor does nothing but its a way to check starting food amount","title":"91. Starting Food"},{"location":"general/resources/resources/#92-starting-wood","text":"ID: 92 Purpose: Starting wood amount Note: Only works for RMS, changing this manually in the editor does nothing but its a way to check starting wood amount","title":"92. Starting Wood"},{"location":"general/resources/resources/#93-starting-stone","text":"ID: 93 Purpose: Starting stone amount Note: Only works for RMS, changing this manually in the editor does nothing but its a way to check starting stone amount","title":"93. Starting Stone"},{"location":"general/resources/resources/#94-starting-gold","text":"ID: 94 Purpose: Starting gold amount Note: Only works for RMS, changing this manually in the editor does nothing but its a way to check starting gold amount","title":"94. Starting Gold"},{"location":"general/resources/resources/#95-enable-ptwc-kidnap-loot","text":"ID: 95 Purpose: Enable town centre packing for the source player Default Values: 0: Default 1: Allows the TC to be packed and moved \\(\\geq\\) 2: No noticeable effect Note: Enabling kidnap/loot requires modding the units to have the kidnap/pillage action","title":"95. Enable PTWC / Kidnap / Loot"},{"location":"general/resources/resources/#96-no-dropsite-farmers","text":"ID: 96 Purpose: Enable Khmer farmer bonus Default Values: 0: Default 1: Khmer. Farmers no longer need dropoff and steadily gain resources while farming","title":"96. No Dropsite Farmers"},{"location":"general/resources/resources/#97-dominant-sheep-control","text":"ID: 97 Purpose: Boolean: force sheep conversion Default Values: 0: Default \\(\\geq\\) 1: Celts Note: If this is set to a non zero value, other players' sheep convert to you even if they have a unit in their LOS, unless this is also a non zero value for them. Celt sheep bonus","title":"97. Dominant Sheep Control"},{"location":"general/resources/resources/#98-building-cost-sum","text":"ID: 98 Purpose: Total cost of all units and buildings owned","title":"98. Building Cost Sum"},{"location":"general/resources/resources/#99-tech-cost-sum","text":"ID: 99 Purpose: Total cost of all researches researched","title":"99. Tech Cost Sum"},{"location":"general/resources/resources/#100-relic-income-sum","text":"ID: 100 Purpose: Total relic gold generated","title":"100. Relic Income Sum"},{"location":"general/resources/resources/#101-trade-income-sum","text":"ID: 101 Purpose: Total trade gold generated","title":"101. Trade Income Sum"},{"location":"general/resources/resources/#102-p1-tribute","text":"ID: 102 Purpose: Amount of resources tributed to player 1","title":"102. P1 Tribute"},{"location":"general/resources/resources/#103-p2-tribute","text":"ID: 103 Purpose: Amount of resources tributed to player 2","title":"103. P2 Tribute"},{"location":"general/resources/resources/#104-p3-tribute","text":"ID: 104 Purpose: Amount of resources tributed to player 3","title":"104. P3 Tribute"},{"location":"general/resources/resources/#105-p4-tribute","text":"ID: 105 Purpose: Amount of resources tributed to player 4","title":"105. P4 Tribute"},{"location":"general/resources/resources/#106-p5-tribute","text":"ID: 106 Purpose: Amount of resources tributed to player 5","title":"106. P5 Tribute"},{"location":"general/resources/resources/#107-p6-tribute","text":"ID: 107 Purpose: Amount of resources tributed to player 6","title":"107. P6 Tribute"},{"location":"general/resources/resources/#108-p7-tribute","text":"ID: 108 Purpose: Amount of resources tributed to player 7","title":"108. P7 Tribute"},{"location":"general/resources/resources/#109-p8-tribute","text":"ID: 109 Purpose: Amount of resources tributed to player 8","title":"109. P8 Tribute"},{"location":"general/resources/resources/#110-p1-kill-value","text":"ID: 110 Purpose: Total cost of all units killed of player 1","title":"110. P1 Kill Value"},{"location":"general/resources/resources/#111-p2-kill-value","text":"ID: 111 Purpose: Total cost of all units killed of player 2","title":"111. P2 Kill Value"},{"location":"general/resources/resources/#112-p3-kill-value","text":"ID: 112 Purpose: Total cost of all units killed of player 3","title":"112. P3 Kill Value"},{"location":"general/resources/resources/#113-p4-kill-value","text":"ID: 113 Purpose: Total cost of all units killed of player 4","title":"113. P4 Kill Value"},{"location":"general/resources/resources/#114-p5-kill-value","text":"ID: 114 Purpose: Total cost of all units killed of player 5","title":"114. P5 Kill Value"},{"location":"general/resources/resources/#115-p6-kill-value","text":"ID: 115 Purpose: Total cost of all units killed of player 6","title":"115. P6 Kill Value"},{"location":"general/resources/resources/#116-p7-kill-value","text":"ID: 116 Purpose: Total cost of all units killed of player 7","title":"116. P7 Kill Value"},{"location":"general/resources/resources/#117-p8-kill-value","text":"ID: 117 Purpose: Total cost of all units killed of player 8","title":"117. P8 Kill Value"},{"location":"general/resources/resources/#118-p1-razings","text":"ID: 118 Purpose: Number of buildings destroyed of player 1","title":"118. P1 Razings"},{"location":"general/resources/resources/#119-p2-razings","text":"ID: 119 Purpose: Number of buildings destroyed of player 2","title":"119. P2 Razings"},{"location":"general/resources/resources/#120-p3-razings","text":"ID: 120 Purpose: Number of buildings destroyed of player 3","title":"120. P3 Razings"},{"location":"general/resources/resources/#121-p4-razings","text":"ID: 121 Purpose: Number of buildings destroyed of player 4","title":"121. P4 Razings"},{"location":"general/resources/resources/#122-p5-razings","text":"ID: 122 Purpose: Number of buildings destroyed of player 5","title":"122. P5 Razings"},{"location":"general/resources/resources/#123-p6-razings","text":"ID: 123 Purpose: Number of buildings destroyed of player 6","title":"123. P6 Razings"},{"location":"general/resources/resources/#124-p7-razings","text":"ID: 124 Purpose: Number of buildings destroyed of player 7","title":"124. P7 Razings"},{"location":"general/resources/resources/#125-p8-razings","text":"ID: 125 Purpose: Number of buildings destroyed of player 8","title":"125. P8 Razings"},{"location":"general/resources/resources/#126-p1-razing-value","text":"ID: 126 Purpose: Total cost of all buildings destroyed of player 1","title":"126. P1 Razing Value"},{"location":"general/resources/resources/#127-p2-razing-value","text":"ID: 127 Purpose: Total cost of all buildings destroyed of player 2","title":"127. P2 Razing Value"},{"location":"general/resources/resources/#128-p3-razing-value","text":"ID: 128 Purpose: Total cost of all buildings destroyed of player 3","title":"128. P3 Razing Value"},{"location":"general/resources/resources/#129-p4-razing-value","text":"ID: 129 Purpose: Total cost of all buildings destroyed of player 4","title":"129. P4 Razing Value"},{"location":"general/resources/resources/#130-p5-razing-value","text":"ID: 130 Purpose: Total cost of all buildings destroyed of player 5","title":"130. P5 Razing Value"},{"location":"general/resources/resources/#131-p6-razing-value","text":"ID: 131 Purpose: Total cost of all buildings destroyed of player 6","title":"131. P6 Razing Value"},{"location":"general/resources/resources/#132-p7-razing-value","text":"ID: 132 Purpose: Total cost of all buildings destroyed of player 7","title":"132. P7 Razing Value"},{"location":"general/resources/resources/#133-p8-razing-value","text":"ID: 133 Purpose: Total cost of all buildings destroyed of player 8","title":"133. P8 Razing Value"},{"location":"general/resources/resources/#134-standing-castles","text":"ID: 134 Purpose: Number of standing castles","title":"134. Standing Castles"},{"location":"general/resources/resources/#135-hit-points-razed","text":"ID: 135 Purpose: Total HP of all buildings destroyed","title":"135. Hit Points Razed"},{"location":"general/resources/resources/#136-kills-by-p1","text":"ID: 136 Purpose: Number of own units killed by player 1","title":"136. Kills by P1"},{"location":"general/resources/resources/#137-kills-by-p2","text":"ID: 137 Purpose: Number of own units killed by player 2","title":"137. Kills by P2"},{"location":"general/resources/resources/#138-kills-by-p3","text":"ID: 138 Purpose: Number of own units killed by player 3","title":"138. Kills by P3"},{"location":"general/resources/resources/#139-kills-by-p4","text":"ID: 139 Purpose: Number of own units killed by player 4","title":"139. Kills by P4"},{"location":"general/resources/resources/#140-kills-by-p5","text":"ID: 140 Purpose: Number of own units killed by player 5","title":"140. Kills by P5"},{"location":"general/resources/resources/#141-kills-by-p6","text":"ID: 141 Purpose: Number of own units killed by player 6","title":"141. Kills by P6"},{"location":"general/resources/resources/#142-kills-by-p7","text":"ID: 142 Purpose: Number of own units killed by player 7","title":"142. Kills by P7"},{"location":"general/resources/resources/#143-kills-by-p8","text":"ID: 143 Purpose: Number of own units killed by player 8","title":"143. Kills by P8"},{"location":"general/resources/resources/#144-razings-by-p1","text":"ID: 144 Purpose: Number of own buildings destroyed by player 1","title":"144. Razings by P1"},{"location":"general/resources/resources/#145-razings-by-p2","text":"ID: 145 Purpose: Number of own buildings destroyed by player 2","title":"145. Razings by P2"},{"location":"general/resources/resources/#146-razings-by-p3","text":"ID: 146 Purpose: Number of own buildings destroyed by player 3","title":"146. Razings by P3"},{"location":"general/resources/resources/#147-razings-by-p4","text":"ID: 147 Purpose: Number of own buildings destroyed by player 4","title":"147. Razings by P4"},{"location":"general/resources/resources/#148-razings-by-p5","text":"ID: 148 Purpose: Number of own buildings destroyed by player 5","title":"148. Razings by P5"},{"location":"general/resources/resources/#149-razings-by-p6","text":"ID: 149 Purpose: Number of own buildings destroyed by player 6","title":"149. Razings by P6"},{"location":"general/resources/resources/#150-razings-by-p7","text":"ID: 150 Purpose: Number of own buildings destroyed by player 7","title":"150. Razings by P7"},{"location":"general/resources/resources/#151-razings-by-p8","text":"ID: 151 Purpose: Number of own buildings destroyed by player 8","title":"151. Razings by P8"},{"location":"general/resources/resources/#152-value-killed-by-others","text":"ID: 152 Purpose: Total cost of all own units lost","title":"152. Value Killed by Others"},{"location":"general/resources/resources/#153-value-razed-by-others","text":"ID: 153 Purpose: Total cost of all own buildings lost","title":"153. Value Razed by Others"},{"location":"general/resources/resources/#154-killed-by-others","text":"ID: 154 Purpose: Number of own units killed by other players","title":"154. Killed by Others"},{"location":"general/resources/resources/#155-razed-by-others","text":"ID: 155 Purpose: Number of own buildings destroyed by other players","title":"155. Razed by Others"},{"location":"general/resources/resources/#156-tribute-from-p1","text":"ID: 156 Purpose: Tribute received from player 1","title":"156. Tribute from P1"},{"location":"general/resources/resources/#157-tribute-from-p2","text":"ID: 157 Purpose: Tribute received from player 2","title":"157. Tribute from P2"},{"location":"general/resources/resources/#158-tribute-from-p3","text":"ID: 158 Purpose: Tribute received from player 3","title":"158. Tribute from P3"},{"location":"general/resources/resources/#159-tribute-from-p4","text":"ID: 159 Purpose: Tribute received from player 4","title":"159. Tribute from P4"},{"location":"general/resources/resources/#160-tribute-from-p5","text":"ID: 160 Purpose: Tribute received from player 5","title":"160. Tribute from P5"},{"location":"general/resources/resources/#161-tribute-from-p6","text":"ID: 161 Purpose: Tribute received from player 6","title":"161. Tribute from P6"},{"location":"general/resources/resources/#162-tribute-from-p7","text":"ID: 162 Purpose: Tribute received from player 7","title":"162. Tribute from P7"},{"location":"general/resources/resources/#163-tribute-from-p8","text":"ID: 163 Purpose: Tribute received from player 8","title":"163. Tribute from P8"},{"location":"general/resources/resources/#164-value-current-units","text":"ID: 164 Purpose: Total cost of all own alive units","title":"164. Value Current Units"},{"location":"general/resources/resources/#165-value-current-buildings","text":"ID: 165 Purpose: Total cost of all own standing buildings","title":"165. Value Current Buildings"},{"location":"general/resources/resources/#166-food-total","text":"ID: 166 Purpose: Total food collected","title":"166. Food Total"},{"location":"general/resources/resources/#167-wood-total","text":"ID: 167 Purpose: Total wood collected","title":"167. Wood Total"},{"location":"general/resources/resources/#168-stone-total","text":"ID: 168 Purpose: Total stone collected","title":"168. Stone Total"},{"location":"general/resources/resources/#169-gold-total","text":"ID: 169 Purpose: Total gold collected","title":"169. Gold Total"},{"location":"general/resources/resources/#170-total-value-of-kills","text":"ID: 170 Purpose: Total cost of all units killed","title":"170. Total Value of Kills"},{"location":"general/resources/resources/#171-total-tribute-received","text":"ID: 171 Purpose: Total of all resources received in tribute","title":"171. Total Tribute Received"},{"location":"general/resources/resources/#172-total-value-of-razings","text":"ID: 172 Purpose: Total cost of all buildings destroyed","title":"172. Total Value of Razings"},{"location":"general/resources/resources/#173-total-castles-built","text":"ID: 173 Purpose: Number of total castles built","title":"173. Total Castles Built"},{"location":"general/resources/resources/#174-total-wonders-built","text":"ID: 174 Purpose: Number of total wonders built","title":"174. Total Wonders Built"},{"location":"general/resources/resources/#175-tribute-score","text":"ID: 175 Purpose: Total amount of resources sent in tribute including taxes. 10% of this is counted towards the economy score","title":"175. Tribute score"},{"location":"general/resources/resources/#176-convert-min-adjustment","text":"ID: 176 Purpose: Additional monk seconds needed before a conversion is even possible Note: A great explanation of how this works here by T-West","title":"176. Convert Min Adjustment"},{"location":"general/resources/resources/#177-convert-max-adjustment","text":"ID: 177 Purpose: Additional monk seconds needed before a conversion is forced Note: A great explanation of how this works here by T-West","title":"177. Convert Max Adjustment"},{"location":"general/resources/resources/#178-convert-resist-min-adjustment","text":"ID: 178 Purpose: Additional monk seconds needed before conversion by enemy monks is even possible Note: A great explanation of how this works here by T-West","title":"178. Convert Resist Min Adjustment"},{"location":"general/resources/resources/#179-convert-resist-max-adjustment","text":"ID: 179 Purpose: Additional monk seconds needed before conversion by enemy monks is forced Note: A great explanation of how this works here by T-West","title":"179. Convert Resist Max Adjustment"},{"location":"general/resources/resources/#180-convert-building-min","text":"ID: 180 Purpose: Minimum time required to convert a building Note: A great explanation of how this works here by T-West","title":"180. Convert Building Min"},{"location":"general/resources/resources/#181-convert-building-max","text":"ID: 181 Purpose: Maximum time required to convert a building Note: A great explanation for how this works here by T-West","title":"181. Convert Building Max"},{"location":"general/resources/resources/#182-convert-building-chance","text":"ID: 182 Purpose: Percent chance for monks to convert buildings Note: A great explanation for how this works here by T-West","title":"182. Convert Building Chance"},{"location":"general/resources/resources/#183-reveal-enemy","text":"ID: 183 Purpose: Boolean: show enemy los for the source player Default Values: 0: No (default) 1: Yes, after Spies Note: Once set to 1 , setting it back to 0 won't take away LoS of enemies!","title":"183. Reveal Enemy"},{"location":"general/resources/resources/#184-value-wonders-castles","text":"ID: 184 Purpose: Total cost of all wonders and castles constructed","title":"184. Value Wonders Castles"},{"location":"general/resources/resources/#185-food-score","text":"ID: 185 Purpose: Unknown... what does this resource do?","title":"185. Food Score"},{"location":"general/resources/resources/#186-wood-score","text":"ID: 186 Purpose: Unknown... what does this resource do?","title":"186. Wood Score"},{"location":"general/resources/resources/#187-stone-score","text":"ID: 187 Purpose: Unknown... what does this resource do?","title":"187. Stone Score"},{"location":"general/resources/resources/#188-gold-score","text":"ID: 188 Purpose: Unknown... what does this resource do?","title":"188. Gold Score"},{"location":"general/resources/resources/#189-chopping-productivity","text":"ID: 189 Purpose: Multiplier for wood chopped by lumberjacks Default Values: 1: Default 1.15: Mayans Note: Since this works by multiplying the amount of resources gathered by a villager, it has a side effect of increasing the gather rate. In the case of Mayans, This is compensated for by reducing villager work rate by 15%","title":"189. Chopping Productivity"},{"location":"general/resources/resources/#190-food-gathering-productivity","text":"ID: 190 Purpose: Multiplier for food gathered from all sources Default Values: 1: Default 1.15: Mayans Note: Since this works by multiplying the amount of resources gathered by a villager, it has a side effect of increasing the gather rate. In the case of Mayans, This is compensated for by reducing villager work rate by 15%. The work rate for farmers is reduced by about 23.4%","title":"190. Food Gathering Productivity"},{"location":"general/resources/resources/#191-relic-gold-production-rate","text":"ID: 191 Purpose: Relic gold generation rate in gold per minute Default Values: 30: Default. 30 gold per minute (0.5 gold per second) 15: After getting hit with Atheism","title":"191. Relic Gold Production Rate"},{"location":"general/resources/resources/#192-converted-units-die","text":"ID: 192 Purpose: Boolean: converted units die instead of switching over to the enemy Default Values: 0: No (default) 1: Yes, after Heresey","title":"192. Converted Units Die"},{"location":"general/resources/resources/#193-theocracy","text":"ID: 193 Purpose: Boolean: only one monk needs to regen faith after group conversion for the source player Default Values: 0: No (default) 1: Yes, after researching Theocracy","title":"193. Theocracy"},{"location":"general/resources/resources/#194-crenellations","text":"ID: 194 Purpose: Boolean: Garrisoned infantry fire arrows Default Values: 0: No (default) 1: Yes, after crenellations","title":"194. Crenellations"},{"location":"general/resources/resources/#195-construction-rate-modifier","text":"ID: 195 Purpose: Builder work rate multiplier Default Values: 0: Default 1.3: Spanish Note: The actual work rate for builders is given by construction_rate_mod * builder.default_work_rate","title":"195. Construction Rate Modifier"},{"location":"general/resources/resources/#196-hun-wonder-discount","text":"ID: 196 Purpose: Additional time required for relic/wonder victories in one tenth of a year Default Values: 0: default 1000: (100 years) for the Hun player, after researching atheism. The value of this resource of each player is added to determine the total extra time for relic/wonder victories, i.e. it adds up if multiple hun players get the tech Note: Internally, relic and wonder victory countdowns are measured in one tenths of an year, the fractional part is just not shown ingame","title":"196. Hun Wonder Discount"},{"location":"general/resources/resources/#197-spies-discount","text":"ID: 197 Purpose: Boolean: Halves the cost of spies per villager, and caps it at 15k gold max instead of the usual 30k Default Values: 0: Default","title":"197. Spies Discount"},{"location":"general/resources/resources/#198-unused-resource-198","text":"ID: 198 Purpose: Unused","title":"198. Unused Resource 198"},{"location":"general/resources/resources/#199-unused-resource-199","text":"ID: 199 Purpose: Unused","title":"199. Unused Resource 199"},{"location":"general/resources/resources/#200-unused-resource-200","text":"ID: 200 Purpose: Unused","title":"200. Unused Resource 200"},{"location":"general/resources/resources/#201-unused-resource-201","text":"ID: 201 Purpose: Unused","title":"201. Unused Resource 201"},{"location":"general/resources/resources/#202-unused-resource-202","text":"ID: 202 Purpose: Unused","title":"202. Unused Resource 202"},{"location":"general/resources/resources/#203-unused-resource-203","text":"ID: 203 Purpose: Unused","title":"203. Unused Resource 203"},{"location":"general/resources/resources/#204-unused-resource-204","text":"ID: 204 Purpose: Unused","title":"204. Unused Resource 204"},{"location":"general/resources/resources/#205-feitoria-food-productivity","text":"ID: 205 Purpose: Feitoria food production rate multiplier Default Values: 1: Default Note: The amount of food obtained from owning n number of Feitorias is given by n * feitoria_food_productivity * 1.6","title":"205. Feitoria Food Productivity"},{"location":"general/resources/resources/#206-feitoria-wood-productivity","text":"ID: 206 Purpose: Feitoria wood production rate multiplier Default Values: 1: Default Note: The amount of wood obtained from owning n number of Feitorias is given by n * feitoria_wood_productivity * 0.7","title":"206. Feitoria Wood Productivity"},{"location":"general/resources/resources/#207-feitoria-stone-productivity","text":"ID: 207 Purpose: Feitoria stone production rate multiplier Default Values: 1: Default Note: The amount of stone obtained from owning n number of Feitorias is given by n * feitoria_stone_productivity * 0.3","title":"207. Feitoria Stone Productivity"},{"location":"general/resources/resources/#208-feitoria-gold-productivity","text":"ID: 208 Purpose: Feitoria gold production rate multiplier Default Values: 1: Default Note: The amount of gold obtained from owning n number of Feitorias is given by n * feitoria_gold_productivity * 1","title":"208. Feitoria Gold Productivity"},{"location":"general/resources/resources/#209-reveal-enemy-town-centers","text":"ID: 209 Purpose: Boolean: reveal enemy town centre location for the source player Default Values: 0: Default 5: Vietnamese Note: The bonus works for all values \\(\\geq\\) 1, the choice of setting it to 5 for vietnamese seems arbitrary","title":"209. Reveal Enemy Town Centers"},{"location":"general/resources/resources/#210-relics-visible-on-map","text":"ID: 210 Purpose: Boolean: reveal relics on map amount Default Values: -1: Default 42: Burmese Note: Burmese reveal relics on map bonus. Only works in RMS, manually changing this in the editor does not seem to have any effects","title":"210. Relics Visible on Map"},{"location":"general/resources/resources/#211-elevation-higher-bonus","text":"ID: 211 Purpose: The fraction for additional bonus damage dealt from higher elevation Default Values: 0: Default 0.25: Tatars Note: Damage that units on higher elevation deal to units on lower elevation is multiplied by 1.25 + elevation_bonus_higher","title":"211. Elevation Higher Bonus"},{"location":"general/resources/resources/#212-elevation-lower-bonus","text":"ID: 212 Purpose: The fraction for additional bonus damage dealt from lower elevation Default Values: 0: Default Note: Damage that units on lower elevation deal to units on higher elevation is multiplied by 0.75 + elevation_bonus_lower","title":"212. Elevation Lower Bonus"},{"location":"general/resources/resources/#213-raiding-productivity","text":"ID: 213 Purpose: Keshik gold generation rate per 100 seconds Default Values: 0: Default 50: (0.5 g/s) Tatars Note: Note that in practice, due to attack reload time and frame delay, Keshiks don't actually produce 0.5 g/s, but a slightly lower value","title":"213. Raiding Productivity"},{"location":"general/resources/resources/#214-mercenary-kipchak-count","text":"ID: 214 Purpose: Total number of mercenary kipchak creatable Default Values: 0: Default 10: after a Cuman ally researches Cuman Mercenaries Note: Researching Cuman Mercenaries sets this to 10. Making mercenary Kipchaks costs one unit of this resource","title":"214. Mercenary Kipchak Count"},{"location":"general/resources/resources/#215-mercenary-kipchak-limit","text":"ID: 215 Purpose: Number of mercenary kipchaks created/queued Note: Making mercenary Kipchaks gives one unit of this resource","title":"215. Mercenary Kipchak Limit"},{"location":"general/resources/resources/#216-shepherd-productivity","text":"ID: 216 Purpose: Amount of food collected from sheep multiplier Default Values: 1: Default 1.57: Tatars Note: Since this works by multiplying the amount of resources gathered by a villager, it has a side effect of increasing the gather rate. In the case of Tatars, This is compensated for by reducing villager work rate by 57%","title":"216. Shepherd Productivity"},{"location":"general/resources/resources/#217-shared-line-of-sight","text":"ID: 217 Purpose: Unknown... what does this resource do?","title":"217. Shared Line of Sight"},{"location":"general/resources/resources/#218-early-town-center-limit","text":"ID: 218 Purpose: This is the number of extra TCs a player is allowed to build IF TCs are enabled in feudal age Default Values: 1: Default 2: Cumans Note: Since generic civs don't get access to TCs in feudal, the 10k amount doesn't matter, but if you're trying to make a map where you want people to be able to make TCs in feudal, make sure to set this value to 10k for cumans!","title":"218. Early Town Center Limit"},{"location":"general/resources/resources/#219-fishing-productivity","text":"ID: 219 Purpose: Multiplier for food gathered by fishing ships Default Values: 1: Default Note: Since this works by multiplying the amount of resources gathered by a fishing ship, it has a side effect of increasing the gather rate","title":"219. Fishing Productivity"},{"location":"general/resources/resources/#220-unused-resource-220","text":"ID: 220 Purpose: Unused","title":"220. Unused Resource 220"},{"location":"general/resources/resources/#221-monument-food-productivity","text":"ID: 221 Purpose: Monument food trickle rate multiplier Default Values: 1: In KoTH games Note: The amount of resources obtained by owning a monument is 0.7925 * food_trickle_from_monument","title":"221. Monument Food Productivity"},{"location":"general/resources/resources/#222-monument-wood-productivity","text":"ID: 222 Purpose: Monument wood trickle rate multiplier Default Values: 1: In KoTH games Note: The amount of resources obtained by owning a monument is 0.7925 * wood_trickle_from_monument","title":"222. Monument Wood Productivity"},{"location":"general/resources/resources/#223-monument-stone-productivity","text":"ID: 223 Purpose: Monument stone trickle rate multiplier Default Values: 1: In KoTH games Note: The amount of resources obtained by owning a monument is 0.7925 * stone_trickle_from_monument","title":"223. Monument Stone Productivity"},{"location":"general/resources/resources/#224-monument-gold-productivity","text":"ID: 224 Purpose: Monument gold trickle rate multiplier Default Values: 1: In KoTH games Note: The amount of resources obtained by owning a monument is 0.7925 * gold_trickle_from_monument","title":"224. Monument Gold Productivity"},{"location":"general/resources/resources/#225-relic-food-production-rate","text":"ID: 225 Purpose: Relic food production per minute Default Values: 0: Default 30: Burgundians 15: Burgundians after getting hit with Atheism","title":"225. Relic Food Production Rate"},{"location":"general/resources/resources/#226-villagers-killed-by-gaia","text":"ID: 226 Purpose: Total number of villagers lost to gaia","title":"226. Villagers Killed by Gaia"},{"location":"general/resources/resources/#227-villagers-killed-by-animals","text":"ID: 227 Purpose: Total number of villagers lost to wild animals","title":"227. Villagers Killed by Animals"},{"location":"general/resources/resources/#228-villagers-killed-by-ai-player","text":"ID: 228 Purpose: Total number of villagers lost to AIs","title":"228. Villagers Killed by AI Player"},{"location":"general/resources/resources/#229-villagers-killed-by-human-player","text":"ID: 229 Purpose: Total number of villagers lost to human players","title":"229. Villagers Killed by Human Player"},{"location":"general/resources/resources/#230-food-generation-rate","text":"ID: 230 Purpose: Free food trickle rate (per minute)","title":"230. Food Generation Rate"},{"location":"general/resources/resources/#231-wood-generation-rate","text":"ID: 231 Purpose: Free wood trickle rate (per minute)","title":"231. Wood Generation Rate"},{"location":"general/resources/resources/#232-stone-generation-rate","text":"ID: 232 Purpose: Free stone trickle rate (per minute)","title":"232. Stone Generation Rate"},{"location":"general/resources/resources/#233-gold-generation-rate","text":"ID: 233 Purpose: Free gold trickle rate (per minute)","title":"233. Gold Generation Rate"},{"location":"general/resources/resources/#234-spawn-limit","text":"ID: 234 Purpose: The limit to the number of spawning buildings that can spawn units from spawn command in a technology Note: This is usually overridden by techs","title":"234. Spawn Limit"},{"location":"general/resources/resources/#235-flemish-militia-population","text":"ID: 235 Purpose: Number of alive flemish militia","title":"235. Flemish Militia Population"},{"location":"general/resources/resources/#236-farming-gold-productivity","text":"ID: 236 Purpose: Farming gold generation rate per 100 seconds Default Values: 0: Default 2: (0.02 g/s per farmer) after Burgundian Vineyards Note: Only generates gold while collecting food from farms, and not when walking on them down","title":"236. Farming Gold Productivity"},{"location":"general/resources/resources/#237-folwark-collection-amount","text":"ID: 237 Purpose: This is the amount of food collected from farms built around a folwark Default Values: 0: Default 17.5: Poles 19.25: Poles with Chinese Ally 25: Poles with Horse Collar 27.5: Poles with Horse Collar & Chinese Ally 37.5: Poles with Heavy Plow 41.25: Poles with Heavy Plow & Chinese Ally 55: Poles with Crop Rotation 60.5: Poles with Crop Rotation & Chinese Ally","title":"237. Folwark Collection Amount"},{"location":"general/resources/resources/#238-folwark-attribute-type","text":"ID: 238 Purpose: This is the ID of the resource that is given when a farm is constructed around a folwark Default Values: 0: Poles -1: Default","title":"238. Folwark Attribute Type"},{"location":"general/resources/resources/#239-folwark-building-type","text":"ID: 239 Purpose: This is the ID of the building that the Folwark needs to upgrade from for the farm collection ability to work Default Values: 68: (Mill) Poles -1: Default","title":"239. Folwark Building Type"},{"location":"general/resources/resources/#240-units-converted","text":"ID: 240 Purpose: The amount of units lost to enemy conversions","title":"240. Units Converted"},{"location":"general/resources/resources/#241-stone-mining-gold-productivity","text":"ID: 241 Purpose: Stone mining gold generation rate per 100 seconds Default Values: 0: Default 18: Poles 20.7: Poles with Stone Mining 23.805: Poles with Stone Shaft Mining","title":"241. Stone Mining Gold Productivity"},{"location":"general/resources/resources/#242-trade-workshop-food-productivity","text":"ID: 242 Purpose: Trade Workshop food production rate multiplier Default Values: 1: Default Note: The amount of food obtained from owning n number of TWS (Unit 1647) is given by n * tws_food_productivity * 2.25","title":"242. Trade Workshop Food Productivity"},{"location":"general/resources/resources/#243-trade-workshop-wood-productivity","text":"ID: 243 Purpose: Trade Workshop wood production rate multiplier Default Values: 1: Default Note: The amount of wood obtained from owning n number of TWS (Unit 1647) is given by n * tws_wood_productivity * 2.25","title":"243. Trade Workshop Wood Productivity"},{"location":"general/resources/resources/#244-trade-workshop-stone-productivity","text":"ID: 244 Purpose: Trade Workshop stone production rate multiplier Default Values: 0: Default Note: The amount of stone obtained from owning n number of TWS (Unit 1647) is given by n * tws_stone_productivity * 2.25","title":"244. Trade Workshop Stone Productivity"},{"location":"general/resources/resources/#245-trade-workshop-gold-productivity","text":"ID: 245 Purpose: Trade Workshop gold production rate multiplier Default Values: 1: Default Note: The amount of gold obtained from owning n number of TWS (Unit 1647) is given by n * tws_gold_productivity * 2.25","title":"245. Trade Workshop Gold Productivity"},{"location":"general/resources/resources/#246-units-value-total","text":"ID: 246 Purpose: Total cost of all units created so far Note: This does not decrease when the units die","title":"246. Units Value Total"},{"location":"general/resources/resources/#247-buildings-value-total","text":"ID: 247 Purpose: Total cost of all buildings created so far Note: Increases when foundations are placed. This does not decrease if the foundation is deleted","title":"247. Buildings Value Total"},{"location":"general/resources/resources/#248-villagers-created-total","text":"ID: 248 Purpose: Total number of villagers created so far","title":"248. Villagers Created Total"},{"location":"general/resources/resources/#249-villagers-idle-periods-total","text":"ID: 249 Purpose: Amount of villagers that entered an idle state since game start Note: This only updates every 5 physical minutes. The number of villagers that entered an idle state since the last updated is added to this resource. Starting villager count is the initial value","title":"249. Villagers Idle Periods Total"},{"location":"general/resources/resources/#250-villagers-idle-seconds-total","text":"ID: 250 Purpose: Amount of total seconds all villagers have been idle since game start Note: This only updates every 5 physical minutes. The idle time in seconds for all villagers since the last time this resource was updated is added to this resource. A villager immediately adds its own idle time to this resource if it dies","title":"250. Villagers Idle Seconds Total"},{"location":"general/resources/resources/#251-trade-food-percent","text":"ID: 251 Purpose: Percentage of gold generated from trade that is also given as food Default Values: 0: Default 10: Bengalis","title":"251. Trade Food Percent"},{"location":"general/resources/resources/#252-trade-wood-percent","text":"ID: 252 Purpose: Percentage of gold generated from trade that is also given as wood Default Values: 0: Default","title":"252. Trade Wood Percent"},{"location":"general/resources/resources/#253-trade-stone-percent","text":"ID: 253 Purpose: Percentage of gold generated from trade that is also given as stone Default Values: 0: Default","title":"253. Trade Stone Percent"},{"location":"general/resources/resources/#254-livestock-food-productivity","text":"ID: 254 Purpose: Garrisoned herdable food generation rate per 60 seconds Default Values: 0: Default 3.5: (0.0583 f/s per herdable) Gurjaras","title":"254. Livestock Food Productivity"},{"location":"general/resources/resources/#255-speed-up-building-type","text":"ID: 255 Purpose: This is the ID of the building to use for the speed up effect. Default Values: 1754: (Caravanserai) Default Note: See also: Speed Up Building Type Speed Up Building Range Speed Up Percentage Speed Up Object Type Speed Up Effect Type Speed Up Secondary Effect Type Speed Up Secondary Percentage","title":"255. Speed Up Building Type"},{"location":"general/resources/resources/#256-speed-up-building-range","text":"ID: 256 Purpose: This specifies the range (in tiles) of the area created around the building ( Speed Up Building Type ) (square, from the edges of the building) for the speed up effect Default Values: 8: Default Note: See also: Speed Up Building Type Speed Up Building Range Speed Up Percentage Speed Up Object Type Speed Up Effect Type Speed Up Secondary Effect Type Speed Up Secondary Percentage","title":"256. Speed Up Building Range"},{"location":"general/resources/resources/#257-speed-up-percentage","text":"ID: 257 Purpose: The formulae given below are used with this resource as the value to adjust the attribute ( Speed Up Effect Type ) of all units of class ( Speed Up Object Type ) when they are in the range of the speed up effect Default Values: 0.2: Default Note: For each of the attributes that work with this resource, the new value to set is determined using the following formulae: (013) new_workrate = original + value (005) new_movement_speed = original * (1 + value) (109) new_regeneration_rate = original + (3600/value) See also: Speed Up Building Type Speed Up Building Range Speed Up Percentage Speed Up Object Type Speed Up Effect Type Speed Up Secondary Effect Type Speed Up Secondary Percentage","title":"257. Speed Up Percentage"},{"location":"general/resources/resources/#258-speed-up-object-type","text":"ID: 258 Purpose: This is 900 + class_id for the class of units that should be affected by the speed up effect Default Values: 919: (Trade Cart class) Default Note: See also: Speed Up Building Type Speed Up Building Range Speed Up Percentage Speed Up Object Type Speed Up Effect Type Speed Up Secondary Effect Type Speed Up Secondary Percentage","title":"258. Speed Up Object Type"},{"location":"general/resources/resources/#259-speed-up-effect-type","text":"ID: 259 Purpose: The ID of the attribute that is modified by the speed up effect. Only 5 (Movement Speed), 13 (Work Rate) and 109 (Regeneration) have been found to work so far Default Values: 5: (Movement Speed) Default Note: See also: Speed Up Building Type Speed Up Building Range Speed Up Percentage Speed Up Object Type Speed Up Effect Type Speed Up Secondary Effect Type Speed Up Secondary Percentage","title":"259. Speed Up Effect Type"},{"location":"general/resources/resources/#260-speed-up-secondary-effect-type","text":"ID: 260 Purpose: This is the ID of the secondary attribute that is modified by the speed up effect. Only 5 (Movement Speed), 13 (Work Rate) and 109 (Regeneration) have been found to work so far Default Values: 109: (Regeneration Rate) Default Note: See also: Speed Up Building Type Speed Up Building Range Speed Up Percentage Speed Up Object Type Speed Up Effect Type Speed Up Secondary Effect Type Speed Up Secondary Percentage","title":"260. Speed Up Secondary Effect Type"},{"location":"general/resources/resources/#261-speed-up-secondary-percentage","text":"ID: 261 Purpose: This amount is added to the secondary attribute ( Speed Up Secondary Effect Type ) of all units of class ( Speed Up Object Type ) when they are in the range of the speed up effect Default Values: 60: Default Note: See also: Speed Up Building Type Speed Up Building Range Speed Up Percentage Speed Up Object Type Speed Up Effect Type Speed Up Secondary Effect Type Speed Up Secondary Percentage","title":"261. Speed Up Secondary Percentage"},{"location":"general/resources/resources/#262-extra-elephant-convert-resist","text":"ID: 262 Purpose: Provides additional conversion resistance to elephant units Default Values: 0: Default 1: Bengalis","title":"262. Extra Elephant Convert Resist"},{"location":"general/resources/resources/#263-starting-scout-id","text":"ID: 263 Purpose: Unit ID for the starting scout. Can be set to any unit (even buildings) Default Values: 448: (Scout Cavalry) Default 751: (Eagle Scout) Aztecs, Incas and Mayans 1755: (Camel Scout) Gurjaras","title":"263. Starting Scout ID"},{"location":"general/resources/resources/#264-relic-wood-production-rate","text":"ID: 264 Purpose: Relic wood production per minute Default Values: 0: Default Note: This is not affected by Atheism","title":"264. Relic Wood Production Rate"},{"location":"general/resources/resources/#265-relic-stone-production-rate","text":"ID: 265 Purpose: Relic stone production per minute Note: This is not affected by Atheism","title":"265. Relic Stone Production Rate"},{"location":"general/resources/resources/#266-chopping-gold-productivity","text":"ID: 266 Purpose: Lumberjack chopping gold generation rate per 100 seconds Default Values: 0: Default 1.5: (0.015 g/s per lumberjack) Vietnamese with paper money 1.8: (0.018 g/s per lumberjack) Vietnamese with paper money & Double Bit Axe 2.16: (0.0216 g/s per lumberjack) Vietnamese with paper money & Double Bit Axe & Bow Saw 2.376: (0.02376 g/s per lumberjack) Vietnamese with paper money & Double Bit Axe & Bow Saw & Two-Man Saw Note: Only generates gold while collecting wood from trees, and not when cutting them down","title":"266. Chopping Gold Productivity"},{"location":"general/resources/resources/#267-unused-resource-267","text":"ID: 267 Purpose: Unused","title":"267. Unused Resource 267"},{"location":"general/resources/resources/#268-unused-resource-268","text":"ID: 268 Purpose: Unused","title":"268. Unused Resource 268"},{"location":"general/resources/resources/#269-unused-resource-269","text":"ID: 269 Purpose: Unused","title":"269. Unused Resource 269"},{"location":"general/xs/","text":"What Is XS Scripting \u00b6 Written By: Alian713 XS stands for External Subroutines and it is a custom programming language that was made by Ensamble Studios and originally used in AoM and AoEIII. Now it has been brought over to AoE2DE since update 42848 . An XS Script can be used in an RMS and Custom Scenarios, and it is a program that can perform calculations and execute different functions and effects. If you are familiar with programming, then start here . This contains all the information that you need to know about XS in the most precise form possible assuming you have knowledge of programming. If you are unfamiliar with programming, then start here . This contains a beginner guide to XS assuming no background in programming. All necessary concepts required to use XS are covered from the ground up!","title":"What Is XS Scripting"},{"location":"general/xs/#what-is-xs-scripting","text":"Written By: Alian713 XS stands for External Subroutines and it is a custom programming language that was made by Ensamble Studios and originally used in AoM and AoEIII. Now it has been brought over to AoE2DE since update 42848 . An XS Script can be used in an RMS and Custom Scenarios, and it is a program that can perform calculations and execute different functions and effects. If you are familiar with programming, then start here . This contains all the information that you need to know about XS in the most precise form possible assuming you have knowledge of programming. If you are unfamiliar with programming, then start here . This contains a beginner guide to XS assuming no background in programming. All necessary concepts required to use XS are covered from the ground up!","title":"What Is XS Scripting"},{"location":"general/xs/beginner/","text":"XS Scripting: A Beginner's Guide \u00b6 Written by: Alian713 Are you a programmer? \u00b6 If you know how to program in any language then you're wasting your time on this page! See the For Programmers instead, it is a shorter and more precise documentation since XS is just another programming language but with different syntax. If you're not a programmer, fear not! You are at the right place to learn all about XS! 1. Using an XS Script \u00b6 To use an XS script: Make sure you can see file extensions. That means that every file on your computer should have a name that looks something like filename.ext . If you can see file extensions, then proceed to step 2. If not, then follow these steps: Press + E Click View right at the top. On the right side of the panel that appears, there will be an option called File Name Extensions . Check this option if it is not already checked. Navigate to the folder: C:\\Program Files (x86)\\Steam\\steamapps\\common\\AoE2DE\\resources\\_common\\xs There should be 2 files in this folder already, called Constants.xs and xs.txt . In here, create a new file with any name ending with .xs . For example, the file can be called filename.xs default0.xs There may be an additional file called default0.xs . Never write code in this file as this is a temporary file and can be overwritten by the game. The file Constants.xs contains a list of constants that can be used in any XS Script, using their name. They are essentially constants that the XS language pre-defines for you. Now open this file that you just created in your favourite text/code editor! If you don't have one already, using Visual Studio Code (VSC) is recommended. A VSC Extension for syntax highlighting and code auto completion for AoE XS Scripting can be found here To begin with using XS, write this basic code in the file: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 // Anything that is written after a double front slash is a comment. // A comment is a line that is ignored when running the script. // comments are useful for explaining your code to others and // more importantly, your future self. // writing comments is a good habit because it helps you understand your // own code better. // you will see comments widely used in this guide, to explain almost // every bit of code that you see // do note though, that even though commenting is a good practise, // over commenting code is a worse thing to do. Only comment stuff // that really needs commenting! /* Anything enclosed by a front slash and asterisk pair is a multi line comment */ // Here, you are creating a function that is called 'main'. void main () { // this line says that you have an integer called 'a' that has a value of 10. // note that almost every statement in XS is ended with a semi colon, // just like in english we use periods to indicate the end of a sentence. int a = 10 ; int b = 20 ; // this line says that you make a new integer called 'c' and it is the sum of 'a' and 'b'. int c = a + b ; // this line will show in the game chat the value of 'c'. This shows '30' in chat. xsChatData ( \"\" + c ); } 1.1. In a Custom Scenario \u00b6 Open the scenario in the editor Under the Map tab, type the name of the XS Script that you created in the Script Filename field without the .xs at the end. For example, if your file is called filename.xs then you will write filename in this field. Now, under the Triggers tab in the editor, add a new trigger, then add a new effect. (If you do not know what a trigger/effect is, please go through the Custom Scenarios: Triggers: Trigger Basics section of this guide) From the Effects List select Script Call . You can now use the functions in the XS Script in the message box, by typing \"function_name_here();\" The main() function that we made above is automatically run when the scenario is played. If there are no errors in the code, clicking the E#0: Script Call effect will turn it green. If there is an error in the script, an error message will be shown. Testing the scenario now will run the Script Call effect in the trigger defined above, which in turn will run the main() function in the XS Script and 30 will be shown in the chat. 1.2. In an RMS \u00b6 Open the RMS file in a text editor At the very top, type #includeXS filename.xs . Here, filename.xs is the name of the file that you created above. The main() function that we made above is automatically run when a map is generated using the RMS. To test, load the RMS in a single player (or multi player) lobby and start the game. When the map is generated, the main() function in the XS Script will run and 30 will be shown in the chat. It is recommended that you use a custom scenario to test XS Scripts, as it is easier to debug them in the editor. Now that you have set up an XS file with a main() function inside, you can type code inside this function to do different things! We'll be walking through all of the different things that are known to be possible one by one, and things will become clearer. 2. Programming Concepts: \u00b6 2.1. Constants \u00b6 To do anything in an XS Script, we need constants. Any value that remains the same throughout the execution of the script is known as a constant. Quite literally, it remains constant throughout the execution of then script. For example, 10 is a constant. Every number is a constant. 2.2. Variables \u00b6 Variables are like boxes that are used to store constants. Variables are values that can change during the execution of the script! Think about it this way, if a variable is a box that stores a constant, that constant can be taken out and another one can be put in. Quite literally, it is a variable (it may change!). For example, the script that we saw earlier uses 3 variables, called a b and c . 1 2 3 4 5 6 void main () { int a = 10 ; int b = 20 ; int c = a + b ; xsChatData ( \"\" + c ); } Some questions that you might have now are: What is this int that preceeds the variable's name? That is the \"data type\" of the variable! What is a data type you ask? Every variable in a script has a data type, that is, it tells you what kind of value is stored in the variable. Think about it this way, if you want to store water, you need to specify that it must be stored in a bottle. Isn't that kind of obvious you might say? While to a human it might be obvious, a computer is a dumb machine. It does not know what to do unless you tell it, it is like a baby who must be spoonfed every tiny detail and instruction for it to work properly. What other types of data types are there? There are a total of 5 data types supported by XS, they are: Integer ( int ) You have seen an int before, an integer is a data type that stores an integer quantity. An integer quantity may be negative, positive, or zero. It never has any fractional or decimal parts (for example, an integer never has 0.5 ). Usage: int a = 10 ; This declares a variable of type int called a with a value of 10 Floating Point ( float ) A float is a data type that can store values with fractional parts or decimals. For example 1.5 is a floating point value. Usage: float a = 3.14159 ; This declares a variable of type float called a with a value of 3.14159 Why would you ever use an int then? The reason is because computers take longer to perform calculations with floats! If you know that your calculation will not involve fractional values and decimals, you should always use an integer instead of a floating point value Boolean ( bool ) A bool is a data type, that can only store one of two different values, true or false . Any yes or no question is a boolean question in some sense, because there are only two answers, yes or no. Boolean variables are super important for conditions, which we will be looking at later. Usage: bool a = true ; This declares a variable of type bool called a with a value of true Note A value of true is also indicated by 1 and a value of false is also indicated by 0 . String ( string ) A string is a word, a phrase or a sentence. A string is always enclosed by double quotes. Usage: string a = \"this is a string! yay\" ; This declares a variable of type string called a with a value of \"this is a string! yay\" Vector ( vector ) A vector is a variable that can store the coordinates of a point ( x , y , z ) . If you don't know what that means, just take it as a variable that stores three different float values. The first value is called the \"X component\", the second value is called the \"Y component\" and the last value is called the \"Z component\". Usage vector v = vector ( 1.2 , 2.3 ., 3.2 ); This declares a variable of type vector called v that represents a point with coordinates ( 1.2 , 2.3 , 3.2 ) . Remember that your variable names can be almost anything! However, this does not mean that you should just use single letters or alphabets for variable names. Variable names should be chosen such that they represent, or hint to what the purpose of the variable is. Naming your variables such that they make intuitive sense is a good programming practise. How do I actually change a variable? 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 void main () { int my_var = 20 ; // you only need to specify the data type of a variable once // when it is created. This \"first time\" creation is known // as \"variable declaration\" or \"initialisation\". // This way, when you change the value of the variable // you don't need to say that it is an integer again my_var = 30 ; // you can set variables equal to each other as well. int my_var2 = my_var ; // note that a variable can only be changed to another value // of a similar data type. This means that this following line // is WRONG: my_var = \"this is a string\" ; // trying to initialise a variable without a data type is also // WRONG: my_var3 = \"this string cannot be initalised since the data type is missing!\" ; float my_var4 = my_var ; } This process of changing the value that a variable stores is called \"assignment\". So in the above example, We first initalise my_var to 20 . Then we assign a value of 30 to my var . Then we initialise another variable called my_var2 whose value is equal to the value of my_var . Then we try to assign the string \"this is a string\" to my_var but remember that my_var is an integer, and it is not capable of storing a string, so this will actually give you an error. Think about it this way, you cannot put water in a paper bag, paper bags are not meant to store water! There is an exception to this rule: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 void main () { int a = 10 ; float b = 20.5 ; // the only cases where you can assign one type of data to another // is when going from integers to floats float c = a ; // this will show 10.0 in game chat xsChatData ( \"\" + c ); // or when going from floats to integers. // However, since integers cannot store the fractional part, // it is discarded! int d = b ; // this will show 20 in game chat xsChatData ( \"\" + d ); } Lastly, we try to initialise a new variable called my_var3 but we have not specified a data type! This will also give you an error. Think about it this way, if you want to store water, you need to specify if you want to use a paper bag or a water bottle. Can I make a variable whoes value cannot be changed? Yes! initialising a variable with the word const will make it a constant, and you won't be able to change its values. Usage: const int a = 10 ; If you now try to change the value of a , you will get an error. 2.3. Variable Naming Rules and Conventions: \u00b6 There are some rules that must be followed when naming a variable. They are: You can only use letters, numbers and underscores to name your variables. A variable name cannot start with a number. Variable names are CaSe SeNsItIvE . This means that a and A are two different variable names! Variable names must not be keywords. A keyword is a reserved word in any programming language that has a special meaning! For example, int is a keyword in XS because it is used to declare a variable of the int data type. While these are the only laws that you absolutely must follow, there are some conventions or unwritten rules that all programmers agree to follow to make their code more readable, and more clear. When you are writing a variable name that is just one word, it is conventional to write it in all small letters. For example int radius = 10 ; or string name = \"Alian713\" ; . When you are writing a variable name that consists of more than one word, then it is conventional to write it in a special case known as \"camel case\". Camel case is where the first letter of every word is capitalised except the first word. For Example: float gearRatio = 2.2 ; or string firstName = \"Bruce\" ; or string lastName = \"Wayne\" ; . When you are writing a variable that is supposed to just store the value of a constant, one which you never intend to change, it is conventional to use capital letters and words are separated by underscores. For example: float PI = 3.14159 ; or float GOLDEN_RATIO = 1.61803 ; . Variable names should be precise and mnemonic. That is, they should indicate to a casual programmer their purpose. Usage of single letter variable names is discouraged unless it is a throwaway or temporary variable. 2.4. Operations \u00b6 Now that we know how to store and change the values of a variable, what can we actually do with them? 2.4.1. Arithmetic Operations \u00b6 The most obvious thing that we can do with numbers, is do arithmetic with them. XS Scripts support the following five arithmetic operations: Addition: a+b this gives you the sum of two variables, a and b . for example, Subtraction: a-b this gives you the difference of two variables, a from b . Multiplication: a*b this gives you the product of two variables, a and b . For example: 1 2 3 4 5 6 7 8 9 10 11 12 13 void main () { int a = 69 ; int b = 420 ; // this will chat 489 in game (69+420 = 489) xsChatData ( \"result of 420+69 = \" + ( a + b )); // this will chat 351 in game (420-69 = 351) xsChatData ( \"result of 420-69 = \" + ( b - a )); // this will chat 28980 in game (420*69 = 28980) xsChatData ( \"result of 420*69 = \" + ( a * b )); } Division: a/b this gives you the division of a by b . Note that in programming, division is weird with how it works for integers and floats: For int , it performs what we call \"integer division\": 5 / 2 = 2 17 / 6 = 2 Basically, you round down any fractional part to your answer when you do normal division for integers. For float , it performs regular division as you would expect: 5.0 / 2.0 = 2.5 17.0 / 6.0 = 2.83333 This gives you the exact result of division. What if you mix a float and an int ? In that case, regular division is used. Modulo: a%b this gives you the remainder when dividing a by b . DataType of Result of Operation Due to a bug at the moment, the data type of the answer of any operation is decided by the first number used in the operation. This means that 9 * 5.5 evaluates to 49 instead of 49.5 . However, 5.5 * 9 will correctly evaluate to 49.5 . Note that this is a bug in XS itself and will probably be fixed in a future update For Example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 void main () { // this will chat 2 in game (5/2 = 2.5 but remember, this is integer division! so round down to 2) xsChatData ( \"result of 5/2 = \" + ( 5 / 2 )); // this will chat 2 in game (17/6 = 2.833 but remember, this is integer division! so round down to 2) xsChatData ( \"result of 17/6 = \" + ( 17 / 6 )); // this will chat 2.5 in game (since the numerator is a float, float division will give the exact value) xsChatData ( \"result of 5.0/2 = \" + ( 5.0 / 2 )); // this will chat 2 in game (since the numerator is an int, integer division will give the exact value) xsChatData ( \"result of 5/2.0 = \" + ( 5 / 2.0 )); // this will chat 5 in game (17%6 = 5) xsChatData ( \"result of 17%6 = \" + ( 17 % 6 )); // this should chat 0.5 in game (2.5%1 = 0.5) xsChatData ( \"result of 17%6 = \" + ( 2.5 % 1 )); // Due to a bug at the moment, this will actually show 0.0 // Modulo on fractions does not work properly at this time. } Also Additionally, when testing stuff using xsChatData , be wary of some quirks that this has: 1 2 3 4 5 6 7 8 9 10 11 12 13 void main () { // Note that chat data does not send the same thing multiple consecutively // which means if two calculations have the same result, only the first // one is shown xsChatData ( \"this is shown only once\" ); xsChatData ( \"this is shown only once\" ); xsChatData ( \"this is shown only once\" ); xsChatData ( \"this is shown only once\" ); xsChatData ( \"this is shown twice\" ); xsChatData ( \"this will make them non consecutive\" ); xsChatData ( \"this is shown twice\" ); } The way around this is to use a unique number or letter at the start of every message so that even if the content of the message is the same, the number is different so that it gets shown the right amount of times 2.4.2. The Assignment Operation \u00b6 Remember that when we use the = sign in programming, it is not a mathematical equality statement. It actually tells us that we are assigning a value to a variable. So when you see something like a = a+1; , this means that you are simply adding 1 to the value of a . you are assigning the value a+1 to a . Once again, it is not a mathematical equality statement, it is an assignment. 2.4.3. Postfix Operations \u00b6 If you want to increase or decrease the value of a variable by one, then writing a = a + 1; or a = a - 1; is one way to do it. Writing a++; or a--; is another way to do it. 1 2 3 4 5 6 7 8 9 void main () { int a = 10 ; // increase the value of a to 11 a ++ ; // decrease the value of a back to 10 a -- ; } 2.4.4. Relational Operations \u00b6 Relational operations allow us to compare one number with another. With these, you can find out if one variable is greater than another or not, if two variables are equal or not, and much more. If you have two numbers \\(\\color{yellow} \\text{A}\\) and \\(\\color{yellow}\\text{B}\\) , and are asked \" \\(\\text{if} \\; \\color{yellow}\\text{A} \\; \\color{red} \\text{is greater than} \\; \\color{yellow}\\text{B} \\color{white}\\) ?\" then you can have only two possible answers, it will either be yes or no. Similarly, if you are asked \" \\(\\text{if} \\; \\color{yellow}\\text{A} \\; \\color{red} \\text{is equal to} \\; \\color{yellow}\\text{B} \\color{white}\\) ?\" then this question also has only two answers, yes or no. Whenever you use a relational operator, it is like asking one of these questions above. Then how does a computer answer a question like this? Remember, a boolean data type can either be true or false , it does exactly this! Thus, the answers to all relational operations give you boolean values. a < b This checks if the number a is lesser than b . If it is, then the expression evaluates to true , else it evaluates to false . For example: 1 2 3 // this will print \"5 < 10 : 1\" xsChatData ( \"5 < 10 : \" + ( 5 <> 10 )); // remember, in programming, 1 is the same as true a > b This checks if the number a is greater than b . If it is, then the expression evaluates to true , else it evaluates to false . For example: 1 2 3 // this will print \"5 > 10 : 0\" xsChatData ( \"5 > 10 : \" + ( 5 > 10 )); // remember, in programming, 0 is the same as false a <= b This checks if the number a is lesser than or equal to b . If it is, then the expression evaluates to true , else it evaluates to false . For example: 1 2 3 4 5 // this will print \"5 <= 10 : 1\" xsChatData ( \"5 <= 10 : \" + ( 5 <= 10 )); // this will print \"10 <= 10 : 1\" xsChatData ( \"10 <= 10 : \" + ( 10 <= 10 )); a >= b This checks if the number a is greater than or equal to b . If it is, then the expression evaluates to true , else it evaluates to false . For example: 1 2 3 4 5 // this will print \"5 >= 10 : 0\" xsChatData ( \"5 >= 10 : \" + ( 5 >= 10 )); // this will print \"10 >= 10 : 1\" xsChatData ( \"10 >= 10 : \" + ( 10 >= 10 )); a == b This checks if the number a is equal to b . If it is, then the expression evaluates to true , else it evaluates to false . For example: 1 2 3 4 5 // this will print \"5 == 10 : 0\" xsChatData ( \"5 == 10 : \" + ( 5 == 10 )); // this will print \"10 == 10 : 1\" xsChatData ( \"10 == 10 : \" + ( 10 == 10 )); a != b This checks if the number a is not equal to b . If it is, then the expression evaluates to true , else it evaluates to false . For example: 1 2 3 4 5 // this will print \"5 != 10 : 1\" xsChatData ( \"5 != 10 : \" + ( 5 != 10 )); // this will print \"10 != 10 : 0\" xsChatData ( \"10 != 10 : \" + ( 10 != 10 )); Relational Operators on Strings These relational operators also work on string values, for example a < b checks if a would alphabetically preceed b . For Example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 void main () { // With numbers: int a = 10 ; float b = 20.0 ; int c = 30 ; // this would chat 1 xsChatData ( \"a < b is \" + a < b ); // this would chat 0 xsChatData ( \"b > c is \" + ( b > c )); // this would chat 0 xsChatData ( \"(a+b) == b is\" + (( a + b ) == b )); // this would chat 1 xsChatData ( \"(a+b) >= c is\" + (( a + b ) >= c )); // this would chat 1 xsChatData ( \"b <= c is \" + ( b <= c )); // With strings: string str1 = \"ball\" ; string str2 = \"apple\" ; string str3 = \"cat\" ; string str4 = \"cat\" ; // this would chat 0 in game // this is because alphabetically, str1 does not come before str2 xsChatData ( \"str1 < str2 is \" + ( str1 < str2 )); // this would chat 1 in game // this is because alphabetically, str2 comes before str3 xsChatData ( \"str3 > str2 is \" + ( str3 > str2 )); // this would cha ttrue xsChatData ( \"str3 == str4 is \" + ( str3 == str4 )); // this would cha ttrue xsChatData ( \"str1 != str2 is \" + ( str1 != str2 )); } 2.4.5. Boolean Operations \u00b6 If two or more things are required to do a task, we can say that \"this AND that are required to do the task\". For example: To write an email to someone, you must \" \\(\\color{yellow} \\text{have a computer} \\; \\color{red} \\text{and} \\; \\color{yellow} \\text{have active internet}\\) \" To paint something, you must \" \\(\\color{yellow} \\text{have a paper} \\; \\color{red} \\text{and} \\; \\color{yellow} \\text{have paint} \\; \\color{red} \\text{and} \\; \\color{yellow} \\text{have a paint brush}\\) \" Similarly, if only one, or more things are required to do a task we say that \"this OR that is needed to do the task\". For example: To play a video game, you need to \" \\(\\color{yellow} \\text{own a computer} \\; \\color{red} \\text{or} \\; \\color{yellow} \\text{own a gaming console}\\) \" Note that you can still play video games if you own both! To draw something you must \" \\(\\color{yellow} \\text{have a pencil} \\; \\color{red} \\text{or} \\; \\color{yellow} \\text{have a pen} \\; \\color{red} \\text{and} \\; \\color{yellow} \\text{have a paper}\\) \" Boolean operations allow us to ask these sorts of questions but with boolean values instead. For example, if you wanted to ask \"is A greater than B and C?\" then you require boolean operations. Boolean AND: This is used to check if two or more boolean values are simultaneously true . Usage: a && b (Here, a and b are boolean variables) This checks if both a AND b are true . If they are, the expression evaluates to true , otherwise it evaluates to false . Every combination of inputs and outputs for a && b can be written in a table: a b a && b false false false false true false true false false true true true Tip The AND operation is not limited to just two variables. Any number of variables may be AND-ed together. For Example: a && b && c && d . For this expression to evaluate to true, ALL of a , b , c and d must be true. Writing a table that lists every combination of inputs and outputs for this expression is left as an excersise for the reader. Boolean OR: This is used to check if one or more booleans are true . Usage: a || b (Here, a and b are boolean variables) This checks if either a or b is true . If one of them is, then the expression evaluates to true , else it evaluates to false . Every combination of inputs and outputs for a || b can be written in a table: a b a || b false false false false true true true false true true true true Tip The OR operation is not limited to just two variables. Any number of variables may be OR-ed together. For Example: a || b || c || d . For this expression to evaluate to true, only one of a , b , c and d needs to be true. Writing a table that lists every combination of inputs and outputs for this expression is left as an excersise for the reader. ANDs and ORs can be used together in the same expression. For example: (a || b) && c : for this expression to be true , either a or b and c must be true . a || (b && c) : for this expression to be true , either a must be true or b and c must be true simultaneously. Note If no brackets are used when writing these expressions the expression is evaluated left to right. This means that a || b && c || d is the same as ((a || b) && c) || d . Thus, to make it absolutely clear as to what you mean when writing a boolean expression, you should ALWAYS use brackets appropriately for clarity, even though it is not necessary to do so. For example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 void main () { int a = 10 ; int b = 20 ; int c = 30 ; // this would assign true to d // because both a < b and c > d are true bool d = ( a < b ) && ( c > b ); // this would assign false to d // because c < b is not true d = ( a < b ) && ( c < b ); // this would assign true to d // because a < b is true d = ( a < b ) || ( c < b ); // this would assign false to d // because neither a > b nor c < b is true d = ( a > b ) || ( c < b ); } 2.4.6. Concatenation \u00b6 When two strings are joined to form a new string, it is known as concatenation. Other data types may also be concatenated with strings. For Example: 1 2 3 4 5 6 7 8 9 10 11 12 void main () { string a = \"this is \" ; string b = \"string concatenation!\" ; int c = 11 ; float d = 5.5 ; bool e = true ; vector v = vector ( 1 , 2 , 3 ); // chats \"this is string concatenation! 11 5.5 1 (1.0, 2.0, 3.0)\" xsChatData ( a + b + \" \" + c + \" \" + d + \" \" + e + \" \" + v ); // remember, true and false are also represented by 1 and 0 respectively! } 2.4.7. Vector Operations \u00b6 Manipulating vectors in XS is done in a bit of a special way: Initialising a vector: We have already seen how this is done: vector v = vector ( 1 , 2 , 3 ); No Vars in Vector Initialisation For some reason, currently we cannot use variables to initialise vectors inside vector () ; This is probably a bug and will be fixed in future versions of XS. For example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 void main () { float x = 1.0 ; float y = 2.0 ; float z = 3.0 ; vector myVector = vector ( x , y , z ); // does not work, thxDE // alternatively, this would work: vector myVector = cInvalidVector ; myVector = xsVectorSetX ( myVector , x ); // sets the X component of the vector myVector = xsVectorSetY ( myVector , y ); // sets the y component of the vector myVector = xsVectorSetZ ( myVector , z ); // sets the z component of the vector // alternatively, even shorter way to do this: myVector = xsVectorSet ( 1 , 2 , 3 ); // here cInvalidVector is a pre-defined constant that XS recognises, it is the vector (-1, -1, -1) // Similarly, cOriginVector is a pre-defined constant that XS recognises, it is the vector (0, 0, 0) } Obtaining the X, Y, and Z components of a vector: The X, Y and Z components of a vector can be accessed as follows: 1 2 3 4 5 6 7 void main () { vector myVector = vector ( 1 , 2 , 3 ); float x = xsVectorGetX ( myVector ); // gives you the X component of the vector float y = xsVectorGetY ( myVector ); // gives you the y component of the vector float z = xsVectorGetZ ( myVector ); // gives you the z component of the vector } Setting the X, Y, and Z components of a vector individually: The X, Y and Z components of a vector can be set as follows: 1 2 3 4 5 6 void main () { vector myVector = vector ( 1 , 2 , 3 ); myVector = xsVectorSetX ( myVector , 10 ); // sets the X component of the vector myVector = xsVectorSetY ( myVector , 20 ); // sets the y component of the vector myVector = xsVectorSetZ ( myVector , 30 ); // sets the z component of the vector } Note that it is not necessary to change all 3 components at the same time, you can chose to only change one if you want to. Setting the entire vector: If you know that you want to change all 3 components of a vector, it can be done in one go instead of in 3 separate lines like above: 1 2 3 4 void main () { vector myVector = vector ( 1 , 2 , 3 ); myVector = xsVectorSet ( 10 , 20 , 30 ); } Obtaining the length of a vector: The length of a vector can be obtained as follows: 1 2 3 4 void main () { vector myVector = vector ( 1 , 2 , 3 ); float length = xsVectorLength ( myVector ); } Note Mathematically, the length of a vector is given by \\(\\sqrt{x^2+y^2+z^2}\\) Normalizing a vector: The unit vector along the direction of the given vector is obtained by normalising it: 1 2 3 4 void main () { vector myVector = vector ( 1 , 2 , 3 ); vector unitVectorAlongMyVector = xsVectorNormalize ( myVector ); } Note Mathematically, the normalised vector is given by \\(\\left(\\cfrac{x}{\\sqrt{x^2+y^2+z^2}}, \\cfrac{y}{\\sqrt{x^2+y^2+z^2}}, \\cfrac{z}{\\sqrt{x^2+y^2+z^2}}\\right)\\) 2.5. Flow Control Statements \u00b6 There are two types of flow control statements: 2.5.1. Conditionals \u00b6 There are times in life when you need to make decisions, and these decisions depend on certain conditions. For example, suppose that you are in a class, then a decision that you might have to make would be: \\(\\color{red} \\text{if} \\; \\color{yellow} \\text{you have a pen,} \\; \\color{red} \\text{then} \\; \\color{white} \\text{you can write on a piece of paper,} \\; \\color{red} \\text{else} \\; \\color{white} \\text{you borrow a pen}\\) Similarly, when writing a script, it might be needed to make decisions at some points in your code. Conditionals are decision making statements that can be used to chose which set of instructions to execute depending on given conditions. There are two types of conditionals suported by XS: The if else if statement An if else statement is used whenever you need your script to make decisions. It executes one set of instructions if a conditon is true or else it executes another set of instructions. Usage: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 void main () { int a = 10 ; int b = 20 ; // if(boolean expression / variable / constant) if ( b > a ) { // if the above condition is true do: xsChatData ( \"does one thing\" ); xsChatData ( \"b > a confirmed!\" ); } else { // if the above condition is not true do: xsChatData ( \"does another thing\" ); xsChatData ( \"b <= a confirmed!\" ); } } Anything that is written inside curly braces {} is known as a \"block\" of code. A block of code written under an if is called the \"body\" of that if . If there is only one instruction that needs to be run inside an if or else then the curly braces {} can be omitted: 1 2 3 4 5 6 7 8 void main () { int a = 10 ; int b = 20 ; if ( b > a ) xsChatData ( \"does only one thing\" ); else xsChatData ( \"does only another thing\" ); } An if statement does not need to be followed by an else statement everytime 1 2 3 4 5 6 void main () { int a = 10 ; int b = 20 ; if ( b > a ) xsChatData ( \"doesn't do anything if the conditon is false\" ); } What if you need to check multiple conditions and do separate things for each case? this is when you use an if else if statement! 1 2 3 4 5 6 7 8 9 10 void main () { int a = 10 ; int b = 20 ; if ( b > a ) xsChatData ( \"b > 20\" ); else if ( b == 20 ) xsChatData ( \"b == 20\" ); else xsChatData ( \"no condition is true\" ); } Note In the above example, both the ( b > a ) and ( b == 20 ) conditions are true. However, in an if else if statement, only one branch of instructions is ever executed. Which condition takes proiority is decided by what order you write them in. So in this case, \"b > 20\" will be chatted to the screen because that is the first condition which is true. Technically, whenever a condition becomes true and its branch of instructions are executed, all of the remaining conditions are skipped, and not even evaluated. Practise Now that you are armed with the power of if else if , can you: Write a script that would chat to the screen the maximum of 3 given variables. When you're ready, click the \"Answer\" to view the solution. Answer 1 2 3 4 5 6 7 8 9 10 11 void main () { int a = 10 ; int b = 20 ; int c = 30 ; if ( a > b && a > c ) xsChatData ( \"the maximum is a: \" + a ); else if ( b > c && b > a ) xsChatData ( \"the maximum is b: \" + b ); else xsChatData ( \"the maximum is c: \" + c ) } The switch - case statements: A switch - case is a branching structure used when you want to do several differnt things depending on the value of a variable: For example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void main () { int a = 10 ; switch ( a ) { case 10 : { xsChatData ( \"if(a == 10)\" ); xsChatData ( \"do this\" ); } case 20 : { xsChatData ( \"else if(a == 20)\" ); xsChatData ( \"do this\" ); } default : { xsChatData ( \"else\" ); xsChatData ( \"do this\" ); } } } This is the same as doing: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 void main () { int a = 10 ; if ( a == 10 ) { xsChatData ( \"if(a == 10)\" ); xsChatData ( \"do this\" ); } else if ( a == 20 ) { xsChatData ( \"else if(a == 20)\" ); xsChatData ( \"do this\" ); } else { xsChatData ( \"else\" ); xsChatData ( \"do this\" ); } } Similar to if else , if there is only one instruction to execute, the curly braces {} can be omitted: 1 2 3 4 5 6 7 8 9 10 11 void main () { int a = 10 ; switch ( a ) { case 10 : xsChatData ( \"if(a == 10) do this\" ); case 20 : xsChatData ( \"else if(a == 20) do this\" ); default : xsChatData ( \"else do this\" ); } } 2.5.2. Loops \u00b6 There are times in life when you need to repeatedly keep doing something under certain conditions. For example, suppose that you are playing a game and you are stuck on a boss fight where you keep dying, something that you are doing might be: \\(\\color{red} \\text{while} \\; \\color{yellow} \\text{you have not defeated the boss,} \\; \\color{white} \\text{try again}\\) If you wanted to write out the times two table, you might do: \\(\\color{red} \\text{for} \\; \\color{yellow} \\text{every} \\; \\color{green} \\text{number} \\; \\color{red} \\text{between 1 and 10} \\; \\color{white} \\text{write }2\\times \\color{green} \\text{number}\\) Similarly, when writing a script, it might be needed to repeat certain parts of your code multiple times. Loops are statements that can be used to repeatedly execute a block of code given a condition is true. Sometimes the need arises to repeatedly execute the same statement or a statement where only a few things are changing. Loops are statements that allow us to do exactly that! There are two types of loops suported by XS: The while loop: A while statement repeatedly executes a block of code as long as (while) something is true . This process of repeatedly executing the same block of code is known as iteration! For example: 1 2 3 4 5 6 7 8 9 10 11 12 void main () { int a = 0 ; while ( a < 10 ) { xsChatData ( \"a = \" + a ); a ++ ; // remember that a++ increases the value of a by one. // what would happen if you forgot to write a++? // your script would get stuck in an \"infinite\" loop // and the game would crash } } Practise Now that you are armed with the power of while , can you: Write a script that would chat to the screen the following pattern: 1, 2, 4, 7, 11, 16... up to 15 terms? If you need help, but don't want to see the full solution immediately, click \"Hint\" When you're ready, click \"Answer\" to view the solution. Hint Hint: Notice that the pattern here is that each time, the increase of the terms is also going up by one. The 2 nd term is the first term + 1, the 3 rd term is the 2 nd term + 2, and so on. Answer 1 2 3 4 5 6 7 8 9 void main () { int number = 1 ; int increase = 1 ; while ( increase <= 15 ) { xsChatData ( \"number = \" + number ); number = number + increase ; increase ++ ; } } The for loop: A for statement is specifically used to loop over a range of values, say 5 to 23 For example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void main () { for ( a = 5 ; < 23 ) { xsChatData ( \"a = \" + a ); // the for loop takes care of increasing the value // of a by one every time // you cannot modify 'a' inside the for loop } // what if i wanted to go down from 10 to 0? // that is also possible: for ( a = 10 ; > 0 ) { xsChatData ( \"a = \" + a ); // here the for loop figures out automatically // that you need to decrease a instead of increasing it. } } How do we pick which loop to use? Firstly, a while loop can do all that a for loop can. However, a while loop is much slower than a for loop in performance! If it is possible, you should always stick to using for loops! A for loop also takes care of increasing or decreasing the variables of iteration, which means that you cannot accidently cause an \"infinite\" loop unlike a while loop. 2.6. Modular Programming \u00b6 2.6.1. Functions \u00b6 Lets say that you are watching TV. Every time you want to change the channel, you will use the same remote. It would be quite inconvenient if you had to make a new remote each time you wanted to change the channel. Similarly, when writing a script, you might want to write a piece of code that you need to re-use multiple times in different parts of your script. Functions allow us to do exactly this! A function is a piece of code that can input some values and use them to perform a given task. You have already seen a function before! xsChatData(string str); is actually a function which inputs a string and chats it in game. Another useful function is sqrt(float number); which calculates the square root of a value. Usage: float a = sqrt ( 4 ); This assigns the value 2.0 to a . An interesting thing to note here is that some functions \"give you back\" a value, like sqrt ( 5 ); will \"give you back\" \\(\\approx\\) 2.24 . This property that a function \"gives you back\" a value is formally known as the fact that the function \"returns\" a value. Not all functions do this, for example xsChatData ( \"my message\" ); simply displays that message on screen and does not return any value. A function can return a value of any data type. Each function also takes a set of inputs. xsChatData takes in a string, sqrt takes in a float. The set of inputs that a function can take are formally known as its \"parameters\". While these are inbuilt functions in XS that are provided to us to use to use directly, we can also define our own functions. This is how a function is defined in XS: Usage: 1 2 3 4 returnType functionName ( dataType parameter1 = defaultValue , dataType parameter2 = defaultValue ) { return ( value ); // value must be a data type that is the same as returnType } If it is not clear what this means, bare with this usage for a minute and see this example below: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 // this is a custom function that returns the maximum of two integers. int max ( int a = 0 , int b = 0 ) { // the 'int' at the start tells us that this function // is going to return an integer value, // max is the name of the function // this function takes in two integer values, 'a' and 'b' // 'a' and 'b' are initialised to 0 by default, meaning if // the person using this function doesn't specify what values // to use for 'a' and 'b', 0 will be used. // a return statement tells the function to \"give you back\" whatever // value is specified. if ( a > b ) return ( a ); return ( b ); // wait, why have we not writte an else statement here? // a function ALWAYS terminates as soon as it encounters a 'return' // statement. this tells the function to stop doing whatever it is // doing and \"give you back\" the value specified. // this is why writing an else here is unecessary, because if // a > b then the 2nd return statement will never run in the first place } void main () { // this is how the function is then used: xsChatData ( \"max \" + max ( 10 , 20 )); // the values for the variables in the function are } // wait, isn't this 'main' also a function that we've been using so far? // yes it is! The 'void' signifies that it doesn't return any value // since there is nothing writting inside the brackets after 'main', // it does not take in any parameters either Function names follow the same laws and conventions that variable names do. A list of all inbuilt XS functions and their descriptions are provided in the Fucntion Reference section of this guide. 2.6.2. File Structure \u00b6 When you write an XS Script, it is a good idea to group your functions and put them into an appropriately named file. For example, if you have an XS Script that does calculations with vectors, like adding, subtracting, dot product or cross product, or other vector operations, you might want to use it in more than on XS Script. Copying all the functions in every XS Script that you want to use them in is tedious and is considered a bad programming practise. What we can do instead is write another XS Script named \"VectorOperations.xs\" and then \"call\" this script in every other script where vector operations are required. For Example: If I have two files, test.xs and VectorOperations.xs in the same folder, then: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // test.xs include \"./VectorOperations.xs\" ; // \"./VectorOperations.xs\" is the relative path of the // VectorOperations.xs file from the text.xs file. // This can also be the absolute path of a file. // If you do not know what absolute/relative paths are, // a quick google search will tell you more about them. void main () { vector a = vector ( 1 , 2 , 3 ); vector b = vector ( 3 , 2 , 1 ); xsChatData ( \"dot: \" + dotProduct ( a , b )); xsChatData ( \"cross: \" + crossProduct ( a , b )); xsChatData ( \"add: \" + add ( a , b )); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 // VectorOperations.xs int dotProduct ( vector a = cInvalidVector , vector b = cInvalidVector ) { return ( xsVectorGetX ( a ) * xsVectorGetX ( b ) + xsVectorGetY ( a ) * xsVectorGetY ( b ) + xsVectorGetZ ( a ) * xsVectorGetZ ( b )); } vector crossProduct ( vector a = cInvalidVector , vector b = cInvalidVector ) { vector product = cInvalidVector ; product = xsVectorSetX ( product , xsVectorGetY ( a ) * xsVectorGetZ ( b ) - xsVectorGetZ ( a ) * xsVectorGetY ( b )); product = xsVectorSetY ( product , 0 - xsVectorGetX ( a ) * xsVectorGetZ ( b ) + xsVectorGetZ ( a ) * xsVectorGetX ( b )); product = xsVectorSetZ ( product , xsVectorGetX ( a ) * xsVectorGetY ( b ) - xsVectorGetY ( a ) * xsVectorGetX ( b )); return ( product ); } vector add ( vector a = cInvalidVector , vector b = cInvalidVector ) { vector addition = cInvalidVector ; addition = xsVectorSetX ( addition , xsVectorGetX ( a ) + xsVectorGetX ( b )); addition = xsVectorSetY ( addition , xsVectorGetY ( a ) + xsVectorGetY ( b )); addition = xsVectorSetZ ( addition , xsVectorGetZ ( a ) + xsVectorGetZ ( b )); return ( addition ); } This way, for every file that you need to use \"VectorOperations.xs\" in, you just need to write include \"/relative/or/absolute/path/to/file\" ; and you can use all the functions that you wrote in it in that file as well! Code that is written like this, where: Every separate operation is in its own function Every group of similar functions is in their own file, Is known as modular code! Writing code like this is considered a very very good programming practise. This way, others reading your code can easily read, and understand your code and get the idea of the big picture! However... Currently there is a bug (thxDE 11) due to which XS Scripts are not properly transfered to other players in the lobby. For now, a workaround is to manually give everyone the XS Scripts needed. 2.7. Scope of a Variable \u00b6 Every variable has a scope, i.e. an \"area\" of the code where it can be used. For example, you cannot use a variable before it has been initialised, that doesn't make sense! 1 2 3 4 void main () { a ++ ; // wait, a doesn't exist yet! you cannot do this. int a = 10 ; } Similarly, Variables initialised inside one function can only be used in that particular function, and do not exist outside of them. These kinds of variables are known as local variables. For example: 1 2 3 4 5 6 7 8 9 void main () { int a = 10 ; } void anotherFunction () { a ++ ; // wait, a doesn't exist inside another! you cannot do this. // you can actually declare another variable named a inside of another: int a = 44 ; // this a is completely different and independent from the a in main(); } What if you want a variable that is shared between functions? A variable like this must be declared outside of all functions. Such a variable is known as a global variable. For example: 1 2 3 4 5 6 7 int a = 10 ; void main () { a ++ ; } void anotherFunction () { a ++ ; } 2.8. Arrays \u00b6 An array is a data structure that allows you to make ordered, numbered lists of one kind of data type. In every numbered list, each element is identified using its number. This number is known as an index. If a is an array of integers, then it might looks something like this: Index Value 0 23 1 4 2 42 3 32 4 92 The index is what identifies elements in an array and indices for each array always starts from 0. For example: a [ 2 ] is 42 . While in most programming languages a [ 2 ] is the way to access elements in an array, that is not how it is done in XS. Lets look at how arrays are used in XS: For creating arrays, the following functions are used for the relevant data type: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // creates a sized and named integer array, with every value // initialised to defaultValue. returns an integer arrayID. int xsArrayCreateInt ( int size , int defaultValue , string name ) // creates a sized and named float array, with every value // initialised to defaultValue. returns an integer arrayID. int xsArrayCreateFloat ( int size , float defaultValue , string name ) // creates a sized and named boolean array, with every value // initialised to defaultValue. returns an integer arrayID. int xsArrayCreateBool ( int size , bool defaultValue , string name ) // creates a sized and named string array, with every value // initialised to defaultValue. returns an integer arrayID. int xsArrayCreateString ( int size , string defaultValue , string name ) // creates a sized and named vector array, with every value // initialised to defaultValue. returns an integer arrayID. int xsArrayCreateVector ( int size , vector defaultValue , string name ) For the name of the array, any string may be used but all names must be unique All of these functions return an integer which is the ID of the array that you just created. This ID is used to perform other operations on the array. You want to store this integer in a variable that is named apty so that you can use the array later. To get a value at a specific index from an array, we use the following functions for the relevant data types: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // returns an integer from the specified index of the specified array int xsArrayGetInt ( int arrayID , int index ) // returns a float from the specified index of the specified array float xsArrayGetFloat ( int arrayID , int index ) // returns a boolean from the specified index of the specified array bool xsArrayGetBool ( int arrayID , int index ) // returns a string from the specified index of the specified array string xsArrayGetString ( int arrayID , int index ) // returns a vector from the specified index of the specified array vector xsArrayGetVector ( int arrayID , int index ) If you ever try to access values in arrays that dont exist (invalid arrayID) or values at indices that dont exist (negative indices or indices more than the length of the array) then the default values for the data types are returned. These are: 1 2 3 4 5 int defaultValue = -1 float defaultValue = -1.0 bool defaultValue = false string defaultValue = \"\" vector defaultValue = vector ( 0 , 0 , 0 ) To set a value at a specific index in an array, we use the following functions for the relevant data types: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Sets the value at the specified index in the specified array. int xsArraySetInt ( int arrayID , int index , int value ) // Sets the value at the specified index in the specified array. int xsArraySetFloat ( int arrayID , int index , float value ) // Sets the value at the specified index in the specified array. int xsArraySetBool ( int arrayID , int index , bool value ) // Sets the value at the specified index in the specified array. int xsArraySetString ( int arrayID , int index , string value ) // Sets the value at the specified index in the specified array. int xsArraySetVector ( int arrayID , int index , vector value ) Note that these Set functions return a value of 1 every time, however this does not need to be stored in a variable. To change the size of an array 1 2 3 4 5 6 7 8 9 10 // Resize the specified array. int xsArrayResizeInt ( int arrayID , int newSize ) // Resize the specified array. int xsArrayResizeFloat ( int arrayID , int newSize ) // Resize the specified array. int xsArrayResizeBool ( int arrayID , int newSize ) // Resize the specified array. int xsArrayResizeString ( int arrayID , int newSize ) // Resize the specified array. int xsArrayResizeVector ( int arrayID , int newSize ) Note that these Resize functions return a value of 1 every time, however this does not need to be stored in a variable. int xsArrayGetSize ( int arrayID ) is also a useful array function that returns the size of the specified array. 2.9. Type Casting \u00b6 Type casting is when a value of one data type is \"transformed\" into a value of another, similar data type. This is like taking an object stored in one type of container and putting it into another. For example, When you try to store an int in a float , it would work without any issues. It is similar to storing water in a bottle and then putting the water from that bottle into a flask. When you try to store a float in an int however, the fractional part of the float is lost! This is like trying to put water from a water bottle into a paper bag. Some of the water will leak out! There are two kinds of type casting: Implicit Type Casting Implicit type casting is done automatically by the script (hence implicit) when you assign one type of value to another, similar data type. For example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 void main () { int a = 5 ; float b = 3.9 ; bool c = true ; // implicit type casting: int d = c ; // remember, true is 1 and false is 0 float e = c ; string f = \"\" + c ; // just string f = c; will not work // when type casting a float to an int, the fractional part of the number is lost! // note that it is not rounded off, 3.9 would become 3 after type casting int = b ; // anything other than a 0 gives true for a bool bool = b ; string = \"\" + b ; float g = a ; // anything other than a 0 gives true for bool bool h = a ; string i = \"\" + a ; } Explicit Type Casting Explicit type casting is done manually by the programmer (hence explicit). For example: 1 2 3 4 5 6 void main () { float a = 5.5 ; float b = ( int ) a ; // assigns 5.0 to b float c = ( int ) 22.5 ; // assigns 22.0 to c } 3. Rules \u00b6 A rule is a block of code that can be set to repeatedly execute at set intervals throughout the duration of the game. A rule is always initialised outside of a function. Its usage looks like: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 rule ruleName // This is the name of the rule. Follows same naming laws as variables. active / inactive // this is the initial state of the rule, active means that runs by default // and inactive means that it wont run by default. // this is similar to how triggers work when you enable/disable them. group groupName // the group that this rule belongs to. Follows same naming laws as variables. minInterval < int > // the minimum time interval that must pass before the block is executed again maxInterval < int > // the maximum time interval that may pass before the block has to be executed again highFrequency // Loop the rule 60 times every physical second (this is independant of inagme speed) // Only one of \"highFrequency\" or \"minInterval\" and \"maxInterval\" are used. Both cannot be used together runImmediately // It is currently unknown as to what this option does priority < int > // rules are executed in order of their descending priority { // code to execute } Example Usages: 1 2 3 4 5 6 7 8 9 10 11 int a = 0 ; // This rule prints the value of a every 2 seconds. rule chatTheValueOfA active minInterval 2 maxInterval 2 group chatGroup { xsChatData ( \"a = \" + a ); a ++ ; } There are a lot of built in XS functions that can interact with rules. Check the Rules Section of this guide. The variable cActivationTime , when used inside the block of a rule, gives the time of activation of the rule in seconds. With that, you now know everything that is currently known to work with XS Scripts. Good luck and have fun creating awesome maps!","title":"For Beginners"},{"location":"general/xs/beginner/#xs-scripting-a-beginners-guide","text":"Written by: Alian713","title":"XS Scripting: A Beginner's Guide"},{"location":"general/xs/beginner/#are-you-a-programmer","text":"If you know how to program in any language then you're wasting your time on this page! See the For Programmers instead, it is a shorter and more precise documentation since XS is just another programming language but with different syntax. If you're not a programmer, fear not! You are at the right place to learn all about XS!","title":"Are you a programmer?"},{"location":"general/xs/beginner/#1-using-an-xs-script","text":"To use an XS script: Make sure you can see file extensions. That means that every file on your computer should have a name that looks something like filename.ext . If you can see file extensions, then proceed to step 2. If not, then follow these steps: Press + E Click View right at the top. On the right side of the panel that appears, there will be an option called File Name Extensions . Check this option if it is not already checked. Navigate to the folder: C:\\Program Files (x86)\\Steam\\steamapps\\common\\AoE2DE\\resources\\_common\\xs There should be 2 files in this folder already, called Constants.xs and xs.txt . In here, create a new file with any name ending with .xs . For example, the file can be called filename.xs default0.xs There may be an additional file called default0.xs . Never write code in this file as this is a temporary file and can be overwritten by the game. The file Constants.xs contains a list of constants that can be used in any XS Script, using their name. They are essentially constants that the XS language pre-defines for you. Now open this file that you just created in your favourite text/code editor! If you don't have one already, using Visual Studio Code (VSC) is recommended. A VSC Extension for syntax highlighting and code auto completion for AoE XS Scripting can be found here To begin with using XS, write this basic code in the file: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 // Anything that is written after a double front slash is a comment. // A comment is a line that is ignored when running the script. // comments are useful for explaining your code to others and // more importantly, your future self. // writing comments is a good habit because it helps you understand your // own code better. // you will see comments widely used in this guide, to explain almost // every bit of code that you see // do note though, that even though commenting is a good practise, // over commenting code is a worse thing to do. Only comment stuff // that really needs commenting! /* Anything enclosed by a front slash and asterisk pair is a multi line comment */ // Here, you are creating a function that is called 'main'. void main () { // this line says that you have an integer called 'a' that has a value of 10. // note that almost every statement in XS is ended with a semi colon, // just like in english we use periods to indicate the end of a sentence. int a = 10 ; int b = 20 ; // this line says that you make a new integer called 'c' and it is the sum of 'a' and 'b'. int c = a + b ; // this line will show in the game chat the value of 'c'. This shows '30' in chat. xsChatData ( \"\" + c ); }","title":"1. Using an XS Script"},{"location":"general/xs/beginner/#11-in-a-custom-scenario","text":"Open the scenario in the editor Under the Map tab, type the name of the XS Script that you created in the Script Filename field without the .xs at the end. For example, if your file is called filename.xs then you will write filename in this field. Now, under the Triggers tab in the editor, add a new trigger, then add a new effect. (If you do not know what a trigger/effect is, please go through the Custom Scenarios: Triggers: Trigger Basics section of this guide) From the Effects List select Script Call . You can now use the functions in the XS Script in the message box, by typing \"function_name_here();\" The main() function that we made above is automatically run when the scenario is played. If there are no errors in the code, clicking the E#0: Script Call effect will turn it green. If there is an error in the script, an error message will be shown. Testing the scenario now will run the Script Call effect in the trigger defined above, which in turn will run the main() function in the XS Script and 30 will be shown in the chat.","title":"1.1. In a Custom Scenario"},{"location":"general/xs/beginner/#12-in-an-rms","text":"Open the RMS file in a text editor At the very top, type #includeXS filename.xs . Here, filename.xs is the name of the file that you created above. The main() function that we made above is automatically run when a map is generated using the RMS. To test, load the RMS in a single player (or multi player) lobby and start the game. When the map is generated, the main() function in the XS Script will run and 30 will be shown in the chat. It is recommended that you use a custom scenario to test XS Scripts, as it is easier to debug them in the editor. Now that you have set up an XS file with a main() function inside, you can type code inside this function to do different things! We'll be walking through all of the different things that are known to be possible one by one, and things will become clearer.","title":"1.2. In an RMS"},{"location":"general/xs/beginner/#2-programming-concepts","text":"","title":"2. Programming Concepts:"},{"location":"general/xs/beginner/#21-constants","text":"To do anything in an XS Script, we need constants. Any value that remains the same throughout the execution of the script is known as a constant. Quite literally, it remains constant throughout the execution of then script. For example, 10 is a constant. Every number is a constant.","title":"2.1. Constants"},{"location":"general/xs/beginner/#22-variables","text":"Variables are like boxes that are used to store constants. Variables are values that can change during the execution of the script! Think about it this way, if a variable is a box that stores a constant, that constant can be taken out and another one can be put in. Quite literally, it is a variable (it may change!). For example, the script that we saw earlier uses 3 variables, called a b and c . 1 2 3 4 5 6 void main () { int a = 10 ; int b = 20 ; int c = a + b ; xsChatData ( \"\" + c ); } Some questions that you might have now are: What is this int that preceeds the variable's name? That is the \"data type\" of the variable! What is a data type you ask? Every variable in a script has a data type, that is, it tells you what kind of value is stored in the variable. Think about it this way, if you want to store water, you need to specify that it must be stored in a bottle. Isn't that kind of obvious you might say? While to a human it might be obvious, a computer is a dumb machine. It does not know what to do unless you tell it, it is like a baby who must be spoonfed every tiny detail and instruction for it to work properly. What other types of data types are there? There are a total of 5 data types supported by XS, they are: Integer ( int ) You have seen an int before, an integer is a data type that stores an integer quantity. An integer quantity may be negative, positive, or zero. It never has any fractional or decimal parts (for example, an integer never has 0.5 ). Usage: int a = 10 ; This declares a variable of type int called a with a value of 10 Floating Point ( float ) A float is a data type that can store values with fractional parts or decimals. For example 1.5 is a floating point value. Usage: float a = 3.14159 ; This declares a variable of type float called a with a value of 3.14159 Why would you ever use an int then? The reason is because computers take longer to perform calculations with floats! If you know that your calculation will not involve fractional values and decimals, you should always use an integer instead of a floating point value Boolean ( bool ) A bool is a data type, that can only store one of two different values, true or false . Any yes or no question is a boolean question in some sense, because there are only two answers, yes or no. Boolean variables are super important for conditions, which we will be looking at later. Usage: bool a = true ; This declares a variable of type bool called a with a value of true Note A value of true is also indicated by 1 and a value of false is also indicated by 0 . String ( string ) A string is a word, a phrase or a sentence. A string is always enclosed by double quotes. Usage: string a = \"this is a string! yay\" ; This declares a variable of type string called a with a value of \"this is a string! yay\" Vector ( vector ) A vector is a variable that can store the coordinates of a point ( x , y , z ) . If you don't know what that means, just take it as a variable that stores three different float values. The first value is called the \"X component\", the second value is called the \"Y component\" and the last value is called the \"Z component\". Usage vector v = vector ( 1.2 , 2.3 ., 3.2 ); This declares a variable of type vector called v that represents a point with coordinates ( 1.2 , 2.3 , 3.2 ) . Remember that your variable names can be almost anything! However, this does not mean that you should just use single letters or alphabets for variable names. Variable names should be chosen such that they represent, or hint to what the purpose of the variable is. Naming your variables such that they make intuitive sense is a good programming practise. How do I actually change a variable? 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 void main () { int my_var = 20 ; // you only need to specify the data type of a variable once // when it is created. This \"first time\" creation is known // as \"variable declaration\" or \"initialisation\". // This way, when you change the value of the variable // you don't need to say that it is an integer again my_var = 30 ; // you can set variables equal to each other as well. int my_var2 = my_var ; // note that a variable can only be changed to another value // of a similar data type. This means that this following line // is WRONG: my_var = \"this is a string\" ; // trying to initialise a variable without a data type is also // WRONG: my_var3 = \"this string cannot be initalised since the data type is missing!\" ; float my_var4 = my_var ; } This process of changing the value that a variable stores is called \"assignment\". So in the above example, We first initalise my_var to 20 . Then we assign a value of 30 to my var . Then we initialise another variable called my_var2 whose value is equal to the value of my_var . Then we try to assign the string \"this is a string\" to my_var but remember that my_var is an integer, and it is not capable of storing a string, so this will actually give you an error. Think about it this way, you cannot put water in a paper bag, paper bags are not meant to store water! There is an exception to this rule: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 void main () { int a = 10 ; float b = 20.5 ; // the only cases where you can assign one type of data to another // is when going from integers to floats float c = a ; // this will show 10.0 in game chat xsChatData ( \"\" + c ); // or when going from floats to integers. // However, since integers cannot store the fractional part, // it is discarded! int d = b ; // this will show 20 in game chat xsChatData ( \"\" + d ); } Lastly, we try to initialise a new variable called my_var3 but we have not specified a data type! This will also give you an error. Think about it this way, if you want to store water, you need to specify if you want to use a paper bag or a water bottle. Can I make a variable whoes value cannot be changed? Yes! initialising a variable with the word const will make it a constant, and you won't be able to change its values. Usage: const int a = 10 ; If you now try to change the value of a , you will get an error.","title":"2.2. Variables"},{"location":"general/xs/beginner/#23-variable-naming-rules-and-conventions","text":"There are some rules that must be followed when naming a variable. They are: You can only use letters, numbers and underscores to name your variables. A variable name cannot start with a number. Variable names are CaSe SeNsItIvE . This means that a and A are two different variable names! Variable names must not be keywords. A keyword is a reserved word in any programming language that has a special meaning! For example, int is a keyword in XS because it is used to declare a variable of the int data type. While these are the only laws that you absolutely must follow, there are some conventions or unwritten rules that all programmers agree to follow to make their code more readable, and more clear. When you are writing a variable name that is just one word, it is conventional to write it in all small letters. For example int radius = 10 ; or string name = \"Alian713\" ; . When you are writing a variable name that consists of more than one word, then it is conventional to write it in a special case known as \"camel case\". Camel case is where the first letter of every word is capitalised except the first word. For Example: float gearRatio = 2.2 ; or string firstName = \"Bruce\" ; or string lastName = \"Wayne\" ; . When you are writing a variable that is supposed to just store the value of a constant, one which you never intend to change, it is conventional to use capital letters and words are separated by underscores. For example: float PI = 3.14159 ; or float GOLDEN_RATIO = 1.61803 ; . Variable names should be precise and mnemonic. That is, they should indicate to a casual programmer their purpose. Usage of single letter variable names is discouraged unless it is a throwaway or temporary variable.","title":"2.3. Variable Naming Rules and Conventions:"},{"location":"general/xs/beginner/#24-operations","text":"Now that we know how to store and change the values of a variable, what can we actually do with them?","title":"2.4. Operations"},{"location":"general/xs/beginner/#241-arithmetic-operations","text":"The most obvious thing that we can do with numbers, is do arithmetic with them. XS Scripts support the following five arithmetic operations: Addition: a+b this gives you the sum of two variables, a and b . for example, Subtraction: a-b this gives you the difference of two variables, a from b . Multiplication: a*b this gives you the product of two variables, a and b . For example: 1 2 3 4 5 6 7 8 9 10 11 12 13 void main () { int a = 69 ; int b = 420 ; // this will chat 489 in game (69+420 = 489) xsChatData ( \"result of 420+69 = \" + ( a + b )); // this will chat 351 in game (420-69 = 351) xsChatData ( \"result of 420-69 = \" + ( b - a )); // this will chat 28980 in game (420*69 = 28980) xsChatData ( \"result of 420*69 = \" + ( a * b )); } Division: a/b this gives you the division of a by b . Note that in programming, division is weird with how it works for integers and floats: For int , it performs what we call \"integer division\": 5 / 2 = 2 17 / 6 = 2 Basically, you round down any fractional part to your answer when you do normal division for integers. For float , it performs regular division as you would expect: 5.0 / 2.0 = 2.5 17.0 / 6.0 = 2.83333 This gives you the exact result of division. What if you mix a float and an int ? In that case, regular division is used. Modulo: a%b this gives you the remainder when dividing a by b . DataType of Result of Operation Due to a bug at the moment, the data type of the answer of any operation is decided by the first number used in the operation. This means that 9 * 5.5 evaluates to 49 instead of 49.5 . However, 5.5 * 9 will correctly evaluate to 49.5 . Note that this is a bug in XS itself and will probably be fixed in a future update For Example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 void main () { // this will chat 2 in game (5/2 = 2.5 but remember, this is integer division! so round down to 2) xsChatData ( \"result of 5/2 = \" + ( 5 / 2 )); // this will chat 2 in game (17/6 = 2.833 but remember, this is integer division! so round down to 2) xsChatData ( \"result of 17/6 = \" + ( 17 / 6 )); // this will chat 2.5 in game (since the numerator is a float, float division will give the exact value) xsChatData ( \"result of 5.0/2 = \" + ( 5.0 / 2 )); // this will chat 2 in game (since the numerator is an int, integer division will give the exact value) xsChatData ( \"result of 5/2.0 = \" + ( 5 / 2.0 )); // this will chat 5 in game (17%6 = 5) xsChatData ( \"result of 17%6 = \" + ( 17 % 6 )); // this should chat 0.5 in game (2.5%1 = 0.5) xsChatData ( \"result of 17%6 = \" + ( 2.5 % 1 )); // Due to a bug at the moment, this will actually show 0.0 // Modulo on fractions does not work properly at this time. } Also Additionally, when testing stuff using xsChatData , be wary of some quirks that this has: 1 2 3 4 5 6 7 8 9 10 11 12 13 void main () { // Note that chat data does not send the same thing multiple consecutively // which means if two calculations have the same result, only the first // one is shown xsChatData ( \"this is shown only once\" ); xsChatData ( \"this is shown only once\" ); xsChatData ( \"this is shown only once\" ); xsChatData ( \"this is shown only once\" ); xsChatData ( \"this is shown twice\" ); xsChatData ( \"this will make them non consecutive\" ); xsChatData ( \"this is shown twice\" ); } The way around this is to use a unique number or letter at the start of every message so that even if the content of the message is the same, the number is different so that it gets shown the right amount of times","title":"2.4.1. Arithmetic Operations"},{"location":"general/xs/beginner/#242-the-assignment-operation","text":"Remember that when we use the = sign in programming, it is not a mathematical equality statement. It actually tells us that we are assigning a value to a variable. So when you see something like a = a+1; , this means that you are simply adding 1 to the value of a . you are assigning the value a+1 to a . Once again, it is not a mathematical equality statement, it is an assignment.","title":"2.4.2. The Assignment Operation"},{"location":"general/xs/beginner/#243-postfix-operations","text":"If you want to increase or decrease the value of a variable by one, then writing a = a + 1; or a = a - 1; is one way to do it. Writing a++; or a--; is another way to do it. 1 2 3 4 5 6 7 8 9 void main () { int a = 10 ; // increase the value of a to 11 a ++ ; // decrease the value of a back to 10 a -- ; }","title":"2.4.3. Postfix Operations"},{"location":"general/xs/beginner/#244-relational-operations","text":"Relational operations allow us to compare one number with another. With these, you can find out if one variable is greater than another or not, if two variables are equal or not, and much more. If you have two numbers \\(\\color{yellow} \\text{A}\\) and \\(\\color{yellow}\\text{B}\\) , and are asked \" \\(\\text{if} \\; \\color{yellow}\\text{A} \\; \\color{red} \\text{is greater than} \\; \\color{yellow}\\text{B} \\color{white}\\) ?\" then you can have only two possible answers, it will either be yes or no. Similarly, if you are asked \" \\(\\text{if} \\; \\color{yellow}\\text{A} \\; \\color{red} \\text{is equal to} \\; \\color{yellow}\\text{B} \\color{white}\\) ?\" then this question also has only two answers, yes or no. Whenever you use a relational operator, it is like asking one of these questions above. Then how does a computer answer a question like this? Remember, a boolean data type can either be true or false , it does exactly this! Thus, the answers to all relational operations give you boolean values. a < b This checks if the number a is lesser than b . If it is, then the expression evaluates to true , else it evaluates to false . For example: 1 2 3 // this will print \"5 < 10 : 1\" xsChatData ( \"5 < 10 : \" + ( 5 <> 10 )); // remember, in programming, 1 is the same as true a > b This checks if the number a is greater than b . If it is, then the expression evaluates to true , else it evaluates to false . For example: 1 2 3 // this will print \"5 > 10 : 0\" xsChatData ( \"5 > 10 : \" + ( 5 > 10 )); // remember, in programming, 0 is the same as false a <= b This checks if the number a is lesser than or equal to b . If it is, then the expression evaluates to true , else it evaluates to false . For example: 1 2 3 4 5 // this will print \"5 <= 10 : 1\" xsChatData ( \"5 <= 10 : \" + ( 5 <= 10 )); // this will print \"10 <= 10 : 1\" xsChatData ( \"10 <= 10 : \" + ( 10 <= 10 )); a >= b This checks if the number a is greater than or equal to b . If it is, then the expression evaluates to true , else it evaluates to false . For example: 1 2 3 4 5 // this will print \"5 >= 10 : 0\" xsChatData ( \"5 >= 10 : \" + ( 5 >= 10 )); // this will print \"10 >= 10 : 1\" xsChatData ( \"10 >= 10 : \" + ( 10 >= 10 )); a == b This checks if the number a is equal to b . If it is, then the expression evaluates to true , else it evaluates to false . For example: 1 2 3 4 5 // this will print \"5 == 10 : 0\" xsChatData ( \"5 == 10 : \" + ( 5 == 10 )); // this will print \"10 == 10 : 1\" xsChatData ( \"10 == 10 : \" + ( 10 == 10 )); a != b This checks if the number a is not equal to b . If it is, then the expression evaluates to true , else it evaluates to false . For example: 1 2 3 4 5 // this will print \"5 != 10 : 1\" xsChatData ( \"5 != 10 : \" + ( 5 != 10 )); // this will print \"10 != 10 : 0\" xsChatData ( \"10 != 10 : \" + ( 10 != 10 )); Relational Operators on Strings These relational operators also work on string values, for example a < b checks if a would alphabetically preceed b . For Example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 void main () { // With numbers: int a = 10 ; float b = 20.0 ; int c = 30 ; // this would chat 1 xsChatData ( \"a < b is \" + a < b ); // this would chat 0 xsChatData ( \"b > c is \" + ( b > c )); // this would chat 0 xsChatData ( \"(a+b) == b is\" + (( a + b ) == b )); // this would chat 1 xsChatData ( \"(a+b) >= c is\" + (( a + b ) >= c )); // this would chat 1 xsChatData ( \"b <= c is \" + ( b <= c )); // With strings: string str1 = \"ball\" ; string str2 = \"apple\" ; string str3 = \"cat\" ; string str4 = \"cat\" ; // this would chat 0 in game // this is because alphabetically, str1 does not come before str2 xsChatData ( \"str1 < str2 is \" + ( str1 < str2 )); // this would chat 1 in game // this is because alphabetically, str2 comes before str3 xsChatData ( \"str3 > str2 is \" + ( str3 > str2 )); // this would cha ttrue xsChatData ( \"str3 == str4 is \" + ( str3 == str4 )); // this would cha ttrue xsChatData ( \"str1 != str2 is \" + ( str1 != str2 )); }","title":"2.4.4. Relational Operations"},{"location":"general/xs/beginner/#245-boolean-operations","text":"If two or more things are required to do a task, we can say that \"this AND that are required to do the task\". For example: To write an email to someone, you must \" \\(\\color{yellow} \\text{have a computer} \\; \\color{red} \\text{and} \\; \\color{yellow} \\text{have active internet}\\) \" To paint something, you must \" \\(\\color{yellow} \\text{have a paper} \\; \\color{red} \\text{and} \\; \\color{yellow} \\text{have paint} \\; \\color{red} \\text{and} \\; \\color{yellow} \\text{have a paint brush}\\) \" Similarly, if only one, or more things are required to do a task we say that \"this OR that is needed to do the task\". For example: To play a video game, you need to \" \\(\\color{yellow} \\text{own a computer} \\; \\color{red} \\text{or} \\; \\color{yellow} \\text{own a gaming console}\\) \" Note that you can still play video games if you own both! To draw something you must \" \\(\\color{yellow} \\text{have a pencil} \\; \\color{red} \\text{or} \\; \\color{yellow} \\text{have a pen} \\; \\color{red} \\text{and} \\; \\color{yellow} \\text{have a paper}\\) \" Boolean operations allow us to ask these sorts of questions but with boolean values instead. For example, if you wanted to ask \"is A greater than B and C?\" then you require boolean operations. Boolean AND: This is used to check if two or more boolean values are simultaneously true . Usage: a && b (Here, a and b are boolean variables) This checks if both a AND b are true . If they are, the expression evaluates to true , otherwise it evaluates to false . Every combination of inputs and outputs for a && b can be written in a table: a b a && b false false false false true false true false false true true true Tip The AND operation is not limited to just two variables. Any number of variables may be AND-ed together. For Example: a && b && c && d . For this expression to evaluate to true, ALL of a , b , c and d must be true. Writing a table that lists every combination of inputs and outputs for this expression is left as an excersise for the reader. Boolean OR: This is used to check if one or more booleans are true . Usage: a || b (Here, a and b are boolean variables) This checks if either a or b is true . If one of them is, then the expression evaluates to true , else it evaluates to false . Every combination of inputs and outputs for a || b can be written in a table: a b a || b false false false false true true true false true true true true Tip The OR operation is not limited to just two variables. Any number of variables may be OR-ed together. For Example: a || b || c || d . For this expression to evaluate to true, only one of a , b , c and d needs to be true. Writing a table that lists every combination of inputs and outputs for this expression is left as an excersise for the reader. ANDs and ORs can be used together in the same expression. For example: (a || b) && c : for this expression to be true , either a or b and c must be true . a || (b && c) : for this expression to be true , either a must be true or b and c must be true simultaneously. Note If no brackets are used when writing these expressions the expression is evaluated left to right. This means that a || b && c || d is the same as ((a || b) && c) || d . Thus, to make it absolutely clear as to what you mean when writing a boolean expression, you should ALWAYS use brackets appropriately for clarity, even though it is not necessary to do so. For example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 void main () { int a = 10 ; int b = 20 ; int c = 30 ; // this would assign true to d // because both a < b and c > d are true bool d = ( a < b ) && ( c > b ); // this would assign false to d // because c < b is not true d = ( a < b ) && ( c < b ); // this would assign true to d // because a < b is true d = ( a < b ) || ( c < b ); // this would assign false to d // because neither a > b nor c < b is true d = ( a > b ) || ( c < b ); }","title":"2.4.5. Boolean Operations"},{"location":"general/xs/beginner/#246-concatenation","text":"When two strings are joined to form a new string, it is known as concatenation. Other data types may also be concatenated with strings. For Example: 1 2 3 4 5 6 7 8 9 10 11 12 void main () { string a = \"this is \" ; string b = \"string concatenation!\" ; int c = 11 ; float d = 5.5 ; bool e = true ; vector v = vector ( 1 , 2 , 3 ); // chats \"this is string concatenation! 11 5.5 1 (1.0, 2.0, 3.0)\" xsChatData ( a + b + \" \" + c + \" \" + d + \" \" + e + \" \" + v ); // remember, true and false are also represented by 1 and 0 respectively! }","title":"2.4.6. Concatenation"},{"location":"general/xs/beginner/#247-vector-operations","text":"Manipulating vectors in XS is done in a bit of a special way: Initialising a vector: We have already seen how this is done: vector v = vector ( 1 , 2 , 3 ); No Vars in Vector Initialisation For some reason, currently we cannot use variables to initialise vectors inside vector () ; This is probably a bug and will be fixed in future versions of XS. For example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 void main () { float x = 1.0 ; float y = 2.0 ; float z = 3.0 ; vector myVector = vector ( x , y , z ); // does not work, thxDE // alternatively, this would work: vector myVector = cInvalidVector ; myVector = xsVectorSetX ( myVector , x ); // sets the X component of the vector myVector = xsVectorSetY ( myVector , y ); // sets the y component of the vector myVector = xsVectorSetZ ( myVector , z ); // sets the z component of the vector // alternatively, even shorter way to do this: myVector = xsVectorSet ( 1 , 2 , 3 ); // here cInvalidVector is a pre-defined constant that XS recognises, it is the vector (-1, -1, -1) // Similarly, cOriginVector is a pre-defined constant that XS recognises, it is the vector (0, 0, 0) } Obtaining the X, Y, and Z components of a vector: The X, Y and Z components of a vector can be accessed as follows: 1 2 3 4 5 6 7 void main () { vector myVector = vector ( 1 , 2 , 3 ); float x = xsVectorGetX ( myVector ); // gives you the X component of the vector float y = xsVectorGetY ( myVector ); // gives you the y component of the vector float z = xsVectorGetZ ( myVector ); // gives you the z component of the vector } Setting the X, Y, and Z components of a vector individually: The X, Y and Z components of a vector can be set as follows: 1 2 3 4 5 6 void main () { vector myVector = vector ( 1 , 2 , 3 ); myVector = xsVectorSetX ( myVector , 10 ); // sets the X component of the vector myVector = xsVectorSetY ( myVector , 20 ); // sets the y component of the vector myVector = xsVectorSetZ ( myVector , 30 ); // sets the z component of the vector } Note that it is not necessary to change all 3 components at the same time, you can chose to only change one if you want to. Setting the entire vector: If you know that you want to change all 3 components of a vector, it can be done in one go instead of in 3 separate lines like above: 1 2 3 4 void main () { vector myVector = vector ( 1 , 2 , 3 ); myVector = xsVectorSet ( 10 , 20 , 30 ); } Obtaining the length of a vector: The length of a vector can be obtained as follows: 1 2 3 4 void main () { vector myVector = vector ( 1 , 2 , 3 ); float length = xsVectorLength ( myVector ); } Note Mathematically, the length of a vector is given by \\(\\sqrt{x^2+y^2+z^2}\\) Normalizing a vector: The unit vector along the direction of the given vector is obtained by normalising it: 1 2 3 4 void main () { vector myVector = vector ( 1 , 2 , 3 ); vector unitVectorAlongMyVector = xsVectorNormalize ( myVector ); } Note Mathematically, the normalised vector is given by \\(\\left(\\cfrac{x}{\\sqrt{x^2+y^2+z^2}}, \\cfrac{y}{\\sqrt{x^2+y^2+z^2}}, \\cfrac{z}{\\sqrt{x^2+y^2+z^2}}\\right)\\)","title":"2.4.7. Vector Operations"},{"location":"general/xs/beginner/#25-flow-control-statements","text":"There are two types of flow control statements:","title":"2.5. Flow Control Statements"},{"location":"general/xs/beginner/#251-conditionals","text":"There are times in life when you need to make decisions, and these decisions depend on certain conditions. For example, suppose that you are in a class, then a decision that you might have to make would be: \\(\\color{red} \\text{if} \\; \\color{yellow} \\text{you have a pen,} \\; \\color{red} \\text{then} \\; \\color{white} \\text{you can write on a piece of paper,} \\; \\color{red} \\text{else} \\; \\color{white} \\text{you borrow a pen}\\) Similarly, when writing a script, it might be needed to make decisions at some points in your code. Conditionals are decision making statements that can be used to chose which set of instructions to execute depending on given conditions. There are two types of conditionals suported by XS: The if else if statement An if else statement is used whenever you need your script to make decisions. It executes one set of instructions if a conditon is true or else it executes another set of instructions. Usage: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 void main () { int a = 10 ; int b = 20 ; // if(boolean expression / variable / constant) if ( b > a ) { // if the above condition is true do: xsChatData ( \"does one thing\" ); xsChatData ( \"b > a confirmed!\" ); } else { // if the above condition is not true do: xsChatData ( \"does another thing\" ); xsChatData ( \"b <= a confirmed!\" ); } } Anything that is written inside curly braces {} is known as a \"block\" of code. A block of code written under an if is called the \"body\" of that if . If there is only one instruction that needs to be run inside an if or else then the curly braces {} can be omitted: 1 2 3 4 5 6 7 8 void main () { int a = 10 ; int b = 20 ; if ( b > a ) xsChatData ( \"does only one thing\" ); else xsChatData ( \"does only another thing\" ); } An if statement does not need to be followed by an else statement everytime 1 2 3 4 5 6 void main () { int a = 10 ; int b = 20 ; if ( b > a ) xsChatData ( \"doesn't do anything if the conditon is false\" ); } What if you need to check multiple conditions and do separate things for each case? this is when you use an if else if statement! 1 2 3 4 5 6 7 8 9 10 void main () { int a = 10 ; int b = 20 ; if ( b > a ) xsChatData ( \"b > 20\" ); else if ( b == 20 ) xsChatData ( \"b == 20\" ); else xsChatData ( \"no condition is true\" ); } Note In the above example, both the ( b > a ) and ( b == 20 ) conditions are true. However, in an if else if statement, only one branch of instructions is ever executed. Which condition takes proiority is decided by what order you write them in. So in this case, \"b > 20\" will be chatted to the screen because that is the first condition which is true. Technically, whenever a condition becomes true and its branch of instructions are executed, all of the remaining conditions are skipped, and not even evaluated. Practise Now that you are armed with the power of if else if , can you: Write a script that would chat to the screen the maximum of 3 given variables. When you're ready, click the \"Answer\" to view the solution. Answer 1 2 3 4 5 6 7 8 9 10 11 void main () { int a = 10 ; int b = 20 ; int c = 30 ; if ( a > b && a > c ) xsChatData ( \"the maximum is a: \" + a ); else if ( b > c && b > a ) xsChatData ( \"the maximum is b: \" + b ); else xsChatData ( \"the maximum is c: \" + c ) } The switch - case statements: A switch - case is a branching structure used when you want to do several differnt things depending on the value of a variable: For example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void main () { int a = 10 ; switch ( a ) { case 10 : { xsChatData ( \"if(a == 10)\" ); xsChatData ( \"do this\" ); } case 20 : { xsChatData ( \"else if(a == 20)\" ); xsChatData ( \"do this\" ); } default : { xsChatData ( \"else\" ); xsChatData ( \"do this\" ); } } } This is the same as doing: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 void main () { int a = 10 ; if ( a == 10 ) { xsChatData ( \"if(a == 10)\" ); xsChatData ( \"do this\" ); } else if ( a == 20 ) { xsChatData ( \"else if(a == 20)\" ); xsChatData ( \"do this\" ); } else { xsChatData ( \"else\" ); xsChatData ( \"do this\" ); } } Similar to if else , if there is only one instruction to execute, the curly braces {} can be omitted: 1 2 3 4 5 6 7 8 9 10 11 void main () { int a = 10 ; switch ( a ) { case 10 : xsChatData ( \"if(a == 10) do this\" ); case 20 : xsChatData ( \"else if(a == 20) do this\" ); default : xsChatData ( \"else do this\" ); } }","title":"2.5.1. Conditionals"},{"location":"general/xs/beginner/#252-loops","text":"There are times in life when you need to repeatedly keep doing something under certain conditions. For example, suppose that you are playing a game and you are stuck on a boss fight where you keep dying, something that you are doing might be: \\(\\color{red} \\text{while} \\; \\color{yellow} \\text{you have not defeated the boss,} \\; \\color{white} \\text{try again}\\) If you wanted to write out the times two table, you might do: \\(\\color{red} \\text{for} \\; \\color{yellow} \\text{every} \\; \\color{green} \\text{number} \\; \\color{red} \\text{between 1 and 10} \\; \\color{white} \\text{write }2\\times \\color{green} \\text{number}\\) Similarly, when writing a script, it might be needed to repeat certain parts of your code multiple times. Loops are statements that can be used to repeatedly execute a block of code given a condition is true. Sometimes the need arises to repeatedly execute the same statement or a statement where only a few things are changing. Loops are statements that allow us to do exactly that! There are two types of loops suported by XS: The while loop: A while statement repeatedly executes a block of code as long as (while) something is true . This process of repeatedly executing the same block of code is known as iteration! For example: 1 2 3 4 5 6 7 8 9 10 11 12 void main () { int a = 0 ; while ( a < 10 ) { xsChatData ( \"a = \" + a ); a ++ ; // remember that a++ increases the value of a by one. // what would happen if you forgot to write a++? // your script would get stuck in an \"infinite\" loop // and the game would crash } } Practise Now that you are armed with the power of while , can you: Write a script that would chat to the screen the following pattern: 1, 2, 4, 7, 11, 16... up to 15 terms? If you need help, but don't want to see the full solution immediately, click \"Hint\" When you're ready, click \"Answer\" to view the solution. Hint Hint: Notice that the pattern here is that each time, the increase of the terms is also going up by one. The 2 nd term is the first term + 1, the 3 rd term is the 2 nd term + 2, and so on. Answer 1 2 3 4 5 6 7 8 9 void main () { int number = 1 ; int increase = 1 ; while ( increase <= 15 ) { xsChatData ( \"number = \" + number ); number = number + increase ; increase ++ ; } } The for loop: A for statement is specifically used to loop over a range of values, say 5 to 23 For example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void main () { for ( a = 5 ; < 23 ) { xsChatData ( \"a = \" + a ); // the for loop takes care of increasing the value // of a by one every time // you cannot modify 'a' inside the for loop } // what if i wanted to go down from 10 to 0? // that is also possible: for ( a = 10 ; > 0 ) { xsChatData ( \"a = \" + a ); // here the for loop figures out automatically // that you need to decrease a instead of increasing it. } } How do we pick which loop to use? Firstly, a while loop can do all that a for loop can. However, a while loop is much slower than a for loop in performance! If it is possible, you should always stick to using for loops! A for loop also takes care of increasing or decreasing the variables of iteration, which means that you cannot accidently cause an \"infinite\" loop unlike a while loop.","title":"2.5.2. Loops"},{"location":"general/xs/beginner/#26-modular-programming","text":"","title":"2.6. Modular Programming"},{"location":"general/xs/beginner/#261-functions","text":"Lets say that you are watching TV. Every time you want to change the channel, you will use the same remote. It would be quite inconvenient if you had to make a new remote each time you wanted to change the channel. Similarly, when writing a script, you might want to write a piece of code that you need to re-use multiple times in different parts of your script. Functions allow us to do exactly this! A function is a piece of code that can input some values and use them to perform a given task. You have already seen a function before! xsChatData(string str); is actually a function which inputs a string and chats it in game. Another useful function is sqrt(float number); which calculates the square root of a value. Usage: float a = sqrt ( 4 ); This assigns the value 2.0 to a . An interesting thing to note here is that some functions \"give you back\" a value, like sqrt ( 5 ); will \"give you back\" \\(\\approx\\) 2.24 . This property that a function \"gives you back\" a value is formally known as the fact that the function \"returns\" a value. Not all functions do this, for example xsChatData ( \"my message\" ); simply displays that message on screen and does not return any value. A function can return a value of any data type. Each function also takes a set of inputs. xsChatData takes in a string, sqrt takes in a float. The set of inputs that a function can take are formally known as its \"parameters\". While these are inbuilt functions in XS that are provided to us to use to use directly, we can also define our own functions. This is how a function is defined in XS: Usage: 1 2 3 4 returnType functionName ( dataType parameter1 = defaultValue , dataType parameter2 = defaultValue ) { return ( value ); // value must be a data type that is the same as returnType } If it is not clear what this means, bare with this usage for a minute and see this example below: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 // this is a custom function that returns the maximum of two integers. int max ( int a = 0 , int b = 0 ) { // the 'int' at the start tells us that this function // is going to return an integer value, // max is the name of the function // this function takes in two integer values, 'a' and 'b' // 'a' and 'b' are initialised to 0 by default, meaning if // the person using this function doesn't specify what values // to use for 'a' and 'b', 0 will be used. // a return statement tells the function to \"give you back\" whatever // value is specified. if ( a > b ) return ( a ); return ( b ); // wait, why have we not writte an else statement here? // a function ALWAYS terminates as soon as it encounters a 'return' // statement. this tells the function to stop doing whatever it is // doing and \"give you back\" the value specified. // this is why writing an else here is unecessary, because if // a > b then the 2nd return statement will never run in the first place } void main () { // this is how the function is then used: xsChatData ( \"max \" + max ( 10 , 20 )); // the values for the variables in the function are } // wait, isn't this 'main' also a function that we've been using so far? // yes it is! The 'void' signifies that it doesn't return any value // since there is nothing writting inside the brackets after 'main', // it does not take in any parameters either Function names follow the same laws and conventions that variable names do. A list of all inbuilt XS functions and their descriptions are provided in the Fucntion Reference section of this guide.","title":"2.6.1. Functions"},{"location":"general/xs/beginner/#262-file-structure","text":"When you write an XS Script, it is a good idea to group your functions and put them into an appropriately named file. For example, if you have an XS Script that does calculations with vectors, like adding, subtracting, dot product or cross product, or other vector operations, you might want to use it in more than on XS Script. Copying all the functions in every XS Script that you want to use them in is tedious and is considered a bad programming practise. What we can do instead is write another XS Script named \"VectorOperations.xs\" and then \"call\" this script in every other script where vector operations are required. For Example: If I have two files, test.xs and VectorOperations.xs in the same folder, then: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // test.xs include \"./VectorOperations.xs\" ; // \"./VectorOperations.xs\" is the relative path of the // VectorOperations.xs file from the text.xs file. // This can also be the absolute path of a file. // If you do not know what absolute/relative paths are, // a quick google search will tell you more about them. void main () { vector a = vector ( 1 , 2 , 3 ); vector b = vector ( 3 , 2 , 1 ); xsChatData ( \"dot: \" + dotProduct ( a , b )); xsChatData ( \"cross: \" + crossProduct ( a , b )); xsChatData ( \"add: \" + add ( a , b )); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 // VectorOperations.xs int dotProduct ( vector a = cInvalidVector , vector b = cInvalidVector ) { return ( xsVectorGetX ( a ) * xsVectorGetX ( b ) + xsVectorGetY ( a ) * xsVectorGetY ( b ) + xsVectorGetZ ( a ) * xsVectorGetZ ( b )); } vector crossProduct ( vector a = cInvalidVector , vector b = cInvalidVector ) { vector product = cInvalidVector ; product = xsVectorSetX ( product , xsVectorGetY ( a ) * xsVectorGetZ ( b ) - xsVectorGetZ ( a ) * xsVectorGetY ( b )); product = xsVectorSetY ( product , 0 - xsVectorGetX ( a ) * xsVectorGetZ ( b ) + xsVectorGetZ ( a ) * xsVectorGetX ( b )); product = xsVectorSetZ ( product , xsVectorGetX ( a ) * xsVectorGetY ( b ) - xsVectorGetY ( a ) * xsVectorGetX ( b )); return ( product ); } vector add ( vector a = cInvalidVector , vector b = cInvalidVector ) { vector addition = cInvalidVector ; addition = xsVectorSetX ( addition , xsVectorGetX ( a ) + xsVectorGetX ( b )); addition = xsVectorSetY ( addition , xsVectorGetY ( a ) + xsVectorGetY ( b )); addition = xsVectorSetZ ( addition , xsVectorGetZ ( a ) + xsVectorGetZ ( b )); return ( addition ); } This way, for every file that you need to use \"VectorOperations.xs\" in, you just need to write include \"/relative/or/absolute/path/to/file\" ; and you can use all the functions that you wrote in it in that file as well! Code that is written like this, where: Every separate operation is in its own function Every group of similar functions is in their own file, Is known as modular code! Writing code like this is considered a very very good programming practise. This way, others reading your code can easily read, and understand your code and get the idea of the big picture! However... Currently there is a bug (thxDE 11) due to which XS Scripts are not properly transfered to other players in the lobby. For now, a workaround is to manually give everyone the XS Scripts needed.","title":"2.6.2. File Structure"},{"location":"general/xs/beginner/#27-scope-of-a-variable","text":"Every variable has a scope, i.e. an \"area\" of the code where it can be used. For example, you cannot use a variable before it has been initialised, that doesn't make sense! 1 2 3 4 void main () { a ++ ; // wait, a doesn't exist yet! you cannot do this. int a = 10 ; } Similarly, Variables initialised inside one function can only be used in that particular function, and do not exist outside of them. These kinds of variables are known as local variables. For example: 1 2 3 4 5 6 7 8 9 void main () { int a = 10 ; } void anotherFunction () { a ++ ; // wait, a doesn't exist inside another! you cannot do this. // you can actually declare another variable named a inside of another: int a = 44 ; // this a is completely different and independent from the a in main(); } What if you want a variable that is shared between functions? A variable like this must be declared outside of all functions. Such a variable is known as a global variable. For example: 1 2 3 4 5 6 7 int a = 10 ; void main () { a ++ ; } void anotherFunction () { a ++ ; }","title":"2.7. Scope of a Variable"},{"location":"general/xs/beginner/#28-arrays","text":"An array is a data structure that allows you to make ordered, numbered lists of one kind of data type. In every numbered list, each element is identified using its number. This number is known as an index. If a is an array of integers, then it might looks something like this: Index Value 0 23 1 4 2 42 3 32 4 92 The index is what identifies elements in an array and indices for each array always starts from 0. For example: a [ 2 ] is 42 . While in most programming languages a [ 2 ] is the way to access elements in an array, that is not how it is done in XS. Lets look at how arrays are used in XS: For creating arrays, the following functions are used for the relevant data type: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // creates a sized and named integer array, with every value // initialised to defaultValue. returns an integer arrayID. int xsArrayCreateInt ( int size , int defaultValue , string name ) // creates a sized and named float array, with every value // initialised to defaultValue. returns an integer arrayID. int xsArrayCreateFloat ( int size , float defaultValue , string name ) // creates a sized and named boolean array, with every value // initialised to defaultValue. returns an integer arrayID. int xsArrayCreateBool ( int size , bool defaultValue , string name ) // creates a sized and named string array, with every value // initialised to defaultValue. returns an integer arrayID. int xsArrayCreateString ( int size , string defaultValue , string name ) // creates a sized and named vector array, with every value // initialised to defaultValue. returns an integer arrayID. int xsArrayCreateVector ( int size , vector defaultValue , string name ) For the name of the array, any string may be used but all names must be unique All of these functions return an integer which is the ID of the array that you just created. This ID is used to perform other operations on the array. You want to store this integer in a variable that is named apty so that you can use the array later. To get a value at a specific index from an array, we use the following functions for the relevant data types: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // returns an integer from the specified index of the specified array int xsArrayGetInt ( int arrayID , int index ) // returns a float from the specified index of the specified array float xsArrayGetFloat ( int arrayID , int index ) // returns a boolean from the specified index of the specified array bool xsArrayGetBool ( int arrayID , int index ) // returns a string from the specified index of the specified array string xsArrayGetString ( int arrayID , int index ) // returns a vector from the specified index of the specified array vector xsArrayGetVector ( int arrayID , int index ) If you ever try to access values in arrays that dont exist (invalid arrayID) or values at indices that dont exist (negative indices or indices more than the length of the array) then the default values for the data types are returned. These are: 1 2 3 4 5 int defaultValue = -1 float defaultValue = -1.0 bool defaultValue = false string defaultValue = \"\" vector defaultValue = vector ( 0 , 0 , 0 ) To set a value at a specific index in an array, we use the following functions for the relevant data types: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Sets the value at the specified index in the specified array. int xsArraySetInt ( int arrayID , int index , int value ) // Sets the value at the specified index in the specified array. int xsArraySetFloat ( int arrayID , int index , float value ) // Sets the value at the specified index in the specified array. int xsArraySetBool ( int arrayID , int index , bool value ) // Sets the value at the specified index in the specified array. int xsArraySetString ( int arrayID , int index , string value ) // Sets the value at the specified index in the specified array. int xsArraySetVector ( int arrayID , int index , vector value ) Note that these Set functions return a value of 1 every time, however this does not need to be stored in a variable. To change the size of an array 1 2 3 4 5 6 7 8 9 10 // Resize the specified array. int xsArrayResizeInt ( int arrayID , int newSize ) // Resize the specified array. int xsArrayResizeFloat ( int arrayID , int newSize ) // Resize the specified array. int xsArrayResizeBool ( int arrayID , int newSize ) // Resize the specified array. int xsArrayResizeString ( int arrayID , int newSize ) // Resize the specified array. int xsArrayResizeVector ( int arrayID , int newSize ) Note that these Resize functions return a value of 1 every time, however this does not need to be stored in a variable. int xsArrayGetSize ( int arrayID ) is also a useful array function that returns the size of the specified array.","title":"2.8. Arrays"},{"location":"general/xs/beginner/#29-type-casting","text":"Type casting is when a value of one data type is \"transformed\" into a value of another, similar data type. This is like taking an object stored in one type of container and putting it into another. For example, When you try to store an int in a float , it would work without any issues. It is similar to storing water in a bottle and then putting the water from that bottle into a flask. When you try to store a float in an int however, the fractional part of the float is lost! This is like trying to put water from a water bottle into a paper bag. Some of the water will leak out! There are two kinds of type casting: Implicit Type Casting Implicit type casting is done automatically by the script (hence implicit) when you assign one type of value to another, similar data type. For example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 void main () { int a = 5 ; float b = 3.9 ; bool c = true ; // implicit type casting: int d = c ; // remember, true is 1 and false is 0 float e = c ; string f = \"\" + c ; // just string f = c; will not work // when type casting a float to an int, the fractional part of the number is lost! // note that it is not rounded off, 3.9 would become 3 after type casting int = b ; // anything other than a 0 gives true for a bool bool = b ; string = \"\" + b ; float g = a ; // anything other than a 0 gives true for bool bool h = a ; string i = \"\" + a ; } Explicit Type Casting Explicit type casting is done manually by the programmer (hence explicit). For example: 1 2 3 4 5 6 void main () { float a = 5.5 ; float b = ( int ) a ; // assigns 5.0 to b float c = ( int ) 22.5 ; // assigns 22.0 to c }","title":"2.9. Type Casting"},{"location":"general/xs/beginner/#3-rules","text":"A rule is a block of code that can be set to repeatedly execute at set intervals throughout the duration of the game. A rule is always initialised outside of a function. Its usage looks like: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 rule ruleName // This is the name of the rule. Follows same naming laws as variables. active / inactive // this is the initial state of the rule, active means that runs by default // and inactive means that it wont run by default. // this is similar to how triggers work when you enable/disable them. group groupName // the group that this rule belongs to. Follows same naming laws as variables. minInterval < int > // the minimum time interval that must pass before the block is executed again maxInterval < int > // the maximum time interval that may pass before the block has to be executed again highFrequency // Loop the rule 60 times every physical second (this is independant of inagme speed) // Only one of \"highFrequency\" or \"minInterval\" and \"maxInterval\" are used. Both cannot be used together runImmediately // It is currently unknown as to what this option does priority < int > // rules are executed in order of their descending priority { // code to execute } Example Usages: 1 2 3 4 5 6 7 8 9 10 11 int a = 0 ; // This rule prints the value of a every 2 seconds. rule chatTheValueOfA active minInterval 2 maxInterval 2 group chatGroup { xsChatData ( \"a = \" + a ); a ++ ; } There are a lot of built in XS functions that can interact with rules. Check the Rules Section of this guide. The variable cActivationTime , when used inside the block of a rule, gives the time of activation of the rule in seconds. With that, you now know everything that is currently known to work with XS Scripts. Good luck and have fun creating awesome maps!","title":"3. Rules"},{"location":"general/xs/constants/","text":"Written by: Alian713 1. Read/Write \u00b6 1.1. cOffsetString \u00b6 Value: int 0 Used with the xsOffsetFilePosition . Makes the offset function move the file position by the number of bytes it takes to store a string (4 bytes + a number of bytes that is determined by the integer that the first 4 bytes represent) 1.2. cOffsetInterger \u00b6 Value: int 1 Used with the xsOffsetFilePosition . Makes the offset function move the file position by the number of bytes it takes to store an integer (4 bytes) 1.3. cOffsetFloat \u00b6 Value: int 2 Used with the xsOffsetFilePosition . Makes the offset function move the file position by the number of bytes it takes to store a float (4 bytes) 1.4. cOffsetVector \u00b6 Value: int 3 Used with the xsOffsetFilePosition . Makes the offset function move the file position by the number of bytes it takes to store a vector (12 bytes) 2. Age \u00b6 2.1. cDarkAge \u00b6 Value: int 0 Value of the Current Age resource when a player is in the Dark Age 2.2. cFeudalAge \u00b6 Value: int 1 Value of the Current Age resource when a player is in the Feudal Age 2.3. cCastleAge \u00b6 Value: int 2 Value of the Current Age resource when a player is in the Castle Age 2.4. cImperialAge \u00b6 Value: int 3 Value of the Current Age resource when a player is in the Imperial Age 3. Value \u00b6 3.1. cActivationTime \u00b6 Value: int None This value is only defined inside the body of a rule. It holds the time of initial activation of that rule 3.2. cOriginVector \u00b6 Value: vector ( 0 , 0 , 0 ) The Origin Vector 3.3. cInvalidVector \u00b6 Value: vector ( -1 , -1 , -1 ) The Invalid Vector 4. Victory Conditions \u00b6 4.1. cStandardVictory \u00b6 Value: int 100 one of the values returned by the xsGetVictoryCondition function 4.2. cWonderVictory \u00b6 Value: int 101 one of the values returned by the xsGetVictoryCondition function 4.3. cRelicVictory \u00b6 Value: int 102 one of the values returned by the xsGetVictoryCondition function 4.4. cKingOfTheHillVictory \u00b6 Value: int 103 one of the values returned by the xsGetVictoryCondition function 5. Civs \u00b6 5.1. cGaia \u00b6 Value: int 0 This is the civilization ID of Gaia 5.2. cBritons \u00b6 Value: int 1 This is the civilization ID of Britons 5.3. cFranks \u00b6 Value: int 2 This is the civilization ID of Franks 5.4. cGoths \u00b6 Value: int 3 This is the civilization ID of Goths 5.5. cTeutons \u00b6 Value: int 4 This is the civilization ID of Teutons 5.6. cJapanese \u00b6 Value: int 5 This is the civilization ID of Japanese 5.7. cChinese \u00b6 Value: int 6 This is the civilization ID of Chinese 5.8. cByzantines \u00b6 Value: int 7 This is the civilization ID of Byzantines 5.9. cPersians \u00b6 Value: int 8 This is the civilization ID of Persians 5.10. cSaracens \u00b6 Value: int 9 This is the civilization ID of Saracens 5.11. cTurks \u00b6 Value: int 10 This is the civilization ID of Turks 5.12. cVikings \u00b6 Value: int 11 This is the civilization ID of Vikings 5.13. cMongols \u00b6 Value: int 12 This is the civilization ID of Mongols 5.14. cCelts \u00b6 Value: int 13 This is the civilization ID of Celts 5.15. cSpanish \u00b6 Value: int 14 This is the civilization ID of Spanish 5.16. cAztecs \u00b6 Value: int 15 This is the civilization ID of Aztecs 5.17. cMayans \u00b6 Value: int 16 This is the civilization ID of Mayans 5.18. cHuns \u00b6 Value: int 17 This is the civilization ID of Huns 5.19. cKoreans \u00b6 Value: int 18 This is the civilization ID of Koreans 5.20. cItalians \u00b6 Value: int 19 This is the civilization ID of Italians 5.21. cIndians \u00b6 Value: int 20 This is the civilization ID of Indians 5.22. cIncas \u00b6 Value: int 21 This is the civilization ID of Incas 5.23. cMagyars \u00b6 Value: int 22 This is the civilization ID of Magyars 5.24. cSlavs \u00b6 Value: int 23 This is the civilization ID of Slavs 5.25. cPortuguese \u00b6 Value: int 24 This is the civilization ID of Portuguese 5.26. cEthiopians \u00b6 Value: int 25 This is the civilization ID of Ethiopians 5.27. cMalians \u00b6 Value: int 26 This is the civilization ID of Malians 5.28. cBerbers \u00b6 Value: int 27 This is the civilization ID of Berbers 5.29. cKhmer \u00b6 Value: int 28 This is the civilization ID of Khmer 5.30. cMalay \u00b6 Value: int 29 This is the civilization ID of Malay 5.31. cBurmese \u00b6 Value: int 30 This is the civilization ID of Burmese 5.32. cVietnamese \u00b6 Value: int 31 This is the civilization ID of Vietnamese 5.33. cBulgarians \u00b6 Value: int 32 This is the civilization ID of Bulgarians 5.34. cTatars \u00b6 Value: int 33 This is the civilization ID of Tatars 5.35. cCumans \u00b6 Value: int 34 This is the civilization ID of Cumans 5.36. cLithuanians \u00b6 Value: int 35 This is the civilization ID of Lithuanians 5.37. cBurgundians \u00b6 Value: int 36 This is the civilization ID of Burgundians 5.38. cSicilians \u00b6 Value: int 37 This is the civilization ID of Sicilians 5.39. cPoles \u00b6 Value: int 38 This is the civilization ID of Poles 5.40. cBohemians \u00b6 Value: int 39 This is the civilization ID of Bohemians 5.41. cDravidians \u00b6 Value: int 40 This is the civilization ID of Dravidians 5.42. cBengalis \u00b6 Value: int 41 This is the civilization ID of Bengalis 5.43. cGurjaras \u00b6 Value: int 42 This is the civilization ID of Gurjaras 6. EffectAmount Effect Type \u00b6 6.1. cSetAttribute \u00b6 Value: int 0 This is the ID of the Set Attribute effect of the xsEffectAmount function Syntax: xsEffectAmount ( cSetAttribute , unitID , attributeID , value ) Example: xsEffectAmount ( cSetAttribute , 74 , cHitpoints , 100 ) This sets the HP of unit 74 (militia) to 100 (the value). Alternatively, any of the Unit Attribute Constants may be used to modify the corresponding unit property 6.2. cModResource \u00b6 Value: int 1 This is the ID of the Modify Resource effect for the xsEffectAmount function Syntax: xsEffectAmount ( cModResource , resourceID , operation , value ) Example: xsEffectAmount ( cModResource , cAttributeFood , cAttributeAdd , 100 ) This adds 100 to the current food amount. Alternatively, cAttributeSet may be used to set the food amount to 100. Also, see the Resource 6.3. cEnableObject \u00b6 Value: int 2 This is the ID of the Enable (or disable) Object effect for the xsEffectAmount function Syntax: xsEffectAmount ( cEnableObject , unitID , enableOrDisable , 0 ) Example: xsEffectAmount ( cEnableObject , 74 , cAttributeDisable , 0 ) This disables the unit 74 (militia). Alternatively, cAttributeEnable may be used to enable an object instead 6.4. cUpgradeUnit \u00b6 Value: int 3 This is the ID of the Upgrade Unit effect for the xsEffectAmount function Syntax: xsEffectAmount ( cUpgradeUnit , oldUnitID , newUnitID , 0 ) Example: xsEffectAmount ( cUpgradeUnit , 74 , 75 , 0 ) This copies all units attributes except ID and available from unit 75 (man at arms) to 74 (militia) 6.5. cAddAttribute \u00b6 Value: int 4 This is the ID of the Add Attribute effect for the xsEffectAmount function Syntax: xsEffectAmount ( cAddAttribute , unitID , attributeID , value ) Example: xsEffectAmount ( cAddAttribute , 74 , 0 , 100 ) This adds 100 (the value) to the attribute 0 (HP) of unit 74 (militia) 6.6. cMulAttribute \u00b6 Value: int 5 This is the ID of the Multiply Attribute effect for the xsEffectAmount function Syntax: xsEffectAmount ( cMulAttribute , unitID , attributeID , value ) Example: xsEffectAmount ( cMulAttribute , 74 , 0 , 100 ) This multiplies the attribute 0 (HP) of unit 74 (militia) by 100 (the value) 6.7. cMulResource \u00b6 Value: int 6 This is the ID of the Multiply Resource effect for the xsEffectAmount function Syntax: xsEffectAmount ( cMulResource , resourceID , 0 , value ) Example: xsEffectAmount ( cMulResource , cAttributeFood , 0 , 10 ) This multiplies the food amount by 10 (the value) 6.8. cEnableTech \u00b6 Value: int 7 This is the ID of the Enable (or disable) Technology effect for the xsEffectAmount function Syntax: xsEffectAmount ( cEnableTech , techID , enableOrDisable , 0 ) Example: xsEffectAmount ( cEnableTech , 6 , cAttributeEnable , 0 ) This enables the tech 6 (Drill). Alternatively, cAttributeDisable may be used to disable the tech instead 6.9. cModifyTech \u00b6 Value: int 8 This is the ID of the Modify Technology effect for the xsEffectAmount function Syntax: xsEffectAmount ( cModifyTech , techID , techAttribute , value ) Example: xsEffectAmount ( cModifyTech , 22 , cAttrSetTime , 10 ) This sets the research time of tech 22 (loom) to 10s (the value). Alternatively, any of the Tech Attribute Constants may be used to modify the corresponding tech property 6.10. cSetPlayerData \u00b6 Value: int 9 This is the ID of the Set Player Data effect for the xsEffectAmount function Syntax: xsEffectAmount ( cSetPlayerData , 0 , cAttributeSet , value ) Example: xsEffectAmount ( cSetPlayerData , 0 , cAttributeSet , 10230 ) This sets the player data 0 (Civilization Name ID) to 10230 (the value) 6.11. cSetTechCost \u00b6 Value: int 100 This is the ID of the Set Technology Cost effect for the xsEffectAmount function Syntax: xsEffectAmount ( cSetTechCost , techID , resourceID , value ) Example: xsEffectAmount ( cSetTechCost , 22 , cAttributeFood , 10 ) This sets the food cost of tech 22 (loom) to 10 (the value) 6.12. cAddTechCost \u00b6 Value: int 101 This is the ID of the Add Technology Cost effect for the xsEffectAmount function Syntax: xsEffectAmount ( cAddTechCost , techID , resourceID , value ) Example: xsEffectAmount ( cAddTechCost , 22 , cAttributeFood , 10 ) This adds 10 (the) to the current food cost of tech 22 (loom) 6.13. cDisableTech \u00b6 Value: int 102 This is the ID of the Disable Tech effect for the xsEffectAmount function Syntax: xsEffectAmount ( cDisableTech , techID , 0 , 0 ) Example: xsEffectAmount ( cDisableTech , 22 , 0 , 0 ) This disables the tech 22 (loom) 6.14. cModTechTime \u00b6 Value: int 103 This is the ID of the Modify Technology Time effect for the xsEffectAmount function Syntax: xsEffectAmount ( cModTechTime , techID , operation , value ) Example: xsEffectAmount ( cModTechTime , 22 , cAttributeSet , 10 ) This sets the research time of tech 22 (loom) to 10s (the value). Alternatively, cAttributeAdd may be used to add to the current research time of the technology 6.15. cGaiaSetAttribute \u00b6 Value: int -1 This is the ID of the Gaia Set Attribute effect of the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaSetAttribute , unitID , attributeID , value ) Example: xsEffectAmount ( cGaiaSetAttribute , 74 , 0 , 100 ) This sets the attribute 0 (HP) of unit 74 (militia) to 100 (the value) 6.16. cGaiaModResource \u00b6 Value: int -2 This is the ID of the Gaia Modify Resource effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaModResource , resourceID , operation , value ) Example: xsEffectAmount ( cGaiaModResource , cAttributeFood , cAttributeAdd , 100 ) This adds 100 to the current food amount. Alternatively, cAttributeSet may be used to set the food amount to 100 6.17. cGaiaEnableObject \u00b6 Value: int -3 This is the ID of the Gaia Enable (or disable) Object effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaEnableObject , unitID , enableOrDisable , 0 ) Example: xsEffectAmount ( cGaiaEnableObject , 74 , cAttributeDisable , 0 ) This disables the unit 74 (militia). Alternatively, cAttributeEnable may be used to enable an object instead 6.18. cGaiaUpgradeUnit \u00b6 Value: int -4 This is the ID of the Gaia Upgrade Unit effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaUpgradeUnit , oldUnitID , newUnitID , 0 ) Example: xsEffectAmount ( cGaiaUpgradeUnit , 74 , 75 , 0 ) This replaces all units 74 (militia) with 75 (man at arms) on the map and also disables unit 74 and enables unit 75 6.19. cGaiaAddAttribute \u00b6 Value: int -5 This is the ID of the Gaia Add Attribute effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaAddAttribute , unitID , attributeID , value ) Example: xsEffectAmount ( cGaiaAddAttribute , 74 , 0 , 100 ) This adds 100 (the value) to the attribute 0 (HP) of unit 74 (militia) 6.20. cGaiaMulAttribute \u00b6 Value: int -6 This is the ID of the Gaia Multiply Attribute effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaMulAttribute , unitID , attributeID , value ) Example: xsEffectAmount ( cGaiaMulAttribute , 74 , 0 , 100 ) This multiplies the attribute 0 (HP) of unit 74 (militia) by 100 (the value) 6.21. cGaiaMulResource \u00b6 Value: int -7 This is the ID of the Gaia Multiply Resource effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaMulResource , resourceID , 0 , value ) Example: xsEffectAmount ( cGaiaMulResource , cAttributeFood , 0 , 10 ) This multiplies the food amount by 10 (the value) 6.22. cGaiaEnableTech \u00b6 Value: int -8 This is the ID of the Gaia Enable (or disable) Technology effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaEnableTech , techID , enableOrDisable , 0 ) Example: xsEffectAmount ( cGaiaEnableTech , 6 , cAttributeEnable , 0 ) This enables the tech 6 (Drill). Alternatively, cAttributeDisable may be used to disable the tech instead 6.23. cGaiaModifyTech \u00b6 Value: int -9 This is the ID of the Gaia Modify Technology effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaModifyTech , techID , techAttribute , value ) Example: xsEffectAmount ( cGaiaModifyTech , 22 , cAttrSetTime , 10 ) This sets the research time of tech 22 (loom) to 10s (the value). Alternatively, any of the Tech Attribute Constants may be used to modify the corresponding tech property 6.24. cGaiaSetPlayerData \u00b6 Value: int -10 This is the ID of the Gaia Set Player Data effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaSetPlayerData , 0 , cAttributeSet , value ) Example: xsEffectAmount ( cGaiaSetPlayerData , 0 , cAttributeSet , 10230 ) This sets the player data 0 (Civilization Name ID) to 10230 (the value) 6.25. cGaiaSetTechCost \u00b6 Value: int -101 This is the ID of the Gaia Set Technology Cost effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaSetTechCost , techID , resourceID , value ) Example: xsEffectAmount ( cGaiaSetTechCost , 22 , cAttributeFood , 10 ) This sets the food cost of tech 22 (loom) to 10 (the value) 6.26. cGaiaAddTechCost \u00b6 Value: int -102 This is the ID of the Gaia Add Technology Cost effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaAddTechCost , techID , resourceID , value ) Example: xsEffectAmount ( cGaiaAddTechCost , 22 , cAttributeFood , 10 ) This adds 10 (the) to the current food cost of tech 22 (loom) 6.27. cGaiaDisableTech \u00b6 Value: int -103 This is the ID of the Gaia Disable Tech effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaDisableTech , techID , 0 , 0 ) Example: xsEffectAmount ( cGaiaDisableTech , 22 , 0 , 0 ) This disables the tech 22 (loom) 6.28. cGaiaModTechTime \u00b6 Value: int -104 This is the ID of the Gaia Modify Technology Time effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaModTechTime , techID , operation , value ) Example: xsEffectAmount ( cGaiaModTechTime , 22 , cAttributeSet , 10 ) This sets the research time of tech 22 (loom) to 10s (the value). Alternatively, cAttributeAdd may be used to add to the current research time of the technology 7. EffectAmount Effect Operations \u00b6 7.1. cAttributeDisable \u00b6 Value: int 0 This is the ID of the Attribute Disbale modifier for the xsEffectAmount function 7.2. cAttributeEnable \u00b6 Value: int 1 This is the ID of the Attribute Enable modifier for the xsEffectAmount function 7.3. cAttributeForce \u00b6 Value: int 2 This is the ID of the Attribute Force modifier for the xsEffectAmount function 7.4. cAttributeSet \u00b6 Value: int 0 This is the ID of the Attribute Set modifier for the xsEffectAmount function 7.5. cAttributeAdd \u00b6 Value: int 1 This is the ID of the Attribute Add modifier for the xsEffectAmount function 8. EffectAmount Technology Attribute \u00b6 8.1. cAttrSetTime \u00b6 Value: int -1 This is the ID of the Attribute Set Time modifier for the xsEffectAmount function 8.2. cAttrAddTime \u00b6 Value: int -2 This is the ID of the Attribute Add Time modifier for the xsEffectAmount function 8.3. cAttrSetFoodCost \u00b6 Value: int 0 This is the ID of the Attribute Set Food Cost modifier for the xsEffectAmount function 8.4. cAttrSetWoodCost \u00b6 Value: int 1 This is the ID of the Attribute Set Wood Cost modifier for the xsEffectAmount function 8.5. cAttrSetStoneCost \u00b6 Value: int 2 This is the ID of the Attribute Set Stone Cost modifier for the xsEffectAmount function 8.6. cAttrSetGoldCost \u00b6 Value: int 3 This is the ID of the Attribute Set Gold Cost modifier for the xsEffectAmount function 8.7. cAttrAddFoodCost \u00b6 Value: int 16384 This is the ID of the Attribute Add Food Cost modifier for the xsEffectAmount function 8.8. cAttrAddWoodCost \u00b6 Value: int 16385 This is the ID of the Attribute Add Wood Cost modifier for the xsEffectAmount function 8.9. cAttrAddStoneCost \u00b6 Value: int 16386 This is the ID of the Attribute Add Stone Cost modifier for the xsEffectAmount function 8.10. cAttrAddGoldCost \u00b6 Value: int 16387 This is the ID of the Attribute Add Gold Cost modifier for the xsEffectAmount function 8.11. cAttrSetLocation \u00b6 Value: int 4 This is the ID of the Attribute Set Tech Location modifier for the xsEffectAmount function 8.12. cAttrSetButton \u00b6 Value: int 5 This is the ID of the Attribute Set Tech Button modifier for the xsEffectAmount function 8.13. cAttrSetIcon \u00b6 Value: int 6 This is the ID of the Attribute Set Tech Icon modifier for the xsEffectAmount function 8.14. cAttrSetName \u00b6 Value: int 7 This is the ID of the Attribute Set Tech Name modifier for the xsEffectAmount function 8.15. cAttrSetDescription \u00b6 Value: int 8 This is the ID of the Attribute Set Tech Description modifier for the xsEffectAmount function 8.16. cAttrSetStacking \u00b6 Value: int 9 This is the ID of the Attribute Set Tech Stacking modifier for the xsEffectAmount function 8.17. cAttrSetStackingResearchCap \u00b6 Value: int 10 This is the ID of the Attribute Set Stacking Research Cap modifier for the xsEffectAmount function 8.18. cAttrSetHotkey \u00b6 Value: int 11 This is the ID of the Attribute Set Hotkey modifier for the xsEffectAmount function 9. EffectAmount Unit Attribute \u00b6 9.1. cHitpoints \u00b6 Value: int 0 This is the attribute Hit Points 9.2. cLineOfSight \u00b6 Value: int 1 This is the attribute Line of Sight 9.3. cGarrisonCapacity \u00b6 Value: int 2 This is the attribute Garrison Capacity 9.4. cUnitSizeX \u00b6 Value: int 3 This is the attribute Unit Size X 9.5. cUnitSizeY \u00b6 Value: int 4 This is the attribute Unit Size Y 9.6. cMovementSpeed \u00b6 Value: int 5 This is the attribute Movement Speed 9.7. cRotationSpeed \u00b6 Value: int 6 This is the attribute Rotation Speed 9.8. cArmor \u00b6 Value: int 8 This is the attribute Armor 9.9. cAttack \u00b6 Value: int 9 This is the attribute Attack 9.10. cAttackReloadTime \u00b6 Value: int 10 This is the attribute Attack Reload Time 9.11. cAccuracyPercent \u00b6 Value: int 11 This is the attribute Accuracy Percent 9.12. cMaxRange \u00b6 Value: int 12 This is the attribute Max Range 9.13. cWorkRate \u00b6 Value: int 13 This is the attribute Work Rate 9.14. cCarryCapacity \u00b6 Value: int 14 This is the attribute Carry Capacity 9.15. cBaseArmor \u00b6 Value: int 15 This is the attribute Base Armor 9.16. cProjectileUnit \u00b6 Value: int 16 This is the attribute Projectile Unit 9.17. cIconGraphicsAngle \u00b6 Value: int 17 This is the attribute Building Icon Override 9.18. cTerrainDefenseBonus \u00b6 Value: int 18 This is the attribute Terrain Defense Bonus 9.19. cEnableSmartProjectile \u00b6 Value: int 19 This is the attribute Projectile Smart Mode 9.20. cMinimumRange \u00b6 Value: int 20 This is the attribute Minimum Range 9.21. cAmountFirstStorage \u00b6 Value: int 21 This is the attribute Amount of 1 st Resource Storage 9.22. cBlastWidth \u00b6 Value: int 22 This is the attribute Blast Width 9.23. cSearchRadius \u00b6 Value: int 23 This is the attribute Search Radius 9.24. cBonusResistance \u00b6 Value: int 24 This is the attribute Bonus Damage Resistance 9.25. cIconId \u00b6 Value: int 25 This is the attribute Icon ID 9.26. cAmountSecondStorage \u00b6 Value: int 26 This is the attribute Amount of 2 nd Resource Storage 9.27. cAmountThirdStorage \u00b6 Value: int 27 This is the attribute Amount of 3 rd Resource Storage 9.28. cFogFlag \u00b6 Value: int 28 This is the attribute Fog Visibility 9.29. cOcclusionMode \u00b6 Value: int 29 This is the attribute Occlusion Mode 9.30. cGarrisonType \u00b6 Value: int 30 This is the attribute Garrison Type 9.31. cUnitSizeZ \u00b6 Value: int 32 This is the attribute Unit Size Z 9.32. cHeroStatus \u00b6 Value: int 40 This is the attribute Hero Status 9.33. cAttackDelay \u00b6 Value: int 41 This is the attribute Frame Delay 9.34. cTrainLocation \u00b6 Value: int 42 This is the attribute Train Location 9.35. cTrainButton \u00b6 Value: int 43 This is the attribute Train Button 9.36. cBlastAttackLevel \u00b6 Value: int 44 This is the attribute Blast Attack Level 9.37. cBlastDefenseLevel \u00b6 Value: int 45 This is the attribute Blast Defense Level 9.38. cShownAttack \u00b6 Value: int 46 This is the attribute Shown Attack 9.39. cShownRange \u00b6 Value: int 47 This is the attribute Shown Range 9.40. cShownMeleeArmor \u00b6 Value: int 48 This is the attribute Shown Melee Armor 9.41. cShownPierceArmor \u00b6 Value: int 49 This is the attribute Shown Pierce Armor 9.42. cNameId \u00b6 Value: int 50 This is the attribute Object Name ID 9.43. cDescriptionId \u00b6 Value: int 51 This is the attribute Short Description ID 9.44. cTerrainTable \u00b6 Value: int 53 This is the attribute Terrain Restriction ID 9.45. cTraits \u00b6 Value: int 54 This is the attribute Unit Trait 9.46. cTraitPiece \u00b6 Value: int 56 This is the attribute Trait Piece 9.47. cDeadUnitId \u00b6 Value: int 57 This is the attribute Dead Unit ID 9.48. cHotkeyId \u00b6 Value: int 58 This is the attribute Hotkey ID 9.49. cMaxCharge \u00b6 Value: int 59 This is the attribute Maximum Charge 9.50. cRechargeRate \u00b6 Value: int 60 This is the attribute Recharge Rate 9.51. cChargeEvent \u00b6 Value: int 61 This is the attribute Charge Event 9.52. cChargeType \u00b6 Value: int 62 This is the attribute Charge Type 9.53. cCombatAbility \u00b6 Value: int 63 This is the attribute Combat Ability 9.54. cAttackDispersion \u00b6 Value: int 64 This is the attribute Attack Dispersion 9.55. cSecondaryProjectileUnit \u00b6 Value: int 65 This is the attribute Secondary Projectile Unit 9.56. cBloodUnitId \u00b6 Value: int 66 This is the attribute Blood Unit 9.57. cHitMode \u00b6 Value: int 67 This is the attribute Projectile Hit Mode 9.58. cVanishMode \u00b6 Value: int 68 This is the attribute Projectile Vanish Mode 9.59. cProjectileArc \u00b6 Value: int 69 This is the attribute Projectile Arc 9.60. cResourceCost \u00b6 Value: int 100 This is the attribute Resource Costs 9.61. cTrainTime \u00b6 Value: int 101 This is the attribute Train Time 9.62. cTotalProjectiles \u00b6 Value: int 102 This is the attribute Total Missiles 9.63. cFoodCost \u00b6 Value: int 103 This is the attribute Food Costs 9.64. cWoodCost \u00b6 Value: int 104 This is the attribute Wood Costs 9.65. cGoldCost \u00b6 Value: int 105 This is the attribute Gold Costs 9.66. cStoneCost \u00b6 Value: int 106 This is the attribute Stone Costs 9.67. cMaxTotalProjectiles \u00b6 Value: int 107 This is the attribute Max Total Missiles 9.68. cGarrisonHealRate \u00b6 Value: int 108 This is the attribute Garrison Heal Rate 9.69. cRegenerationRate \u00b6 Value: int 109 This is the attribute Regeneration Rate 9.70. cPopulation \u00b6 Value: int 110 This is the attribute Population 10. EffectAmount Object Class \u00b6 10.1. cArcherClass \u00b6 Value: int 900 This is the ID used to target the Archer Class 10.2. cArtifactClass \u00b6 Value: int 901 This is the ID used to target the Artifact Class 10.3. cTradeBoatClass \u00b6 Value: int 902 This is the ID used to target the Trade Boat Class 10.4. cBuildingClass \u00b6 Value: int 903 This is the ID used to target the Building Class 10.5. cVillagerClass \u00b6 Value: int 904 This is the ID used to target the Villager Class 10.6. cSeaFishClass \u00b6 Value: int 905 This is the ID used to target the Sea Fish Class 10.7. cInfantryClass \u00b6 Value: int 906 This is the ID used to target the Infantry Class 10.8. cForageBushClass \u00b6 Value: int 907 This is the ID used to target the Forage Bush Class 10.9. cStoneMineClass \u00b6 Value: int 908 This is the ID used to target the Stone Mine Class 10.10. cPreyAnimalClass \u00b6 Value: int 909 This is the ID used to target the Prey Animal Class 10.11. cPredatorAnimalClass \u00b6 Value: int 910 This is the ID used to target the Predator Animal Class 10.12. cMiscellaneousClass \u00b6 Value: int 911 This is the ID used to target the Miscellaneous Class 10.13. cCavalryClass \u00b6 Value: int 912 This is the ID used to target the Cavalry Class 10.14. cSiegeWeaponClass \u00b6 Value: int 913 This is the ID used to target the Siege Weapon Class 10.15. cTerrainClass \u00b6 Value: int 914 This is the ID used to target the Terrain Class 10.16. cTreeClass \u00b6 Value: int 915 This is the ID used to target the Tree Class 10.17. cTreeStumpClass \u00b6 Value: int 916 This is the ID used to target the Tree Stump Class 10.18. cHealerClass \u00b6 Value: int 917 This is the ID used to target the Healer Class 10.19. cMonkClass \u00b6 Value: int 918 This is the ID used to target the Monk Class 10.20. cTradeCartClass \u00b6 Value: int 919 This is the ID used to target the Trade Cart Class 10.21. cTransportShipClass \u00b6 Value: int 920 This is the ID used to target the Transport Ship Class 10.22. cFishingBoatClass \u00b6 Value: int 921 This is the ID used to target the Fishing Boat Class 10.23. cWarshipClass \u00b6 Value: int 922 This is the ID used to target the Warship Class 10.24. cConquistadorClass \u00b6 Value: int 923 This is the ID used to target the Conquistador Class 10.25. cWarElephantClass \u00b6 Value: int 924 This is the ID used to target the War Elephant Class 10.26. cHeroClass \u00b6 Value: int 925 This is the ID used to target the Hero Class 10.27. cElephantArcherClass \u00b6 Value: int 926 This is the ID used to target the Elephant Archer Class 10.28. cWallClass \u00b6 Value: int 927 This is the ID used to target the Wall Class 10.29. cPhalanxClass \u00b6 Value: int 928 This is the ID used to target the Phalanx Class 10.30. cDomesticAnimalClass \u00b6 Value: int 929 This is the ID used to target the Domestic Animal Class 10.31. cFlagClass \u00b6 Value: int 930 This is the ID used to target the Flag Class 10.32. cDeepSeaFishClass \u00b6 Value: int 931 This is the ID used to target the Deep Sea Fish Class 10.33. cGoldMine \u00b6 Value: int 932 This is the ID used to target the Gold Mine 10.34. cShoreFish \u00b6 Value: int 933 This is the ID used to target the Shore Fish 10.35. cCliffClass \u00b6 Value: int 934 This is the ID used to target the Cliff Class 10.36. cPetardClass \u00b6 Value: int 935 This is the ID used to target the Petard Class 10.37. cCavalryArcherClass \u00b6 Value: int 936 This is the ID used to target the Cavalry Archer Class 10.38. cDoppelgangerClass \u00b6 Value: int 937 This is the ID used to target the Doppelganger Class 10.39. cBirdClass \u00b6 Value: int 938 This is the ID used to target the Bird Class 10.40. cGateClass \u00b6 Value: int 939 This is the ID used to target the Gate Class 10.41. cSalvagePileClass \u00b6 Value: int 940 This is the ID used to target the Salvage Pile Class 10.42. cResourcePileClass \u00b6 Value: int 941 This is the ID used to target the Resource Pile Class 10.43. cRelicClass \u00b6 Value: int 942 This is the ID used to target the Relic Class 10.44. cMonkWithRelicClass \u00b6 Value: int 943 This is the ID used to target the Monk With Relic Class 10.45. cHandCannoneerClass \u00b6 Value: int 944 This is the ID used to target the Hand Cannoneer Class 10.46. cTwoHandedSwordsmanClass \u00b6 Value: int 945 This is the ID used to target the Two Handed Swordsman Class 10.47. cPikemanClass \u00b6 Value: int 946 This is the ID used to target the Pikeman Class 10.48. cScoutCavalryClass \u00b6 Value: int 947 This is the ID used to target the Scout Cavalry Class 10.49. cOreMineClass \u00b6 Value: int 948 This is the ID used to target the Ore Mine Class 10.50. cFarmClass \u00b6 Value: int 949 This is the ID used to target the Farm Class 10.51. cSpearmanClass \u00b6 Value: int 950 This is the ID used to target the Spearman Class 10.52. cPackedUnitClass \u00b6 Value: int 951 This is the ID used to target the Packed Unit Class 10.53. cTowerClass \u00b6 Value: int 952 This is the ID used to target the Tower Class 10.54. cBoardingShipClass \u00b6 Value: int 953 This is the ID used to target the Boarding Ship Class 10.55. cUnpackedSiegeUnitClass \u00b6 Value: int 954 This is the ID used to target the Unpacked Siege Unit Class 10.56. cScorpionClass \u00b6 Value: int 955 This is the ID used to target the Scorpion Class 10.57. cRaiderClass \u00b6 Value: int 956 This is the ID used to target the Raider Class 10.58. cCavalryRaiderClass \u00b6 Value: int 957 This is the ID used to target the Cavalry Raider Class 10.59. cLivestockClass \u00b6 Value: int 958 This is the ID used to target the Livestock Class 10.60. cKingClass \u00b6 Value: int 959 This is the ID used to target the King Class 10.61. cMiscBuildingClass \u00b6 Value: int 960 This is the ID used to target the Misc Building Class 10.62. cControlledAnimalClass \u00b6 Value: int 961 This is the ID used to target the Controlled Animal Class 11. Resource \u00b6 11.1. cAttributeFood \u00b6 Value: int 0 ID of the player resource Food. Check here for more info about what this resource does. 11.2. cAttributeWood \u00b6 Value: int 1 ID of the player resource Wood. Check here for more info about what this resource does. 11.3. cAttributeStone \u00b6 Value: int 2 ID of the player resource Stone. Check here for more info about what this resource does. 11.4. cAttributeGold \u00b6 Value: int 3 ID of the player resource Gold. Check here for more info about what this resource does. 11.5. cAttributePopulationCap \u00b6 Value: int 4 ID of the player resource Population Cap. Check here for more info about what this resource does. 11.6. cAttributeReligion \u00b6 Value: int 5 ID of the player resource Religion. Check here for more info about what this resource does. 11.7. cAttributeCurrentAge \u00b6 Value: int 6 ID of the player resource Current Age. Check here for more info about what this resource does. 11.8. cAttributeRelics \u00b6 Value: int 7 ID of the player resource Relics. Check here for more info about what this resource does. 11.9. cAttributeTrageBonus \u00b6 Value: int 8 ID of the player resource Trage Bonus. Click here . The name is mispelled in the Constants.xs Check so thats how it needs to be used for more info about what this resource does. 11.10. cAttributeTradeGoods \u00b6 Value: int 9 ID of the player resource Trade Goods. Check here for more info about what this resource does. 11.11. cAttributeTradeProducation \u00b6 Value: int 10 ID of the player resource Trade Producation. Check here for more info about what this resource does. 11.12. cAttributePopulation \u00b6 Value: int 11 ID of the player resource Population. Check here for more info about what this resource does. 11.13. cAttributeDecay \u00b6 Value: int 12 ID of the player resource Decay. Check here for more info about what this resource does. 11.14. cAttributeDiscovery \u00b6 Value: int 13 ID of the player resource Discovery. Check here for more info about what this resource does. 11.15. cAttributeRuins \u00b6 Value: int 14 ID of the player resource Ruins. Check here for more info about what this resource does. 11.16. cAttributeMeat \u00b6 Value: int 15 ID of the player resource Meat. Check here for more info about what this resource does. 11.17. cAttributeBerries \u00b6 Value: int 16 ID of the player resource Berries. Check here for more info about what this resource does. 11.18. cAttributeFish \u00b6 Value: int 17 ID of the player resource Fish. Check here for more info about what this resource does. 11.19. cAttributeKills \u00b6 Value: int 20 ID of the player resource Kills. Check here for more info about what this resource does. 11.20. cAttributeResearchCount \u00b6 Value: int 21 ID of the player resource Research Count. Check here for more info about what this resource does. 11.21. cAttributeExploration \u00b6 Value: int 22 ID of the player resource Exploration. Check here for more info about what this resource does. 11.22. cAttributeConvertPriest \u00b6 Value: int 27 ID of the player resource Convert Priest. Check here for more info about what this resource does. 11.23. cAttributeConvertBuilding \u00b6 Value: int 28 ID of the player resource Convert Building. Check here for more info about what this resource does. 11.24. cAttributeBuildingLimit \u00b6 Value: int 30 ID of the player resource Building Limit. Check here for more info about what this resource does. 11.25. cAttributeFoodLimit \u00b6 Value: int 31 ID of the player resource Food Limit. Check here for more info about what this resource does. 11.26. cAttributeUnitLimit \u00b6 Value: int 32 ID of the player resource Unit Limit. Check here for more info about what this resource does. 11.27. cAttributeMaintenance \u00b6 Value: int 33 ID of the player resource Maintenance. Check here for more info about what this resource does. 11.28. cAttributeFaith \u00b6 Value: int 34 ID of the player resource Faith. Check here for more info about what this resource does. 11.29. cAttributeFaithRechargeRate \u00b6 Value: int 35 ID of the player resource Faith Recharge Rate. Check here for more info about what this resource does. 11.30. cAttributeFarmFood \u00b6 Value: int 36 ID of the player resource Farm Food. Check here for more info about what this resource does. 11.31. cAttributeCivilianPopulation \u00b6 Value: int 37 ID of the player resource Civilian Population. Check here for more info about what this resource does. 11.32. cAttributeAllTechsAchieved \u00b6 Value: int 39 ID of the player resource All Techs Achieved. Check here for more info about what this resource does. 11.33. cAttributeMilitaryPopulation \u00b6 Value: int 40 ID of the player resource Military Population. Check here for more info about what this resource does. 11.34. cAttributeConversions \u00b6 Value: int 41 ID of the player resource Conversions. Check here for more info about what this resource does. 11.35. cAttributeWonder \u00b6 Value: int 42 ID of the player resource Wonder. Check here for more info about what this resource does. 11.36. cAttributeRazings \u00b6 Value: int 43 ID of the player resource Razings. Check here for more info about what this resource does. 11.37. cAttributeKillRatio \u00b6 Value: int 44 ID of the player resource Kill Ratio. Check here for more info about what this resource does. 11.38. cAttributePlayerKilled \u00b6 Value: int 45 ID of the player resource Player Killed. Check here for more info about what this resource does. 11.39. cAttributeTributeInefficency \u00b6 Value: int 46 ID of the player resource Tribute Inefficency. Check here for more info about what this resource does. 11.40. cAttributeGoldBonus \u00b6 Value: int 47 ID of the player resource Gold Bonus. Check here for more info about what this resource does. 11.41. cAttributeTownCenterUnavailable \u00b6 Value: int 48 ID of the player resource Town Center Unavailable. Check here for more info about what this resource does. 11.42. cAttributeGoldCounter \u00b6 Value: int 49 ID of the player resource Gold Counter. Check here for more info about what this resource does. 11.43. cAttributeWriting \u00b6 Value: int 50 ID of the player resource Writing. Check here for more info about what this resource does. 11.44. cAttributeMonasteries \u00b6 Value: int 52 ID of the player resource Monasteries. Check here for more info about what this resource does. 11.45. cAttributeTribute \u00b6 Value: int 53 ID of the player resource Tribute. Check here for more info about what this resource does. 11.46. cAttributeHoldRuins \u00b6 Value: int 54 ID of the player resource Hold Ruins. Check here for more info about what this resource does. 11.47. cAttributeHoldRelics \u00b6 Value: int 55 ID of the player resource Hold Relics. Check here for more info about what this resource does. 11.48. cAttributeOre \u00b6 Value: int 56 ID of the player resource Ore. Check here for more info about what this resource does. 11.49. cAttributeCapturedUnit \u00b6 Value: int 57 ID of the player resource Captured Unit. Check here for more info about what this resource does. 11.50. cAttributeTradeGoodQuality \u00b6 Value: int 59 ID of the player resource Trade Good Quality. Check here for more info about what this resource does. 11.51. cAttributeTradeMarketLevel \u00b6 Value: int 60 ID of the player resource Trade Market Level. Check here for more info about what this resource does. 11.52. cAttributeFormations \u00b6 Value: int 61 ID of the player resource Formations. Check here for more info about what this resource does. 11.53. cAttributeBuildingHouseRate \u00b6 Value: int 62 ID of the player resource Building House Rate. Check here for more info about what this resource does. 11.54. cAttributeGatherTaxRate \u00b6 Value: int 63 ID of the player resource Gather Tax Rate. Check here for more info about what this resource does. 11.55. cAttributeGatherAccumalation \u00b6 Value: int 64 ID of the player resource Gather Accumalation. Check here for more info about what this resource does. 11.56. cAttributeSalvageDecayRate \u00b6 Value: int 65 ID of the player resource Salvage Decay Rate. Check here for more info about what this resource does. 11.57. cAttributeAllowFormations \u00b6 Value: int 66 ID of the player resource Allow Formations. Check here for more info about what this resource does. 11.58. cAttributeCanConvert \u00b6 Value: int 67 ID of the player resource Can Convert. Check here for more info about what this resource does. 11.59. cAttributePlayer1Kills \u00b6 Value: int 69 ID of the player resource Player1 Kills. Check here for more info about what this resource does. 11.60. cAttributePlayer2Kills \u00b6 Value: int 70 ID of the player resource Player2 Kills. Check here for more info about what this resource does. 11.61. cAttributePlayer3Kills \u00b6 Value: int 71 ID of the player resource Player3 Kills. Check here for more info about what this resource does. 11.62. cAttributePlayer4Kills \u00b6 Value: int 72 ID of the player resource Player4 Kills. Check here for more info about what this resource does. 11.63. cAttributePlayer5Kills \u00b6 Value: int 73 ID of the player resource Player5 Kills. Check here for more info about what this resource does. 11.64. cAttributePlayer6Kills \u00b6 Value: int 74 ID of the player resource Player6 Kills. Check here for more info about what this resource does. 11.65. cAttributePlayer7Kills \u00b6 Value: int 75 ID of the player resource Player7 Kills. Check here for more info about what this resource does. 11.66. cAttributePlayer8Kills \u00b6 Value: int 76 ID of the player resource Player8 Kills. Check here for more info about what this resource does. 11.67. cAttributeConvertResistance \u00b6 Value: int 77 ID of the player resource Convert Resistance. Check here for more info about what this resource does. 11.68. cAttributeTradeVigRate \u00b6 Value: int 78 ID of the player resource Trade Vig Rate. Check here for more info about what this resource does. 11.69. cAttributeStoneBonus \u00b6 Value: int 79 ID of the player resource Stone Bonus. Check here for more info about what this resource does. 11.70. cAttributeQueuedCount \u00b6 Value: int 80 ID of the player resource Queued Count. Check here for more info about what this resource does. 11.71. cAttributeTrainingCount \u00b6 Value: int 81 ID of the player resource Training Count. Check here for more info about what this resource does. 11.72. cAttributeRaider \u00b6 Value: int 82 ID of the player resource Raider. Check here for more info about what this resource does. 11.73. cAttributeBoardingRechargeRate \u00b6 Value: int 83 ID of the player resource Boarding Recharge Rate. Check here for more info about what this resource does. 11.74. cAttributeStartingVillagers \u00b6 Value: int 84 ID of the player resource Starting Villagers. Check here for more info about what this resource does. 11.75. cAttributeResearchCostMod \u00b6 Value: int 85 ID of the player resource Research Cost Mod. Check here for more info about what this resource does. 11.76. cAttributeResearchTimeMod \u00b6 Value: int 86 ID of the player resource Research Time Mod. Check here for more info about what this resource does. 11.77. cAttributeConvertBoats \u00b6 Value: int 87 ID of the player resource Convert Boats. Check here for more info about what this resource does. 11.78. cAttributeFishTrapFood \u00b6 Value: int 88 ID of the player resource Fish Trap Food. Check here for more info about what this resource does. 11.79. cAttributeHealRateModifer \u00b6 Value: int 89 ID of the player resource Heal Rate Modifer. Check here for more info about what this resource does. 11.80. cAttributeHealRange \u00b6 Value: int 90 ID of the player resource Heal Range. Check here for more info about what this resource does. 11.81. cAttributeStartingFood \u00b6 Value: int 91 ID of the player resource Starting Food. Check here for more info about what this resource does. 11.82. cAttributeStartingWood \u00b6 Value: int 92 ID of the player resource Starting Wood. Check here for more info about what this resource does. 11.83. cAttributeStartingStone \u00b6 Value: int 93 ID of the player resource Starting Stone. Check here for more info about what this resource does. 11.84. cAttributeStartingGold \u00b6 Value: int 94 ID of the player resource Starting Gold. Check here for more info about what this resource does. 11.85. cAttributeRaiderAbility \u00b6 Value: int 95 ID of the player resource Raider Ability. Check here for more info about what this resource does. 11.86. cAttributeNoDropsiteFarmers \u00b6 Value: int 96 ID of the player resource No Dropsite Farmers. Check here for more info about what this resource does. 11.87. cAttributeDominantSheepControl \u00b6 Value: int 97 ID of the player resource Dominant Sheep Control. Check here for more info about what this resource does. 11.88. cAttributeObjectCostSummation \u00b6 Value: int 98 ID of the player resource Object Cost Summation. Check here for more info about what this resource does. 11.89. cAttributeResearchCostSummation \u00b6 Value: int 99 ID of the player resource Research Cost Summation. Check here for more info about what this resource does. 11.90. cAttributeRelicIncomeSummation \u00b6 Value: int 100 ID of the player resource Relic Income Summation. Check here for more info about what this resource does. 11.91. cAttributeTradeIncomeSummation \u00b6 Value: int 101 ID of the player resource Trade Income Summation. Check here for more info about what this resource does. 11.92. cAttributePlayer1Tribute \u00b6 Value: int 102 ID of the player resource Player1 Tribute. Check here for more info about what this resource does. 11.93. cAttributePlayer2Tribute \u00b6 Value: int 103 ID of the player resource Player2 Tribute. Check here for more info about what this resource does. 11.94. cAttributePlayer3Tribute \u00b6 Value: int 104 ID of the player resource Player3 Tribute. Check here for more info about what this resource does. 11.95. cAttributePlayer4Tribute \u00b6 Value: int 105 ID of the player resource Player4 Tribute. Check here for more info about what this resource does. 11.96. cAttributePlayer5Tribute \u00b6 Value: int 106 ID of the player resource Player5 Tribute. Check here for more info about what this resource does. 11.97. cAttributePlayer6Tribute \u00b6 Value: int 107 ID of the player resource Player6 Tribute. Check here for more info about what this resource does. 11.98. cAttributePlayer7Tribute \u00b6 Value: int 108 ID of the player resource Player7 Tribute. Check here for more info about what this resource does. 11.99. cAttributePlayer8Tribute \u00b6 Value: int 109 ID of the player resource Player8 Tribute. Check here for more info about what this resource does. 11.100. cAttributePlayer1KillValue \u00b6 Value: int 110 ID of the player resource Player1 Kill Value. Check here for more info about what this resource does. 11.101. cAttributePlayer2KillValue \u00b6 Value: int 111 ID of the player resource Player2 Kill Value. Check here for more info about what this resource does. 11.102. cAttributePlayer3KillValue \u00b6 Value: int 112 ID of the player resource Player3 Kill Value. Check here for more info about what this resource does. 11.103. cAttributePlayer4KillValue \u00b6 Value: int 113 ID of the player resource Player4 Kill Value. Check here for more info about what this resource does. 11.104. cAttributePlayer5KillValue \u00b6 Value: int 114 ID of the player resource Player5 Kill Value. Check here for more info about what this resource does. 11.105. cAttributePlayer6KillValue \u00b6 Value: int 115 ID of the player resource Player6 Kill Value. Check here for more info about what this resource does. 11.106. cAttributePlayer7KillValue \u00b6 Value: int 116 ID of the player resource Player7 Kill Value. Check here for more info about what this resource does. 11.107. cAttributePlayer8KillValue \u00b6 Value: int 117 ID of the player resource Player8 Kill Value. Check here for more info about what this resource does. 11.108. cAttributePlayer1Razings \u00b6 Value: int 118 ID of the player resource Player1 Razings. Check here for more info about what this resource does. 11.109. cAttributePlayer2Razings \u00b6 Value: int 119 ID of the player resource Player2 Razings. Check here for more info about what this resource does. 11.110. cAttributePlayer3Razings \u00b6 Value: int 120 ID of the player resource Player3 Razings. Check here for more info about what this resource does. 11.111. cAttributePlayer4Razings \u00b6 Value: int 121 ID of the player resource Player4 Razings. Check here for more info about what this resource does. 11.112. cAttributePlayer5Razings \u00b6 Value: int 122 ID of the player resource Player5 Razings. Check here for more info about what this resource does. 11.113. cAttributePlayer6Razings \u00b6 Value: int 123 ID of the player resource Player6 Razings. Check here for more info about what this resource does. 11.114. cAttributePlayer7Razings \u00b6 Value: int 124 ID of the player resource Player7 Razings. Check here for more info about what this resource does. 11.115. cAttributePlayer8Razings \u00b6 Value: int 125 ID of the player resource Player8 Razings. Check here for more info about what this resource does. 11.116. cAttributePlayer1RazingValue \u00b6 Value: int 126 ID of the player resource Player1 Razing Value. Check here for more info about what this resource does. 11.117. cAttributePlayer2RazingValue \u00b6 Value: int 127 ID of the player resource Player2 Razing Value. Check here for more info about what this resource does. 11.118. cAttributePlayer3RazingValue \u00b6 Value: int 128 ID of the player resource Player3 Razing Value. Check here for more info about what this resource does. 11.119. cAttributePlayer4RazingValue \u00b6 Value: int 129 ID of the player resource Player4 Razing Value. Check here for more info about what this resource does. 11.120. cAttributePlayer5RazingValue \u00b6 Value: int 130 ID of the player resource Player5 Razing Value. Check here for more info about what this resource does. 11.121. cAttributePlayer6RazingValue \u00b6 Value: int 131 ID of the player resource Player6 Razing Value. Check here for more info about what this resource does. 11.122. cAttributePlayer7RazingValue \u00b6 Value: int 132 ID of the player resource Player7 Razing Value. Check here for more info about what this resource does. 11.123. cAttributePlayer8RazingValue \u00b6 Value: int 133 ID of the player resource Player8 Razing Value. Check here for more info about what this resource does. 11.124. cAttributeCastle \u00b6 Value: int 134 ID of the player resource Castle. Check here for more info about what this resource does. 11.125. cAttributeHitPointRazings \u00b6 Value: int 135 ID of the player resource Hit Point Razings. Check here for more info about what this resource does. 11.126. cAttributeKillsByPlayer1 \u00b6 Value: int 136 ID of the player resource Kills By Player1. Check here for more info about what this resource does. 11.127. cAttributeKillsByPlayer2 \u00b6 Value: int 137 ID of the player resource Kills By Player2. Check here for more info about what this resource does. 11.128. cAttributeKillsByPlayer3 \u00b6 Value: int 138 ID of the player resource Kills By Player3. Check here for more info about what this resource does. 11.129. cAttributeKillsByPlayer4 \u00b6 Value: int 139 ID of the player resource Kills By Player4. Check here for more info about what this resource does. 11.130. cAttributeKillsByPlayer5 \u00b6 Value: int 140 ID of the player resource Kills By Player5. Check here for more info about what this resource does. 11.131. cAttributeKillsByPlayer6 \u00b6 Value: int 141 ID of the player resource Kills By Player6. Check here for more info about what this resource does. 11.132. cAttributeKillsByPlayer7 \u00b6 Value: int 142 ID of the player resource Kills By Player7. Check here for more info about what this resource does. 11.133. cAttributeKillsByPlayer8 \u00b6 Value: int 143 ID of the player resource Kills By Player8. Check here for more info about what this resource does. 11.134. cAttributeRazingsByPlayer1 \u00b6 Value: int 144 ID of the player resource Razings By Player1. Check here for more info about what this resource does. 11.135. cAttributeRazingsByPlayer2 \u00b6 Value: int 145 ID of the player resource Razings By Player2. Check here for more info about what this resource does. 11.136. cAttributeRazingsByPlayer3 \u00b6 Value: int 146 ID of the player resource Razings By Player3. Check here for more info about what this resource does. 11.137. cAttributeRazingsByPlayer4 \u00b6 Value: int 147 ID of the player resource Razings By Player4. Check here for more info about what this resource does. 11.138. cAttributeRazingsByPlayer5 \u00b6 Value: int 148 ID of the player resource Razings By Player5. Check here for more info about what this resource does. 11.139. cAttributeRazingsByPlayer6 \u00b6 Value: int 149 ID of the player resource Razings By Player6. Check here for more info about what this resource does. 11.140. cAttributeRazingsByPlayer7 \u00b6 Value: int 150 ID of the player resource Razings By Player7. Check here for more info about what this resource does. 11.141. cAttributeRazingsByPlayer8 \u00b6 Value: int 151 ID of the player resource Razings By Player8. Check here for more info about what this resource does. 11.142. cAttributeValueKilledByOthers \u00b6 Value: int 152 ID of the player resource Value Killed By Others. Check here for more info about what this resource does. 11.143. cAttributeValueRazedByOthers \u00b6 Value: int 153 ID of the player resource Value Razed By Others. Check here for more info about what this resource does. 11.144. cAttributeKilledByOthers \u00b6 Value: int 154 ID of the player resource Killed By Others. Check here for more info about what this resource does. 11.145. cAttributeRazedByOthers \u00b6 Value: int 155 ID of the player resource Razed By Others. Check here for more info about what this resource does. 11.146. cAttributeTributeFromPlayer1 \u00b6 Value: int 156 ID of the player resource Tribute From Player1. Check here for more info about what this resource does. 11.147. cAttributeTributeFromPlayer2 \u00b6 Value: int 157 ID of the player resource Tribute From Player2. Check here for more info about what this resource does. 11.148. cAttributeTributeFromPlayer3 \u00b6 Value: int 158 ID of the player resource Tribute From Player3. Check here for more info about what this resource does. 11.149. cAttributeTributeFromPlayer4 \u00b6 Value: int 159 ID of the player resource Tribute From Player4. Check here for more info about what this resource does. 11.150. cAttributeTributeFromPlayer5 \u00b6 Value: int 160 ID of the player resource Tribute From Player5. Check here for more info about what this resource does. 11.151. cAttributeTributeFromPlayer6 \u00b6 Value: int 161 ID of the player resource Tribute From Player6. Check here for more info about what this resource does. 11.152. cAttributeTributeFromPlayer7 \u00b6 Value: int 162 ID of the player resource Tribute From Player7. Check here for more info about what this resource does. 11.153. cAttributeTributeFromPlayer8 \u00b6 Value: int 163 ID of the player resource Tribute From Player8. Check here for more info about what this resource does. 11.154. cAttributeValueCurrentUnits \u00b6 Value: int 164 ID of the player resource Value Current Units. Check here for more info about what this resource does. 11.155. cAttributeValueCurrentBuildings \u00b6 Value: int 165 ID of the player resource Value Current Buildings. Check here for more info about what this resource does. 11.156. cAttributeFoodTotal \u00b6 Value: int 166 ID of the player resource Food Total. Check here for more info about what this resource does. 11.157. cAttributeWoodTotal \u00b6 Value: int 167 ID of the player resource Wood Total. Check here for more info about what this resource does. 11.158. cAttributeStoneTotal \u00b6 Value: int 168 ID of the player resource Stone Total. Check here for more info about what this resource does. 11.159. cAttributeGoldTotal \u00b6 Value: int 169 ID of the player resource Gold Total. Check here for more info about what this resource does. 11.160. cAttributeTotalValueOfKills \u00b6 Value: int 170 ID of the player resource Total Value Of Kills. Check here for more info about what this resource does. 11.161. cAttributeTotalTributeReceived \u00b6 Value: int 171 ID of the player resource Total Tribute Received. Check here for more info about what this resource does. 11.162. cAttributeTotalValueOfRazings \u00b6 Value: int 172 ID of the player resource Total Value Of Razings. Check here for more info about what this resource does. 11.163. cAttributeTotalCastlesBuilt \u00b6 Value: int 173 ID of the player resource Total Castles Built. Check here for more info about what this resource does. 11.164. cAttributeTotalWondersBuilt \u00b6 Value: int 174 ID of the player resource Total Wonders Built. Check here for more info about what this resource does. 11.165. cAttributeTributeScore \u00b6 Value: int 175 ID of the player resource Tribute Score. Check here for more info about what this resource does. 11.166. cAttributeConvertMinAdj \u00b6 Value: int 176 ID of the player resource Convert Min Adj. Check here for more info about what this resource does. 11.167. cAttributeConvertMaxAdj \u00b6 Value: int 177 ID of the player resource Convert Max Adj. Check here for more info about what this resource does. 11.168. cAttributeConvertResistMinAdj \u00b6 Value: int 178 ID of the player resource Convert Resist Min Adj. Check here for more info about what this resource does. 11.169. cAttributeConvertResistMaxAdj \u00b6 Value: int 179 ID of the player resource Convert Resist Max Adj. Check here for more info about what this resource does. 11.170. cAttributeConvertBuildingMin \u00b6 Value: int 180 ID of the player resource Convert Building Min. Check here for more info about what this resource does. 11.171. cAttributeConvertBuildingMax \u00b6 Value: int 181 ID of the player resource Convert Building Max. Check here for more info about what this resource does. 11.172. cAttributeConvertBuildingChance \u00b6 Value: int 182 ID of the player resource Convert Building Chance. Check here for more info about what this resource does. 11.173. cAttributeSpies \u00b6 Value: int 183 ID of the player resource Spies. Check here for more info about what this resource does. 11.174. cAttributeValueWondersCastles \u00b6 Value: int 184 ID of the player resource Value Wonders Castles. Check here for more info about what this resource does. 11.175. cAttributeFoodScore \u00b6 Value: int 185 ID of the player resource Food Score. Check here for more info about what this resource does. 11.176. cAttributeWoodScore \u00b6 Value: int 186 ID of the player resource Wood Score. Check here for more info about what this resource does. 11.177. cAttributeStoneScore \u00b6 Value: int 187 ID of the player resource Stone Score. Check here for more info about what this resource does. 11.178. cAttributeGoldScore \u00b6 Value: int 188 ID of the player resource Gold Score. Check here for more info about what this resource does. 11.179. cAttributeWoodBonus \u00b6 Value: int 189 ID of the player resource Wood Bonus. Check here for more info about what this resource does. 11.180. cAttributeFoodBonus \u00b6 Value: int 190 ID of the player resource Food Bonus. Check here for more info about what this resource does. 11.181. cAttributeRelicRate \u00b6 Value: int 191 ID of the player resource Relic Rate. Check here for more info about what this resource does. 11.182. cAttributeHeresy \u00b6 Value: int 192 ID of the player resource Heresy. Check here for more info about what this resource does. 11.183. cAttributeTheocracy \u00b6 Value: int 193 ID of the player resource Theocracy. Check here for more info about what this resource does. 11.184. cAttributeCrenellations \u00b6 Value: int 194 ID of the player resource Crenellations. Check here for more info about what this resource does. 11.185. cAttributeConstructionRateMod \u00b6 Value: int 195 ID of the player resource Construction Rate Mod. Check here for more info about what this resource does. 11.186. cAttributeHunWonderBonus \u00b6 Value: int 196 ID of the player resource Hun Wonder Bonus. Check here for more info about what this resource does. 11.187. cAttributeSpiesDiscount \u00b6 Value: int 197 ID of the player resource Spies Discount. Check here for more info about what this resource does. 11.188. cAttributeTemporaryMapReveal \u00b6 Value: int 209 ID of the player resource Temporary Map Reveal. Check here for more info about what this resource does. 11.189. cAttributeRevealInitialType \u00b6 Value: int 210 ID of the player resource Reveal Initial Type. Check here for more info about what this resource does. 11.190. cAttributeElevationBonusHigher \u00b6 Value: int 211 ID of the player resource Elevation Bonus Higher. Check here for more info about what this resource does. 11.191. cAttributeElevationBonusLoweer \u00b6 Value: int 212 ID of the player resource Elevation Bonus Loweer. Check here for more info about what this resource does. 11.192. cAttributeTriggerSharedLOS \u00b6 Value: int 217 ID of the player resource Trigger Shared L O S. Check here for more info about what this resource does. 11.193. cAttributeFeudalTownCenterLimit \u00b6 Value: int 218 ID of the player resource Feudal Town Center Limit. Check here for more info about what this resource does. 11.194. cAttributeUnused1 \u00b6 Value: int 219 ID of the player resource Unused1. Check here for more info about what this resource does. 11.195. cAttributeUnused2 \u00b6 Value: int 220 ID of the player resource Unused2. Check here for more info about what this resource does. 11.196. cAttributeMonumentFoodTrickle \u00b6 Value: int 221 ID of the player resource Monument Food Trickle. Check here for more info about what this resource does. 11.197. cAttributeMonumentWoodTrickle \u00b6 Value: int 222 ID of the player resource Monument Wood Trickle. Check here for more info about what this resource does. 11.198. cAttributeMonumentStoneTrickle \u00b6 Value: int 223 ID of the player resource Monument Stone Trickle. Check here for more info about what this resource does. 11.199. cAttributeMonumentGoldTrickle \u00b6 Value: int 224 ID of the player resource Monument Gold Trickle. Check here for more info about what this resource does. 11.200. cAttributeRelicFoodRate \u00b6 Value: int 225 ID of the player resource Relic Food Rate. Check here for more info about what this resource does. 11.201. cAttributeVillagersKilledByGaia \u00b6 Value: int 226 ID of the player resource Villagers Killed By Gaia. Check here for more info about what this resource does. 11.202. cAttributeVillgaersKilledByAnimal \u00b6 Value: int 227 ID of the player resource Villgaers Killed By Animal. Check here for more info about what this resource does. 11.203. cAttributeVillagersKilledByAIPlayer \u00b6 Value: int 228 ID of the player resource Villagers Killed By A I Player. Check here for more info about what this resource does. 11.204. cAttributeVillagersKilledByHumanPlayer \u00b6 Value: int 229 ID of the player resource Villagers Killed By Human Player. Check here for more info about what this resource does. 11.205. cAttributeFoodGeneration \u00b6 Value: int 230 ID of the player resource Food Generation. Check here for more info about what this resource does. 11.206. cAttributeWoodGeneration \u00b6 Value: int 231 ID of the player resource Wood Generation. Check here for more info about what this resource does. 11.207. cAttributeStoneGeneration \u00b6 Value: int 232 ID of the player resource Stone Generation. Check here for more info about what this resource does. 11.208. cAttributeGoldGeneration \u00b6 Value: int 233 ID of the player resource Gold Generation. Check here for more info about what this resource does. 11.209. cAttributeSpawnCap \u00b6 Value: int 234 ID of the player resource Spawn Cap. Check here for more info about what this resource does. 11.210. cAttributeFlemishMilitiaPop \u00b6 Value: int 235 ID of the player resource Flemish Militia Pop. Check here for more info about what this resource does. 11.211. cAttributeGoldFarmingProductivity \u00b6 Value: int 236 ID of the player resource Gold Farming Productivity. Check here for more info about what this resource does. 11.212. cAttributeFolwarkCollectionAmount \u00b6 Value: int 237 ID of the player resource Folwark Collection Amount. Check here for more info about what this resource does. 11.213. cAttributeFolwarkCollectionType \u00b6 Value: int 238 ID of the player resource Folwark Collection Type. Check here for more info about what this resource does. 11.214. cAttributeBuildingId \u00b6 Value: int 239 ID of the player resource Building Id. Check here for more info about what this resource does. 11.215. cAttributeUnitsConverted \u00b6 Value: int 240 ID of the player resource Units Converted. Check here for more info about what this resource does. 11.216. cAttributeStoneGoldMiningProductivity \u00b6 Value: int 241 ID of the player resource Stone Gold Mining Productivity. Check here for more info about what this resource does. 11.217. cAttributeWorkshopFoodTrickle \u00b6 Value: int 242 ID of the player resource Workshop Food Trickle. Check here for more info about what this resource does. 11.218. cAttributeWorkshopWoodTrickle \u00b6 Value: int 243 ID of the player resource Workshop Wood Trickle. Check here for more info about what this resource does. 11.219. cAttributeWorkshopStoneTrickle \u00b6 Value: int 244 ID of the player resource Workshop Stone Trickle. Check here for more info about what this resource does. 11.220. cAttributeWorkshopGoldTrickle \u00b6 Value: int 245 ID of the player resource Workshop Gold Trickle. Check here for more info about what this resource does. 11.221. cAttributeUnitsValueTotal \u00b6 Value: int 246 ID of the player resource Units Value Total. Check here for more info about what this resource does. 11.222. cAttributeBuildingsValueTotal \u00b6 Value: int 247 ID of the player resource Buildings Value Total. Check here for more info about what this resource does. 11.223. cAttributeVillagersCreatedTotal \u00b6 Value: int 248 ID of the player resource Villagers Created Total. Check here for more info about what this resource does. 11.224. cAttributeVillagersIdlePeriodsTotal \u00b6 Value: int 249 ID of the player resource Villagers Idle Periods Total. Check here for more info about what this resource does. 11.225. cAttributeVillagersIdleSecondsTotal \u00b6 Value: int 250 ID of the player resource Villagers Idle Seconds Total. Check here for more info about what this resource does. 11.226. cAttributeTradeFoodPercent \u00b6 Value: int 251 ID of the player resource Trade Food Percent. Check here for more info about what this resource does. 11.227. cAttributeTradeWoodPercent \u00b6 Value: int 252 ID of the player resource Trade Wood Percent. Check here for more info about what this resource does. 11.228. cAttributeTradeStonePercent \u00b6 Value: int 253 ID of the player resource Trade Stone Percent. Check here for more info about what this resource does. 11.229. cAttributeLivestockFoodProductivity \u00b6 Value: int 254 ID of the player resource Livestock Food Productivity. Check here for more info about what this resource does. 11.230. cAttributeSpeedUpBuildingType \u00b6 Value: int 255 ID of the player resource Speed Up Building Type. Check here for more info about what this resource does. 11.231. cAttributeSpeedUpBuildingRange \u00b6 Value: int 256 ID of the player resource Speed Up Building Range. Check here for more info about what this resource does. 11.232. cAttributeSpeedUpPercentage \u00b6 Value: int 257 ID of the player resource Speed Up Percentage. Check here for more info about what this resource does. 11.233. cAttributeSpeedUpObjectType \u00b6 Value: int 258 ID of the player resource Speed Up Object Type. Check here for more info about what this resource does. 11.234. cAttributeSpeedUpEffectType \u00b6 Value: int 259 ID of the player resource Speed Up Effect Type. Check here for more info about what this resource does. 11.235. cAttributeSpeedUpSecondaryEffectType \u00b6 Value: int 260 ID of the player resource Speed Up Secondary Effect Type. Check here for more info about what this resource does. 11.236. cAttributeSpeedUpSecondaryPercentage \u00b6 Value: int 261 ID of the player resource Speed Up Secondary Percentage. Check here for more info about what this resource does. 11.237. cAttributeExtraElephantConvertResist \u00b6 Value: int 262 ID of the player resource Extra Elephant Convert Resist. Check here for more info about what this resource does. 11.238. cAttributeStartingScoutID \u00b6 Value: int 263 ID of the player resource Starting Scout I D. Check here for more info about what this resource does. 11.239. cAttributeRelicWoodRate \u00b6 Value: int 264 ID of the player resource Relic Wood Rate. Check here for more info about what this resource does. 11.240. cAttributeRelicStoneRate \u00b6 Value: int 265 ID of the player resource Relic Stone Rate. Check here for more info about what this resource does.","title":"Constant Reference"},{"location":"general/xs/constants/#1-readwrite","text":"","title":"1. Read/Write"},{"location":"general/xs/constants/#11-coffsetstring","text":"Value: int 0 Used with the xsOffsetFilePosition . Makes the offset function move the file position by the number of bytes it takes to store a string (4 bytes + a number of bytes that is determined by the integer that the first 4 bytes represent)","title":"1.1. cOffsetString"},{"location":"general/xs/constants/#12-coffsetinterger","text":"Value: int 1 Used with the xsOffsetFilePosition . Makes the offset function move the file position by the number of bytes it takes to store an integer (4 bytes)","title":"1.2. cOffsetInterger"},{"location":"general/xs/constants/#13-coffsetfloat","text":"Value: int 2 Used with the xsOffsetFilePosition . Makes the offset function move the file position by the number of bytes it takes to store a float (4 bytes)","title":"1.3. cOffsetFloat"},{"location":"general/xs/constants/#14-coffsetvector","text":"Value: int 3 Used with the xsOffsetFilePosition . Makes the offset function move the file position by the number of bytes it takes to store a vector (12 bytes)","title":"1.4. cOffsetVector"},{"location":"general/xs/constants/#2-age","text":"","title":"2. Age"},{"location":"general/xs/constants/#21-cdarkage","text":"Value: int 0 Value of the Current Age resource when a player is in the Dark Age","title":"2.1. cDarkAge"},{"location":"general/xs/constants/#22-cfeudalage","text":"Value: int 1 Value of the Current Age resource when a player is in the Feudal Age","title":"2.2. cFeudalAge"},{"location":"general/xs/constants/#23-ccastleage","text":"Value: int 2 Value of the Current Age resource when a player is in the Castle Age","title":"2.3. cCastleAge"},{"location":"general/xs/constants/#24-cimperialage","text":"Value: int 3 Value of the Current Age resource when a player is in the Imperial Age","title":"2.4. cImperialAge"},{"location":"general/xs/constants/#3-value","text":"","title":"3. Value"},{"location":"general/xs/constants/#31-cactivationtime","text":"Value: int None This value is only defined inside the body of a rule. It holds the time of initial activation of that rule","title":"3.1. cActivationTime"},{"location":"general/xs/constants/#32-coriginvector","text":"Value: vector ( 0 , 0 , 0 ) The Origin Vector","title":"3.2. cOriginVector"},{"location":"general/xs/constants/#33-cinvalidvector","text":"Value: vector ( -1 , -1 , -1 ) The Invalid Vector","title":"3.3. cInvalidVector"},{"location":"general/xs/constants/#4-victory-conditions","text":"","title":"4. Victory Conditions"},{"location":"general/xs/constants/#41-cstandardvictory","text":"Value: int 100 one of the values returned by the xsGetVictoryCondition function","title":"4.1. cStandardVictory"},{"location":"general/xs/constants/#42-cwondervictory","text":"Value: int 101 one of the values returned by the xsGetVictoryCondition function","title":"4.2. cWonderVictory"},{"location":"general/xs/constants/#43-crelicvictory","text":"Value: int 102 one of the values returned by the xsGetVictoryCondition function","title":"4.3. cRelicVictory"},{"location":"general/xs/constants/#44-ckingofthehillvictory","text":"Value: int 103 one of the values returned by the xsGetVictoryCondition function","title":"4.4. cKingOfTheHillVictory"},{"location":"general/xs/constants/#5-civs","text":"","title":"5. Civs"},{"location":"general/xs/constants/#51-cgaia","text":"Value: int 0 This is the civilization ID of Gaia","title":"5.1. cGaia"},{"location":"general/xs/constants/#52-cbritons","text":"Value: int 1 This is the civilization ID of Britons","title":"5.2. cBritons"},{"location":"general/xs/constants/#53-cfranks","text":"Value: int 2 This is the civilization ID of Franks","title":"5.3. cFranks"},{"location":"general/xs/constants/#54-cgoths","text":"Value: int 3 This is the civilization ID of Goths","title":"5.4. cGoths"},{"location":"general/xs/constants/#55-cteutons","text":"Value: int 4 This is the civilization ID of Teutons","title":"5.5. cTeutons"},{"location":"general/xs/constants/#56-cjapanese","text":"Value: int 5 This is the civilization ID of Japanese","title":"5.6. cJapanese"},{"location":"general/xs/constants/#57-cchinese","text":"Value: int 6 This is the civilization ID of Chinese","title":"5.7. cChinese"},{"location":"general/xs/constants/#58-cbyzantines","text":"Value: int 7 This is the civilization ID of Byzantines","title":"5.8. cByzantines"},{"location":"general/xs/constants/#59-cpersians","text":"Value: int 8 This is the civilization ID of Persians","title":"5.9. cPersians"},{"location":"general/xs/constants/#510-csaracens","text":"Value: int 9 This is the civilization ID of Saracens","title":"5.10. cSaracens"},{"location":"general/xs/constants/#511-cturks","text":"Value: int 10 This is the civilization ID of Turks","title":"5.11. cTurks"},{"location":"general/xs/constants/#512-cvikings","text":"Value: int 11 This is the civilization ID of Vikings","title":"5.12. cVikings"},{"location":"general/xs/constants/#513-cmongols","text":"Value: int 12 This is the civilization ID of Mongols","title":"5.13. cMongols"},{"location":"general/xs/constants/#514-ccelts","text":"Value: int 13 This is the civilization ID of Celts","title":"5.14. cCelts"},{"location":"general/xs/constants/#515-cspanish","text":"Value: int 14 This is the civilization ID of Spanish","title":"5.15. cSpanish"},{"location":"general/xs/constants/#516-caztecs","text":"Value: int 15 This is the civilization ID of Aztecs","title":"5.16. cAztecs"},{"location":"general/xs/constants/#517-cmayans","text":"Value: int 16 This is the civilization ID of Mayans","title":"5.17. cMayans"},{"location":"general/xs/constants/#518-chuns","text":"Value: int 17 This is the civilization ID of Huns","title":"5.18. cHuns"},{"location":"general/xs/constants/#519-ckoreans","text":"Value: int 18 This is the civilization ID of Koreans","title":"5.19. cKoreans"},{"location":"general/xs/constants/#520-citalians","text":"Value: int 19 This is the civilization ID of Italians","title":"5.20. cItalians"},{"location":"general/xs/constants/#521-cindians","text":"Value: int 20 This is the civilization ID of Indians","title":"5.21. cIndians"},{"location":"general/xs/constants/#522-cincas","text":"Value: int 21 This is the civilization ID of Incas","title":"5.22. cIncas"},{"location":"general/xs/constants/#523-cmagyars","text":"Value: int 22 This is the civilization ID of Magyars","title":"5.23. cMagyars"},{"location":"general/xs/constants/#524-cslavs","text":"Value: int 23 This is the civilization ID of Slavs","title":"5.24. cSlavs"},{"location":"general/xs/constants/#525-cportuguese","text":"Value: int 24 This is the civilization ID of Portuguese","title":"5.25. cPortuguese"},{"location":"general/xs/constants/#526-cethiopians","text":"Value: int 25 This is the civilization ID of Ethiopians","title":"5.26. cEthiopians"},{"location":"general/xs/constants/#527-cmalians","text":"Value: int 26 This is the civilization ID of Malians","title":"5.27. cMalians"},{"location":"general/xs/constants/#528-cberbers","text":"Value: int 27 This is the civilization ID of Berbers","title":"5.28. cBerbers"},{"location":"general/xs/constants/#529-ckhmer","text":"Value: int 28 This is the civilization ID of Khmer","title":"5.29. cKhmer"},{"location":"general/xs/constants/#530-cmalay","text":"Value: int 29 This is the civilization ID of Malay","title":"5.30. cMalay"},{"location":"general/xs/constants/#531-cburmese","text":"Value: int 30 This is the civilization ID of Burmese","title":"5.31. cBurmese"},{"location":"general/xs/constants/#532-cvietnamese","text":"Value: int 31 This is the civilization ID of Vietnamese","title":"5.32. cVietnamese"},{"location":"general/xs/constants/#533-cbulgarians","text":"Value: int 32 This is the civilization ID of Bulgarians","title":"5.33. cBulgarians"},{"location":"general/xs/constants/#534-ctatars","text":"Value: int 33 This is the civilization ID of Tatars","title":"5.34. cTatars"},{"location":"general/xs/constants/#535-ccumans","text":"Value: int 34 This is the civilization ID of Cumans","title":"5.35. cCumans"},{"location":"general/xs/constants/#536-clithuanians","text":"Value: int 35 This is the civilization ID of Lithuanians","title":"5.36. cLithuanians"},{"location":"general/xs/constants/#537-cburgundians","text":"Value: int 36 This is the civilization ID of Burgundians","title":"5.37. cBurgundians"},{"location":"general/xs/constants/#538-csicilians","text":"Value: int 37 This is the civilization ID of Sicilians","title":"5.38. cSicilians"},{"location":"general/xs/constants/#539-cpoles","text":"Value: int 38 This is the civilization ID of Poles","title":"5.39. cPoles"},{"location":"general/xs/constants/#540-cbohemians","text":"Value: int 39 This is the civilization ID of Bohemians","title":"5.40. cBohemians"},{"location":"general/xs/constants/#541-cdravidians","text":"Value: int 40 This is the civilization ID of Dravidians","title":"5.41. cDravidians"},{"location":"general/xs/constants/#542-cbengalis","text":"Value: int 41 This is the civilization ID of Bengalis","title":"5.42. cBengalis"},{"location":"general/xs/constants/#543-cgurjaras","text":"Value: int 42 This is the civilization ID of Gurjaras","title":"5.43. cGurjaras"},{"location":"general/xs/constants/#6-effectamount-effect-type","text":"","title":"6. EffectAmount Effect Type"},{"location":"general/xs/constants/#61-csetattribute","text":"Value: int 0 This is the ID of the Set Attribute effect of the xsEffectAmount function Syntax: xsEffectAmount ( cSetAttribute , unitID , attributeID , value ) Example: xsEffectAmount ( cSetAttribute , 74 , cHitpoints , 100 ) This sets the HP of unit 74 (militia) to 100 (the value). Alternatively, any of the Unit Attribute Constants may be used to modify the corresponding unit property","title":"6.1. cSetAttribute"},{"location":"general/xs/constants/#62-cmodresource","text":"Value: int 1 This is the ID of the Modify Resource effect for the xsEffectAmount function Syntax: xsEffectAmount ( cModResource , resourceID , operation , value ) Example: xsEffectAmount ( cModResource , cAttributeFood , cAttributeAdd , 100 ) This adds 100 to the current food amount. Alternatively, cAttributeSet may be used to set the food amount to 100. Also, see the Resource","title":"6.2. cModResource"},{"location":"general/xs/constants/#63-cenableobject","text":"Value: int 2 This is the ID of the Enable (or disable) Object effect for the xsEffectAmount function Syntax: xsEffectAmount ( cEnableObject , unitID , enableOrDisable , 0 ) Example: xsEffectAmount ( cEnableObject , 74 , cAttributeDisable , 0 ) This disables the unit 74 (militia). Alternatively, cAttributeEnable may be used to enable an object instead","title":"6.3. cEnableObject"},{"location":"general/xs/constants/#64-cupgradeunit","text":"Value: int 3 This is the ID of the Upgrade Unit effect for the xsEffectAmount function Syntax: xsEffectAmount ( cUpgradeUnit , oldUnitID , newUnitID , 0 ) Example: xsEffectAmount ( cUpgradeUnit , 74 , 75 , 0 ) This copies all units attributes except ID and available from unit 75 (man at arms) to 74 (militia)","title":"6.4. cUpgradeUnit"},{"location":"general/xs/constants/#65-caddattribute","text":"Value: int 4 This is the ID of the Add Attribute effect for the xsEffectAmount function Syntax: xsEffectAmount ( cAddAttribute , unitID , attributeID , value ) Example: xsEffectAmount ( cAddAttribute , 74 , 0 , 100 ) This adds 100 (the value) to the attribute 0 (HP) of unit 74 (militia)","title":"6.5. cAddAttribute"},{"location":"general/xs/constants/#66-cmulattribute","text":"Value: int 5 This is the ID of the Multiply Attribute effect for the xsEffectAmount function Syntax: xsEffectAmount ( cMulAttribute , unitID , attributeID , value ) Example: xsEffectAmount ( cMulAttribute , 74 , 0 , 100 ) This multiplies the attribute 0 (HP) of unit 74 (militia) by 100 (the value)","title":"6.6. cMulAttribute"},{"location":"general/xs/constants/#67-cmulresource","text":"Value: int 6 This is the ID of the Multiply Resource effect for the xsEffectAmount function Syntax: xsEffectAmount ( cMulResource , resourceID , 0 , value ) Example: xsEffectAmount ( cMulResource , cAttributeFood , 0 , 10 ) This multiplies the food amount by 10 (the value)","title":"6.7. cMulResource"},{"location":"general/xs/constants/#68-cenabletech","text":"Value: int 7 This is the ID of the Enable (or disable) Technology effect for the xsEffectAmount function Syntax: xsEffectAmount ( cEnableTech , techID , enableOrDisable , 0 ) Example: xsEffectAmount ( cEnableTech , 6 , cAttributeEnable , 0 ) This enables the tech 6 (Drill). Alternatively, cAttributeDisable may be used to disable the tech instead","title":"6.8. cEnableTech"},{"location":"general/xs/constants/#69-cmodifytech","text":"Value: int 8 This is the ID of the Modify Technology effect for the xsEffectAmount function Syntax: xsEffectAmount ( cModifyTech , techID , techAttribute , value ) Example: xsEffectAmount ( cModifyTech , 22 , cAttrSetTime , 10 ) This sets the research time of tech 22 (loom) to 10s (the value). Alternatively, any of the Tech Attribute Constants may be used to modify the corresponding tech property","title":"6.9. cModifyTech"},{"location":"general/xs/constants/#610-csetplayerdata","text":"Value: int 9 This is the ID of the Set Player Data effect for the xsEffectAmount function Syntax: xsEffectAmount ( cSetPlayerData , 0 , cAttributeSet , value ) Example: xsEffectAmount ( cSetPlayerData , 0 , cAttributeSet , 10230 ) This sets the player data 0 (Civilization Name ID) to 10230 (the value)","title":"6.10. cSetPlayerData"},{"location":"general/xs/constants/#611-csettechcost","text":"Value: int 100 This is the ID of the Set Technology Cost effect for the xsEffectAmount function Syntax: xsEffectAmount ( cSetTechCost , techID , resourceID , value ) Example: xsEffectAmount ( cSetTechCost , 22 , cAttributeFood , 10 ) This sets the food cost of tech 22 (loom) to 10 (the value)","title":"6.11. cSetTechCost"},{"location":"general/xs/constants/#612-caddtechcost","text":"Value: int 101 This is the ID of the Add Technology Cost effect for the xsEffectAmount function Syntax: xsEffectAmount ( cAddTechCost , techID , resourceID , value ) Example: xsEffectAmount ( cAddTechCost , 22 , cAttributeFood , 10 ) This adds 10 (the) to the current food cost of tech 22 (loom)","title":"6.12. cAddTechCost"},{"location":"general/xs/constants/#613-cdisabletech","text":"Value: int 102 This is the ID of the Disable Tech effect for the xsEffectAmount function Syntax: xsEffectAmount ( cDisableTech , techID , 0 , 0 ) Example: xsEffectAmount ( cDisableTech , 22 , 0 , 0 ) This disables the tech 22 (loom)","title":"6.13. cDisableTech"},{"location":"general/xs/constants/#614-cmodtechtime","text":"Value: int 103 This is the ID of the Modify Technology Time effect for the xsEffectAmount function Syntax: xsEffectAmount ( cModTechTime , techID , operation , value ) Example: xsEffectAmount ( cModTechTime , 22 , cAttributeSet , 10 ) This sets the research time of tech 22 (loom) to 10s (the value). Alternatively, cAttributeAdd may be used to add to the current research time of the technology","title":"6.14. cModTechTime"},{"location":"general/xs/constants/#615-cgaiasetattribute","text":"Value: int -1 This is the ID of the Gaia Set Attribute effect of the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaSetAttribute , unitID , attributeID , value ) Example: xsEffectAmount ( cGaiaSetAttribute , 74 , 0 , 100 ) This sets the attribute 0 (HP) of unit 74 (militia) to 100 (the value)","title":"6.15. cGaiaSetAttribute"},{"location":"general/xs/constants/#616-cgaiamodresource","text":"Value: int -2 This is the ID of the Gaia Modify Resource effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaModResource , resourceID , operation , value ) Example: xsEffectAmount ( cGaiaModResource , cAttributeFood , cAttributeAdd , 100 ) This adds 100 to the current food amount. Alternatively, cAttributeSet may be used to set the food amount to 100","title":"6.16. cGaiaModResource"},{"location":"general/xs/constants/#617-cgaiaenableobject","text":"Value: int -3 This is the ID of the Gaia Enable (or disable) Object effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaEnableObject , unitID , enableOrDisable , 0 ) Example: xsEffectAmount ( cGaiaEnableObject , 74 , cAttributeDisable , 0 ) This disables the unit 74 (militia). Alternatively, cAttributeEnable may be used to enable an object instead","title":"6.17. cGaiaEnableObject"},{"location":"general/xs/constants/#618-cgaiaupgradeunit","text":"Value: int -4 This is the ID of the Gaia Upgrade Unit effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaUpgradeUnit , oldUnitID , newUnitID , 0 ) Example: xsEffectAmount ( cGaiaUpgradeUnit , 74 , 75 , 0 ) This replaces all units 74 (militia) with 75 (man at arms) on the map and also disables unit 74 and enables unit 75","title":"6.18. cGaiaUpgradeUnit"},{"location":"general/xs/constants/#619-cgaiaaddattribute","text":"Value: int -5 This is the ID of the Gaia Add Attribute effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaAddAttribute , unitID , attributeID , value ) Example: xsEffectAmount ( cGaiaAddAttribute , 74 , 0 , 100 ) This adds 100 (the value) to the attribute 0 (HP) of unit 74 (militia)","title":"6.19. cGaiaAddAttribute"},{"location":"general/xs/constants/#620-cgaiamulattribute","text":"Value: int -6 This is the ID of the Gaia Multiply Attribute effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaMulAttribute , unitID , attributeID , value ) Example: xsEffectAmount ( cGaiaMulAttribute , 74 , 0 , 100 ) This multiplies the attribute 0 (HP) of unit 74 (militia) by 100 (the value)","title":"6.20. cGaiaMulAttribute"},{"location":"general/xs/constants/#621-cgaiamulresource","text":"Value: int -7 This is the ID of the Gaia Multiply Resource effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaMulResource , resourceID , 0 , value ) Example: xsEffectAmount ( cGaiaMulResource , cAttributeFood , 0 , 10 ) This multiplies the food amount by 10 (the value)","title":"6.21. cGaiaMulResource"},{"location":"general/xs/constants/#622-cgaiaenabletech","text":"Value: int -8 This is the ID of the Gaia Enable (or disable) Technology effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaEnableTech , techID , enableOrDisable , 0 ) Example: xsEffectAmount ( cGaiaEnableTech , 6 , cAttributeEnable , 0 ) This enables the tech 6 (Drill). Alternatively, cAttributeDisable may be used to disable the tech instead","title":"6.22. cGaiaEnableTech"},{"location":"general/xs/constants/#623-cgaiamodifytech","text":"Value: int -9 This is the ID of the Gaia Modify Technology effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaModifyTech , techID , techAttribute , value ) Example: xsEffectAmount ( cGaiaModifyTech , 22 , cAttrSetTime , 10 ) This sets the research time of tech 22 (loom) to 10s (the value). Alternatively, any of the Tech Attribute Constants may be used to modify the corresponding tech property","title":"6.23. cGaiaModifyTech"},{"location":"general/xs/constants/#624-cgaiasetplayerdata","text":"Value: int -10 This is the ID of the Gaia Set Player Data effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaSetPlayerData , 0 , cAttributeSet , value ) Example: xsEffectAmount ( cGaiaSetPlayerData , 0 , cAttributeSet , 10230 ) This sets the player data 0 (Civilization Name ID) to 10230 (the value)","title":"6.24. cGaiaSetPlayerData"},{"location":"general/xs/constants/#625-cgaiasettechcost","text":"Value: int -101 This is the ID of the Gaia Set Technology Cost effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaSetTechCost , techID , resourceID , value ) Example: xsEffectAmount ( cGaiaSetTechCost , 22 , cAttributeFood , 10 ) This sets the food cost of tech 22 (loom) to 10 (the value)","title":"6.25. cGaiaSetTechCost"},{"location":"general/xs/constants/#626-cgaiaaddtechcost","text":"Value: int -102 This is the ID of the Gaia Add Technology Cost effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaAddTechCost , techID , resourceID , value ) Example: xsEffectAmount ( cGaiaAddTechCost , 22 , cAttributeFood , 10 ) This adds 10 (the) to the current food cost of tech 22 (loom)","title":"6.26. cGaiaAddTechCost"},{"location":"general/xs/constants/#627-cgaiadisabletech","text":"Value: int -103 This is the ID of the Gaia Disable Tech effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaDisableTech , techID , 0 , 0 ) Example: xsEffectAmount ( cGaiaDisableTech , 22 , 0 , 0 ) This disables the tech 22 (loom)","title":"6.27. cGaiaDisableTech"},{"location":"general/xs/constants/#628-cgaiamodtechtime","text":"Value: int -104 This is the ID of the Gaia Modify Technology Time effect for the xsEffectAmount function Syntax: xsEffectAmount ( cGaiaModTechTime , techID , operation , value ) Example: xsEffectAmount ( cGaiaModTechTime , 22 , cAttributeSet , 10 ) This sets the research time of tech 22 (loom) to 10s (the value). Alternatively, cAttributeAdd may be used to add to the current research time of the technology","title":"6.28. cGaiaModTechTime"},{"location":"general/xs/constants/#7-effectamount-effect-operations","text":"","title":"7. EffectAmount Effect Operations"},{"location":"general/xs/constants/#71-cattributedisable","text":"Value: int 0 This is the ID of the Attribute Disbale modifier for the xsEffectAmount function","title":"7.1. cAttributeDisable"},{"location":"general/xs/constants/#72-cattributeenable","text":"Value: int 1 This is the ID of the Attribute Enable modifier for the xsEffectAmount function","title":"7.2. cAttributeEnable"},{"location":"general/xs/constants/#73-cattributeforce","text":"Value: int 2 This is the ID of the Attribute Force modifier for the xsEffectAmount function","title":"7.3. cAttributeForce"},{"location":"general/xs/constants/#74-cattributeset","text":"Value: int 0 This is the ID of the Attribute Set modifier for the xsEffectAmount function","title":"7.4. cAttributeSet"},{"location":"general/xs/constants/#75-cattributeadd","text":"Value: int 1 This is the ID of the Attribute Add modifier for the xsEffectAmount function","title":"7.5. cAttributeAdd"},{"location":"general/xs/constants/#8-effectamount-technology-attribute","text":"","title":"8. EffectAmount Technology Attribute"},{"location":"general/xs/constants/#81-cattrsettime","text":"Value: int -1 This is the ID of the Attribute Set Time modifier for the xsEffectAmount function","title":"8.1. cAttrSetTime"},{"location":"general/xs/constants/#82-cattraddtime","text":"Value: int -2 This is the ID of the Attribute Add Time modifier for the xsEffectAmount function","title":"8.2. cAttrAddTime"},{"location":"general/xs/constants/#83-cattrsetfoodcost","text":"Value: int 0 This is the ID of the Attribute Set Food Cost modifier for the xsEffectAmount function","title":"8.3. cAttrSetFoodCost"},{"location":"general/xs/constants/#84-cattrsetwoodcost","text":"Value: int 1 This is the ID of the Attribute Set Wood Cost modifier for the xsEffectAmount function","title":"8.4. cAttrSetWoodCost"},{"location":"general/xs/constants/#85-cattrsetstonecost","text":"Value: int 2 This is the ID of the Attribute Set Stone Cost modifier for the xsEffectAmount function","title":"8.5. cAttrSetStoneCost"},{"location":"general/xs/constants/#86-cattrsetgoldcost","text":"Value: int 3 This is the ID of the Attribute Set Gold Cost modifier for the xsEffectAmount function","title":"8.6. cAttrSetGoldCost"},{"location":"general/xs/constants/#87-cattraddfoodcost","text":"Value: int 16384 This is the ID of the Attribute Add Food Cost modifier for the xsEffectAmount function","title":"8.7. cAttrAddFoodCost"},{"location":"general/xs/constants/#88-cattraddwoodcost","text":"Value: int 16385 This is the ID of the Attribute Add Wood Cost modifier for the xsEffectAmount function","title":"8.8. cAttrAddWoodCost"},{"location":"general/xs/constants/#89-cattraddstonecost","text":"Value: int 16386 This is the ID of the Attribute Add Stone Cost modifier for the xsEffectAmount function","title":"8.9. cAttrAddStoneCost"},{"location":"general/xs/constants/#810-cattraddgoldcost","text":"Value: int 16387 This is the ID of the Attribute Add Gold Cost modifier for the xsEffectAmount function","title":"8.10. cAttrAddGoldCost"},{"location":"general/xs/constants/#811-cattrsetlocation","text":"Value: int 4 This is the ID of the Attribute Set Tech Location modifier for the xsEffectAmount function","title":"8.11. cAttrSetLocation"},{"location":"general/xs/constants/#812-cattrsetbutton","text":"Value: int 5 This is the ID of the Attribute Set Tech Button modifier for the xsEffectAmount function","title":"8.12. cAttrSetButton"},{"location":"general/xs/constants/#813-cattrseticon","text":"Value: int 6 This is the ID of the Attribute Set Tech Icon modifier for the xsEffectAmount function","title":"8.13. cAttrSetIcon"},{"location":"general/xs/constants/#814-cattrsetname","text":"Value: int 7 This is the ID of the Attribute Set Tech Name modifier for the xsEffectAmount function","title":"8.14. cAttrSetName"},{"location":"general/xs/constants/#815-cattrsetdescription","text":"Value: int 8 This is the ID of the Attribute Set Tech Description modifier for the xsEffectAmount function","title":"8.15. cAttrSetDescription"},{"location":"general/xs/constants/#816-cattrsetstacking","text":"Value: int 9 This is the ID of the Attribute Set Tech Stacking modifier for the xsEffectAmount function","title":"8.16. cAttrSetStacking"},{"location":"general/xs/constants/#817-cattrsetstackingresearchcap","text":"Value: int 10 This is the ID of the Attribute Set Stacking Research Cap modifier for the xsEffectAmount function","title":"8.17. cAttrSetStackingResearchCap"},{"location":"general/xs/constants/#818-cattrsethotkey","text":"Value: int 11 This is the ID of the Attribute Set Hotkey modifier for the xsEffectAmount function","title":"8.18. cAttrSetHotkey"},{"location":"general/xs/constants/#9-effectamount-unit-attribute","text":"","title":"9. EffectAmount Unit Attribute"},{"location":"general/xs/constants/#91-chitpoints","text":"Value: int 0 This is the attribute Hit Points","title":"9.1. cHitpoints"},{"location":"general/xs/constants/#92-clineofsight","text":"Value: int 1 This is the attribute Line of Sight","title":"9.2. cLineOfSight"},{"location":"general/xs/constants/#93-cgarrisoncapacity","text":"Value: int 2 This is the attribute Garrison Capacity","title":"9.3. cGarrisonCapacity"},{"location":"general/xs/constants/#94-cunitsizex","text":"Value: int 3 This is the attribute Unit Size X","title":"9.4. cUnitSizeX"},{"location":"general/xs/constants/#95-cunitsizey","text":"Value: int 4 This is the attribute Unit Size Y","title":"9.5. cUnitSizeY"},{"location":"general/xs/constants/#96-cmovementspeed","text":"Value: int 5 This is the attribute Movement Speed","title":"9.6. cMovementSpeed"},{"location":"general/xs/constants/#97-crotationspeed","text":"Value: int 6 This is the attribute Rotation Speed","title":"9.7. cRotationSpeed"},{"location":"general/xs/constants/#98-carmor","text":"Value: int 8 This is the attribute Armor","title":"9.8. cArmor"},{"location":"general/xs/constants/#99-cattack","text":"Value: int 9 This is the attribute Attack","title":"9.9. cAttack"},{"location":"general/xs/constants/#910-cattackreloadtime","text":"Value: int 10 This is the attribute Attack Reload Time","title":"9.10. cAttackReloadTime"},{"location":"general/xs/constants/#911-caccuracypercent","text":"Value: int 11 This is the attribute Accuracy Percent","title":"9.11. cAccuracyPercent"},{"location":"general/xs/constants/#912-cmaxrange","text":"Value: int 12 This is the attribute Max Range","title":"9.12. cMaxRange"},{"location":"general/xs/constants/#913-cworkrate","text":"Value: int 13 This is the attribute Work Rate","title":"9.13. cWorkRate"},{"location":"general/xs/constants/#914-ccarrycapacity","text":"Value: int 14 This is the attribute Carry Capacity","title":"9.14. cCarryCapacity"},{"location":"general/xs/constants/#915-cbasearmor","text":"Value: int 15 This is the attribute Base Armor","title":"9.15. cBaseArmor"},{"location":"general/xs/constants/#916-cprojectileunit","text":"Value: int 16 This is the attribute Projectile Unit","title":"9.16. cProjectileUnit"},{"location":"general/xs/constants/#917-cicongraphicsangle","text":"Value: int 17 This is the attribute Building Icon Override","title":"9.17. cIconGraphicsAngle"},{"location":"general/xs/constants/#918-cterraindefensebonus","text":"Value: int 18 This is the attribute Terrain Defense Bonus","title":"9.18. cTerrainDefenseBonus"},{"location":"general/xs/constants/#919-cenablesmartprojectile","text":"Value: int 19 This is the attribute Projectile Smart Mode","title":"9.19. cEnableSmartProjectile"},{"location":"general/xs/constants/#920-cminimumrange","text":"Value: int 20 This is the attribute Minimum Range","title":"9.20. cMinimumRange"},{"location":"general/xs/constants/#921-camountfirststorage","text":"Value: int 21 This is the attribute Amount of 1 st Resource Storage","title":"9.21. cAmountFirstStorage"},{"location":"general/xs/constants/#922-cblastwidth","text":"Value: int 22 This is the attribute Blast Width","title":"9.22. cBlastWidth"},{"location":"general/xs/constants/#923-csearchradius","text":"Value: int 23 This is the attribute Search Radius","title":"9.23. cSearchRadius"},{"location":"general/xs/constants/#924-cbonusresistance","text":"Value: int 24 This is the attribute Bonus Damage Resistance","title":"9.24. cBonusResistance"},{"location":"general/xs/constants/#925-ciconid","text":"Value: int 25 This is the attribute Icon ID","title":"9.25. cIconId"},{"location":"general/xs/constants/#926-camountsecondstorage","text":"Value: int 26 This is the attribute Amount of 2 nd Resource Storage","title":"9.26. cAmountSecondStorage"},{"location":"general/xs/constants/#927-camountthirdstorage","text":"Value: int 27 This is the attribute Amount of 3 rd Resource Storage","title":"9.27. cAmountThirdStorage"},{"location":"general/xs/constants/#928-cfogflag","text":"Value: int 28 This is the attribute Fog Visibility","title":"9.28. cFogFlag"},{"location":"general/xs/constants/#929-cocclusionmode","text":"Value: int 29 This is the attribute Occlusion Mode","title":"9.29. cOcclusionMode"},{"location":"general/xs/constants/#930-cgarrisontype","text":"Value: int 30 This is the attribute Garrison Type","title":"9.30. cGarrisonType"},{"location":"general/xs/constants/#931-cunitsizez","text":"Value: int 32 This is the attribute Unit Size Z","title":"9.31. cUnitSizeZ"},{"location":"general/xs/constants/#932-cherostatus","text":"Value: int 40 This is the attribute Hero Status","title":"9.32. cHeroStatus"},{"location":"general/xs/constants/#933-cattackdelay","text":"Value: int 41 This is the attribute Frame Delay","title":"9.33. cAttackDelay"},{"location":"general/xs/constants/#934-ctrainlocation","text":"Value: int 42 This is the attribute Train Location","title":"9.34. cTrainLocation"},{"location":"general/xs/constants/#935-ctrainbutton","text":"Value: int 43 This is the attribute Train Button","title":"9.35. cTrainButton"},{"location":"general/xs/constants/#936-cblastattacklevel","text":"Value: int 44 This is the attribute Blast Attack Level","title":"9.36. cBlastAttackLevel"},{"location":"general/xs/constants/#937-cblastdefenselevel","text":"Value: int 45 This is the attribute Blast Defense Level","title":"9.37. cBlastDefenseLevel"},{"location":"general/xs/constants/#938-cshownattack","text":"Value: int 46 This is the attribute Shown Attack","title":"9.38. cShownAttack"},{"location":"general/xs/constants/#939-cshownrange","text":"Value: int 47 This is the attribute Shown Range","title":"9.39. cShownRange"},{"location":"general/xs/constants/#940-cshownmeleearmor","text":"Value: int 48 This is the attribute Shown Melee Armor","title":"9.40. cShownMeleeArmor"},{"location":"general/xs/constants/#941-cshownpiercearmor","text":"Value: int 49 This is the attribute Shown Pierce Armor","title":"9.41. cShownPierceArmor"},{"location":"general/xs/constants/#942-cnameid","text":"Value: int 50 This is the attribute Object Name ID","title":"9.42. cNameId"},{"location":"general/xs/constants/#943-cdescriptionid","text":"Value: int 51 This is the attribute Short Description ID","title":"9.43. cDescriptionId"},{"location":"general/xs/constants/#944-cterraintable","text":"Value: int 53 This is the attribute Terrain Restriction ID","title":"9.44. cTerrainTable"},{"location":"general/xs/constants/#945-ctraits","text":"Value: int 54 This is the attribute Unit Trait","title":"9.45. cTraits"},{"location":"general/xs/constants/#946-ctraitpiece","text":"Value: int 56 This is the attribute Trait Piece","title":"9.46. cTraitPiece"},{"location":"general/xs/constants/#947-cdeadunitid","text":"Value: int 57 This is the attribute Dead Unit ID","title":"9.47. cDeadUnitId"},{"location":"general/xs/constants/#948-chotkeyid","text":"Value: int 58 This is the attribute Hotkey ID","title":"9.48. cHotkeyId"},{"location":"general/xs/constants/#949-cmaxcharge","text":"Value: int 59 This is the attribute Maximum Charge","title":"9.49. cMaxCharge"},{"location":"general/xs/constants/#950-crechargerate","text":"Value: int 60 This is the attribute Recharge Rate","title":"9.50. cRechargeRate"},{"location":"general/xs/constants/#951-cchargeevent","text":"Value: int 61 This is the attribute Charge Event","title":"9.51. cChargeEvent"},{"location":"general/xs/constants/#952-cchargetype","text":"Value: int 62 This is the attribute Charge Type","title":"9.52. cChargeType"},{"location":"general/xs/constants/#953-ccombatability","text":"Value: int 63 This is the attribute Combat Ability","title":"9.53. cCombatAbility"},{"location":"general/xs/constants/#954-cattackdispersion","text":"Value: int 64 This is the attribute Attack Dispersion","title":"9.54. cAttackDispersion"},{"location":"general/xs/constants/#955-csecondaryprojectileunit","text":"Value: int 65 This is the attribute Secondary Projectile Unit","title":"9.55. cSecondaryProjectileUnit"},{"location":"general/xs/constants/#956-cbloodunitid","text":"Value: int 66 This is the attribute Blood Unit","title":"9.56. cBloodUnitId"},{"location":"general/xs/constants/#957-chitmode","text":"Value: int 67 This is the attribute Projectile Hit Mode","title":"9.57. cHitMode"},{"location":"general/xs/constants/#958-cvanishmode","text":"Value: int 68 This is the attribute Projectile Vanish Mode","title":"9.58. cVanishMode"},{"location":"general/xs/constants/#959-cprojectilearc","text":"Value: int 69 This is the attribute Projectile Arc","title":"9.59. cProjectileArc"},{"location":"general/xs/constants/#960-cresourcecost","text":"Value: int 100 This is the attribute Resource Costs","title":"9.60. cResourceCost"},{"location":"general/xs/constants/#961-ctraintime","text":"Value: int 101 This is the attribute Train Time","title":"9.61. cTrainTime"},{"location":"general/xs/constants/#962-ctotalprojectiles","text":"Value: int 102 This is the attribute Total Missiles","title":"9.62. cTotalProjectiles"},{"location":"general/xs/constants/#963-cfoodcost","text":"Value: int 103 This is the attribute Food Costs","title":"9.63. cFoodCost"},{"location":"general/xs/constants/#964-cwoodcost","text":"Value: int 104 This is the attribute Wood Costs","title":"9.64. cWoodCost"},{"location":"general/xs/constants/#965-cgoldcost","text":"Value: int 105 This is the attribute Gold Costs","title":"9.65. cGoldCost"},{"location":"general/xs/constants/#966-cstonecost","text":"Value: int 106 This is the attribute Stone Costs","title":"9.66. cStoneCost"},{"location":"general/xs/constants/#967-cmaxtotalprojectiles","text":"Value: int 107 This is the attribute Max Total Missiles","title":"9.67. cMaxTotalProjectiles"},{"location":"general/xs/constants/#968-cgarrisonhealrate","text":"Value: int 108 This is the attribute Garrison Heal Rate","title":"9.68. cGarrisonHealRate"},{"location":"general/xs/constants/#969-cregenerationrate","text":"Value: int 109 This is the attribute Regeneration Rate","title":"9.69. cRegenerationRate"},{"location":"general/xs/constants/#970-cpopulation","text":"Value: int 110 This is the attribute Population","title":"9.70. cPopulation"},{"location":"general/xs/constants/#10-effectamount-object-class","text":"","title":"10. EffectAmount Object Class"},{"location":"general/xs/constants/#101-carcherclass","text":"Value: int 900 This is the ID used to target the Archer Class","title":"10.1. cArcherClass"},{"location":"general/xs/constants/#102-cartifactclass","text":"Value: int 901 This is the ID used to target the Artifact Class","title":"10.2. cArtifactClass"},{"location":"general/xs/constants/#103-ctradeboatclass","text":"Value: int 902 This is the ID used to target the Trade Boat Class","title":"10.3. cTradeBoatClass"},{"location":"general/xs/constants/#104-cbuildingclass","text":"Value: int 903 This is the ID used to target the Building Class","title":"10.4. cBuildingClass"},{"location":"general/xs/constants/#105-cvillagerclass","text":"Value: int 904 This is the ID used to target the Villager Class","title":"10.5. cVillagerClass"},{"location":"general/xs/constants/#106-cseafishclass","text":"Value: int 905 This is the ID used to target the Sea Fish Class","title":"10.6. cSeaFishClass"},{"location":"general/xs/constants/#107-cinfantryclass","text":"Value: int 906 This is the ID used to target the Infantry Class","title":"10.7. cInfantryClass"},{"location":"general/xs/constants/#108-cforagebushclass","text":"Value: int 907 This is the ID used to target the Forage Bush Class","title":"10.8. cForageBushClass"},{"location":"general/xs/constants/#109-cstonemineclass","text":"Value: int 908 This is the ID used to target the Stone Mine Class","title":"10.9. cStoneMineClass"},{"location":"general/xs/constants/#1010-cpreyanimalclass","text":"Value: int 909 This is the ID used to target the Prey Animal Class","title":"10.10. cPreyAnimalClass"},{"location":"general/xs/constants/#1011-cpredatoranimalclass","text":"Value: int 910 This is the ID used to target the Predator Animal Class","title":"10.11. cPredatorAnimalClass"},{"location":"general/xs/constants/#1012-cmiscellaneousclass","text":"Value: int 911 This is the ID used to target the Miscellaneous Class","title":"10.12. cMiscellaneousClass"},{"location":"general/xs/constants/#1013-ccavalryclass","text":"Value: int 912 This is the ID used to target the Cavalry Class","title":"10.13. cCavalryClass"},{"location":"general/xs/constants/#1014-csiegeweaponclass","text":"Value: int 913 This is the ID used to target the Siege Weapon Class","title":"10.14. cSiegeWeaponClass"},{"location":"general/xs/constants/#1015-cterrainclass","text":"Value: int 914 This is the ID used to target the Terrain Class","title":"10.15. cTerrainClass"},{"location":"general/xs/constants/#1016-ctreeclass","text":"Value: int 915 This is the ID used to target the Tree Class","title":"10.16. cTreeClass"},{"location":"general/xs/constants/#1017-ctreestumpclass","text":"Value: int 916 This is the ID used to target the Tree Stump Class","title":"10.17. cTreeStumpClass"},{"location":"general/xs/constants/#1018-chealerclass","text":"Value: int 917 This is the ID used to target the Healer Class","title":"10.18. cHealerClass"},{"location":"general/xs/constants/#1019-cmonkclass","text":"Value: int 918 This is the ID used to target the Monk Class","title":"10.19. cMonkClass"},{"location":"general/xs/constants/#1020-ctradecartclass","text":"Value: int 919 This is the ID used to target the Trade Cart Class","title":"10.20. cTradeCartClass"},{"location":"general/xs/constants/#1021-ctransportshipclass","text":"Value: int 920 This is the ID used to target the Transport Ship Class","title":"10.21. cTransportShipClass"},{"location":"general/xs/constants/#1022-cfishingboatclass","text":"Value: int 921 This is the ID used to target the Fishing Boat Class","title":"10.22. cFishingBoatClass"},{"location":"general/xs/constants/#1023-cwarshipclass","text":"Value: int 922 This is the ID used to target the Warship Class","title":"10.23. cWarshipClass"},{"location":"general/xs/constants/#1024-cconquistadorclass","text":"Value: int 923 This is the ID used to target the Conquistador Class","title":"10.24. cConquistadorClass"},{"location":"general/xs/constants/#1025-cwarelephantclass","text":"Value: int 924 This is the ID used to target the War Elephant Class","title":"10.25. cWarElephantClass"},{"location":"general/xs/constants/#1026-cheroclass","text":"Value: int 925 This is the ID used to target the Hero Class","title":"10.26. cHeroClass"},{"location":"general/xs/constants/#1027-celephantarcherclass","text":"Value: int 926 This is the ID used to target the Elephant Archer Class","title":"10.27. cElephantArcherClass"},{"location":"general/xs/constants/#1028-cwallclass","text":"Value: int 927 This is the ID used to target the Wall Class","title":"10.28. cWallClass"},{"location":"general/xs/constants/#1029-cphalanxclass","text":"Value: int 928 This is the ID used to target the Phalanx Class","title":"10.29. cPhalanxClass"},{"location":"general/xs/constants/#1030-cdomesticanimalclass","text":"Value: int 929 This is the ID used to target the Domestic Animal Class","title":"10.30. cDomesticAnimalClass"},{"location":"general/xs/constants/#1031-cflagclass","text":"Value: int 930 This is the ID used to target the Flag Class","title":"10.31. cFlagClass"},{"location":"general/xs/constants/#1032-cdeepseafishclass","text":"Value: int 931 This is the ID used to target the Deep Sea Fish Class","title":"10.32. cDeepSeaFishClass"},{"location":"general/xs/constants/#1033-cgoldmine","text":"Value: int 932 This is the ID used to target the Gold Mine","title":"10.33. cGoldMine"},{"location":"general/xs/constants/#1034-cshorefish","text":"Value: int 933 This is the ID used to target the Shore Fish","title":"10.34. cShoreFish"},{"location":"general/xs/constants/#1035-ccliffclass","text":"Value: int 934 This is the ID used to target the Cliff Class","title":"10.35. cCliffClass"},{"location":"general/xs/constants/#1036-cpetardclass","text":"Value: int 935 This is the ID used to target the Petard Class","title":"10.36. cPetardClass"},{"location":"general/xs/constants/#1037-ccavalryarcherclass","text":"Value: int 936 This is the ID used to target the Cavalry Archer Class","title":"10.37. cCavalryArcherClass"},{"location":"general/xs/constants/#1038-cdoppelgangerclass","text":"Value: int 937 This is the ID used to target the Doppelganger Class","title":"10.38. cDoppelgangerClass"},{"location":"general/xs/constants/#1039-cbirdclass","text":"Value: int 938 This is the ID used to target the Bird Class","title":"10.39. cBirdClass"},{"location":"general/xs/constants/#1040-cgateclass","text":"Value: int 939 This is the ID used to target the Gate Class","title":"10.40. cGateClass"},{"location":"general/xs/constants/#1041-csalvagepileclass","text":"Value: int 940 This is the ID used to target the Salvage Pile Class","title":"10.41. cSalvagePileClass"},{"location":"general/xs/constants/#1042-cresourcepileclass","text":"Value: int 941 This is the ID used to target the Resource Pile Class","title":"10.42. cResourcePileClass"},{"location":"general/xs/constants/#1043-crelicclass","text":"Value: int 942 This is the ID used to target the Relic Class","title":"10.43. cRelicClass"},{"location":"general/xs/constants/#1044-cmonkwithrelicclass","text":"Value: int 943 This is the ID used to target the Monk With Relic Class","title":"10.44. cMonkWithRelicClass"},{"location":"general/xs/constants/#1045-chandcannoneerclass","text":"Value: int 944 This is the ID used to target the Hand Cannoneer Class","title":"10.45. cHandCannoneerClass"},{"location":"general/xs/constants/#1046-ctwohandedswordsmanclass","text":"Value: int 945 This is the ID used to target the Two Handed Swordsman Class","title":"10.46. cTwoHandedSwordsmanClass"},{"location":"general/xs/constants/#1047-cpikemanclass","text":"Value: int 946 This is the ID used to target the Pikeman Class","title":"10.47. cPikemanClass"},{"location":"general/xs/constants/#1048-cscoutcavalryclass","text":"Value: int 947 This is the ID used to target the Scout Cavalry Class","title":"10.48. cScoutCavalryClass"},{"location":"general/xs/constants/#1049-coremineclass","text":"Value: int 948 This is the ID used to target the Ore Mine Class","title":"10.49. cOreMineClass"},{"location":"general/xs/constants/#1050-cfarmclass","text":"Value: int 949 This is the ID used to target the Farm Class","title":"10.50. cFarmClass"},{"location":"general/xs/constants/#1051-cspearmanclass","text":"Value: int 950 This is the ID used to target the Spearman Class","title":"10.51. cSpearmanClass"},{"location":"general/xs/constants/#1052-cpackedunitclass","text":"Value: int 951 This is the ID used to target the Packed Unit Class","title":"10.52. cPackedUnitClass"},{"location":"general/xs/constants/#1053-ctowerclass","text":"Value: int 952 This is the ID used to target the Tower Class","title":"10.53. cTowerClass"},{"location":"general/xs/constants/#1054-cboardingshipclass","text":"Value: int 953 This is the ID used to target the Boarding Ship Class","title":"10.54. cBoardingShipClass"},{"location":"general/xs/constants/#1055-cunpackedsiegeunitclass","text":"Value: int 954 This is the ID used to target the Unpacked Siege Unit Class","title":"10.55. cUnpackedSiegeUnitClass"},{"location":"general/xs/constants/#1056-cscorpionclass","text":"Value: int 955 This is the ID used to target the Scorpion Class","title":"10.56. cScorpionClass"},{"location":"general/xs/constants/#1057-craiderclass","text":"Value: int 956 This is the ID used to target the Raider Class","title":"10.57. cRaiderClass"},{"location":"general/xs/constants/#1058-ccavalryraiderclass","text":"Value: int 957 This is the ID used to target the Cavalry Raider Class","title":"10.58. cCavalryRaiderClass"},{"location":"general/xs/constants/#1059-clivestockclass","text":"Value: int 958 This is the ID used to target the Livestock Class","title":"10.59. cLivestockClass"},{"location":"general/xs/constants/#1060-ckingclass","text":"Value: int 959 This is the ID used to target the King Class","title":"10.60. cKingClass"},{"location":"general/xs/constants/#1061-cmiscbuildingclass","text":"Value: int 960 This is the ID used to target the Misc Building Class","title":"10.61. cMiscBuildingClass"},{"location":"general/xs/constants/#1062-ccontrolledanimalclass","text":"Value: int 961 This is the ID used to target the Controlled Animal Class","title":"10.62. cControlledAnimalClass"},{"location":"general/xs/constants/#11-resource","text":"","title":"11. Resource"},{"location":"general/xs/constants/#111-cattributefood","text":"Value: int 0 ID of the player resource Food. Check here for more info about what this resource does.","title":"11.1. cAttributeFood"},{"location":"general/xs/constants/#112-cattributewood","text":"Value: int 1 ID of the player resource Wood. Check here for more info about what this resource does.","title":"11.2. cAttributeWood"},{"location":"general/xs/constants/#113-cattributestone","text":"Value: int 2 ID of the player resource Stone. Check here for more info about what this resource does.","title":"11.3. cAttributeStone"},{"location":"general/xs/constants/#114-cattributegold","text":"Value: int 3 ID of the player resource Gold. Check here for more info about what this resource does.","title":"11.4. cAttributeGold"},{"location":"general/xs/constants/#115-cattributepopulationcap","text":"Value: int 4 ID of the player resource Population Cap. Check here for more info about what this resource does.","title":"11.5. cAttributePopulationCap"},{"location":"general/xs/constants/#116-cattributereligion","text":"Value: int 5 ID of the player resource Religion. Check here for more info about what this resource does.","title":"11.6. cAttributeReligion"},{"location":"general/xs/constants/#117-cattributecurrentage","text":"Value: int 6 ID of the player resource Current Age. Check here for more info about what this resource does.","title":"11.7. cAttributeCurrentAge"},{"location":"general/xs/constants/#118-cattributerelics","text":"Value: int 7 ID of the player resource Relics. Check here for more info about what this resource does.","title":"11.8. cAttributeRelics"},{"location":"general/xs/constants/#119-cattributetragebonus","text":"Value: int 8 ID of the player resource Trage Bonus. Click here . The name is mispelled in the Constants.xs Check so thats how it needs to be used for more info about what this resource does.","title":"11.9. cAttributeTrageBonus"},{"location":"general/xs/constants/#1110-cattributetradegoods","text":"Value: int 9 ID of the player resource Trade Goods. Check here for more info about what this resource does.","title":"11.10. cAttributeTradeGoods"},{"location":"general/xs/constants/#1111-cattributetradeproducation","text":"Value: int 10 ID of the player resource Trade Producation. Check here for more info about what this resource does.","title":"11.11. cAttributeTradeProducation"},{"location":"general/xs/constants/#1112-cattributepopulation","text":"Value: int 11 ID of the player resource Population. Check here for more info about what this resource does.","title":"11.12. cAttributePopulation"},{"location":"general/xs/constants/#1113-cattributedecay","text":"Value: int 12 ID of the player resource Decay. Check here for more info about what this resource does.","title":"11.13. cAttributeDecay"},{"location":"general/xs/constants/#1114-cattributediscovery","text":"Value: int 13 ID of the player resource Discovery. Check here for more info about what this resource does.","title":"11.14. cAttributeDiscovery"},{"location":"general/xs/constants/#1115-cattributeruins","text":"Value: int 14 ID of the player resource Ruins. Check here for more info about what this resource does.","title":"11.15. cAttributeRuins"},{"location":"general/xs/constants/#1116-cattributemeat","text":"Value: int 15 ID of the player resource Meat. Check here for more info about what this resource does.","title":"11.16. cAttributeMeat"},{"location":"general/xs/constants/#1117-cattributeberries","text":"Value: int 16 ID of the player resource Berries. Check here for more info about what this resource does.","title":"11.17. cAttributeBerries"},{"location":"general/xs/constants/#1118-cattributefish","text":"Value: int 17 ID of the player resource Fish. Check here for more info about what this resource does.","title":"11.18. cAttributeFish"},{"location":"general/xs/constants/#1119-cattributekills","text":"Value: int 20 ID of the player resource Kills. Check here for more info about what this resource does.","title":"11.19. cAttributeKills"},{"location":"general/xs/constants/#1120-cattributeresearchcount","text":"Value: int 21 ID of the player resource Research Count. Check here for more info about what this resource does.","title":"11.20. cAttributeResearchCount"},{"location":"general/xs/constants/#1121-cattributeexploration","text":"Value: int 22 ID of the player resource Exploration. Check here for more info about what this resource does.","title":"11.21. cAttributeExploration"},{"location":"general/xs/constants/#1122-cattributeconvertpriest","text":"Value: int 27 ID of the player resource Convert Priest. Check here for more info about what this resource does.","title":"11.22. cAttributeConvertPriest"},{"location":"general/xs/constants/#1123-cattributeconvertbuilding","text":"Value: int 28 ID of the player resource Convert Building. Check here for more info about what this resource does.","title":"11.23. cAttributeConvertBuilding"},{"location":"general/xs/constants/#1124-cattributebuildinglimit","text":"Value: int 30 ID of the player resource Building Limit. Check here for more info about what this resource does.","title":"11.24. cAttributeBuildingLimit"},{"location":"general/xs/constants/#1125-cattributefoodlimit","text":"Value: int 31 ID of the player resource Food Limit. Check here for more info about what this resource does.","title":"11.25. cAttributeFoodLimit"},{"location":"general/xs/constants/#1126-cattributeunitlimit","text":"Value: int 32 ID of the player resource Unit Limit. Check here for more info about what this resource does.","title":"11.26. cAttributeUnitLimit"},{"location":"general/xs/constants/#1127-cattributemaintenance","text":"Value: int 33 ID of the player resource Maintenance. Check here for more info about what this resource does.","title":"11.27. cAttributeMaintenance"},{"location":"general/xs/constants/#1128-cattributefaith","text":"Value: int 34 ID of the player resource Faith. Check here for more info about what this resource does.","title":"11.28. cAttributeFaith"},{"location":"general/xs/constants/#1129-cattributefaithrechargerate","text":"Value: int 35 ID of the player resource Faith Recharge Rate. Check here for more info about what this resource does.","title":"11.29. cAttributeFaithRechargeRate"},{"location":"general/xs/constants/#1130-cattributefarmfood","text":"Value: int 36 ID of the player resource Farm Food. Check here for more info about what this resource does.","title":"11.30. cAttributeFarmFood"},{"location":"general/xs/constants/#1131-cattributecivilianpopulation","text":"Value: int 37 ID of the player resource Civilian Population. Check here for more info about what this resource does.","title":"11.31. cAttributeCivilianPopulation"},{"location":"general/xs/constants/#1132-cattributealltechsachieved","text":"Value: int 39 ID of the player resource All Techs Achieved. Check here for more info about what this resource does.","title":"11.32. cAttributeAllTechsAchieved"},{"location":"general/xs/constants/#1133-cattributemilitarypopulation","text":"Value: int 40 ID of the player resource Military Population. Check here for more info about what this resource does.","title":"11.33. cAttributeMilitaryPopulation"},{"location":"general/xs/constants/#1134-cattributeconversions","text":"Value: int 41 ID of the player resource Conversions. Check here for more info about what this resource does.","title":"11.34. cAttributeConversions"},{"location":"general/xs/constants/#1135-cattributewonder","text":"Value: int 42 ID of the player resource Wonder. Check here for more info about what this resource does.","title":"11.35. cAttributeWonder"},{"location":"general/xs/constants/#1136-cattributerazings","text":"Value: int 43 ID of the player resource Razings. Check here for more info about what this resource does.","title":"11.36. cAttributeRazings"},{"location":"general/xs/constants/#1137-cattributekillratio","text":"Value: int 44 ID of the player resource Kill Ratio. Check here for more info about what this resource does.","title":"11.37. cAttributeKillRatio"},{"location":"general/xs/constants/#1138-cattributeplayerkilled","text":"Value: int 45 ID of the player resource Player Killed. Check here for more info about what this resource does.","title":"11.38. cAttributePlayerKilled"},{"location":"general/xs/constants/#1139-cattributetributeinefficency","text":"Value: int 46 ID of the player resource Tribute Inefficency. Check here for more info about what this resource does.","title":"11.39. cAttributeTributeInefficency"},{"location":"general/xs/constants/#1140-cattributegoldbonus","text":"Value: int 47 ID of the player resource Gold Bonus. Check here for more info about what this resource does.","title":"11.40. cAttributeGoldBonus"},{"location":"general/xs/constants/#1141-cattributetowncenterunavailable","text":"Value: int 48 ID of the player resource Town Center Unavailable. Check here for more info about what this resource does.","title":"11.41. cAttributeTownCenterUnavailable"},{"location":"general/xs/constants/#1142-cattributegoldcounter","text":"Value: int 49 ID of the player resource Gold Counter. Check here for more info about what this resource does.","title":"11.42. cAttributeGoldCounter"},{"location":"general/xs/constants/#1143-cattributewriting","text":"Value: int 50 ID of the player resource Writing. Check here for more info about what this resource does.","title":"11.43. cAttributeWriting"},{"location":"general/xs/constants/#1144-cattributemonasteries","text":"Value: int 52 ID of the player resource Monasteries. Check here for more info about what this resource does.","title":"11.44. cAttributeMonasteries"},{"location":"general/xs/constants/#1145-cattributetribute","text":"Value: int 53 ID of the player resource Tribute. Check here for more info about what this resource does.","title":"11.45. cAttributeTribute"},{"location":"general/xs/constants/#1146-cattributeholdruins","text":"Value: int 54 ID of the player resource Hold Ruins. Check here for more info about what this resource does.","title":"11.46. cAttributeHoldRuins"},{"location":"general/xs/constants/#1147-cattributeholdrelics","text":"Value: int 55 ID of the player resource Hold Relics. Check here for more info about what this resource does.","title":"11.47. cAttributeHoldRelics"},{"location":"general/xs/constants/#1148-cattributeore","text":"Value: int 56 ID of the player resource Ore. Check here for more info about what this resource does.","title":"11.48. cAttributeOre"},{"location":"general/xs/constants/#1149-cattributecapturedunit","text":"Value: int 57 ID of the player resource Captured Unit. Check here for more info about what this resource does.","title":"11.49. cAttributeCapturedUnit"},{"location":"general/xs/constants/#1150-cattributetradegoodquality","text":"Value: int 59 ID of the player resource Trade Good Quality. Check here for more info about what this resource does.","title":"11.50. cAttributeTradeGoodQuality"},{"location":"general/xs/constants/#1151-cattributetrademarketlevel","text":"Value: int 60 ID of the player resource Trade Market Level. Check here for more info about what this resource does.","title":"11.51. cAttributeTradeMarketLevel"},{"location":"general/xs/constants/#1152-cattributeformations","text":"Value: int 61 ID of the player resource Formations. Check here for more info about what this resource does.","title":"11.52. cAttributeFormations"},{"location":"general/xs/constants/#1153-cattributebuildinghouserate","text":"Value: int 62 ID of the player resource Building House Rate. Check here for more info about what this resource does.","title":"11.53. cAttributeBuildingHouseRate"},{"location":"general/xs/constants/#1154-cattributegathertaxrate","text":"Value: int 63 ID of the player resource Gather Tax Rate. Check here for more info about what this resource does.","title":"11.54. cAttributeGatherTaxRate"},{"location":"general/xs/constants/#1155-cattributegatheraccumalation","text":"Value: int 64 ID of the player resource Gather Accumalation. Check here for more info about what this resource does.","title":"11.55. cAttributeGatherAccumalation"},{"location":"general/xs/constants/#1156-cattributesalvagedecayrate","text":"Value: int 65 ID of the player resource Salvage Decay Rate. Check here for more info about what this resource does.","title":"11.56. cAttributeSalvageDecayRate"},{"location":"general/xs/constants/#1157-cattributeallowformations","text":"Value: int 66 ID of the player resource Allow Formations. Check here for more info about what this resource does.","title":"11.57. cAttributeAllowFormations"},{"location":"general/xs/constants/#1158-cattributecanconvert","text":"Value: int 67 ID of the player resource Can Convert. Check here for more info about what this resource does.","title":"11.58. cAttributeCanConvert"},{"location":"general/xs/constants/#1159-cattributeplayer1kills","text":"Value: int 69 ID of the player resource Player1 Kills. Check here for more info about what this resource does.","title":"11.59. cAttributePlayer1Kills"},{"location":"general/xs/constants/#1160-cattributeplayer2kills","text":"Value: int 70 ID of the player resource Player2 Kills. Check here for more info about what this resource does.","title":"11.60. cAttributePlayer2Kills"},{"location":"general/xs/constants/#1161-cattributeplayer3kills","text":"Value: int 71 ID of the player resource Player3 Kills. Check here for more info about what this resource does.","title":"11.61. cAttributePlayer3Kills"},{"location":"general/xs/constants/#1162-cattributeplayer4kills","text":"Value: int 72 ID of the player resource Player4 Kills. Check here for more info about what this resource does.","title":"11.62. cAttributePlayer4Kills"},{"location":"general/xs/constants/#1163-cattributeplayer5kills","text":"Value: int 73 ID of the player resource Player5 Kills. Check here for more info about what this resource does.","title":"11.63. cAttributePlayer5Kills"},{"location":"general/xs/constants/#1164-cattributeplayer6kills","text":"Value: int 74 ID of the player resource Player6 Kills. Check here for more info about what this resource does.","title":"11.64. cAttributePlayer6Kills"},{"location":"general/xs/constants/#1165-cattributeplayer7kills","text":"Value: int 75 ID of the player resource Player7 Kills. Check here for more info about what this resource does.","title":"11.65. cAttributePlayer7Kills"},{"location":"general/xs/constants/#1166-cattributeplayer8kills","text":"Value: int 76 ID of the player resource Player8 Kills. Check here for more info about what this resource does.","title":"11.66. cAttributePlayer8Kills"},{"location":"general/xs/constants/#1167-cattributeconvertresistance","text":"Value: int 77 ID of the player resource Convert Resistance. Check here for more info about what this resource does.","title":"11.67. cAttributeConvertResistance"},{"location":"general/xs/constants/#1168-cattributetradevigrate","text":"Value: int 78 ID of the player resource Trade Vig Rate. Check here for more info about what this resource does.","title":"11.68. cAttributeTradeVigRate"},{"location":"general/xs/constants/#1169-cattributestonebonus","text":"Value: int 79 ID of the player resource Stone Bonus. Check here for more info about what this resource does.","title":"11.69. cAttributeStoneBonus"},{"location":"general/xs/constants/#1170-cattributequeuedcount","text":"Value: int 80 ID of the player resource Queued Count. Check here for more info about what this resource does.","title":"11.70. cAttributeQueuedCount"},{"location":"general/xs/constants/#1171-cattributetrainingcount","text":"Value: int 81 ID of the player resource Training Count. Check here for more info about what this resource does.","title":"11.71. cAttributeTrainingCount"},{"location":"general/xs/constants/#1172-cattributeraider","text":"Value: int 82 ID of the player resource Raider. Check here for more info about what this resource does.","title":"11.72. cAttributeRaider"},{"location":"general/xs/constants/#1173-cattributeboardingrechargerate","text":"Value: int 83 ID of the player resource Boarding Recharge Rate. Check here for more info about what this resource does.","title":"11.73. cAttributeBoardingRechargeRate"},{"location":"general/xs/constants/#1174-cattributestartingvillagers","text":"Value: int 84 ID of the player resource Starting Villagers. Check here for more info about what this resource does.","title":"11.74. cAttributeStartingVillagers"},{"location":"general/xs/constants/#1175-cattributeresearchcostmod","text":"Value: int 85 ID of the player resource Research Cost Mod. Check here for more info about what this resource does.","title":"11.75. cAttributeResearchCostMod"},{"location":"general/xs/constants/#1176-cattributeresearchtimemod","text":"Value: int 86 ID of the player resource Research Time Mod. Check here for more info about what this resource does.","title":"11.76. cAttributeResearchTimeMod"},{"location":"general/xs/constants/#1177-cattributeconvertboats","text":"Value: int 87 ID of the player resource Convert Boats. Check here for more info about what this resource does.","title":"11.77. cAttributeConvertBoats"},{"location":"general/xs/constants/#1178-cattributefishtrapfood","text":"Value: int 88 ID of the player resource Fish Trap Food. Check here for more info about what this resource does.","title":"11.78. cAttributeFishTrapFood"},{"location":"general/xs/constants/#1179-cattributehealratemodifer","text":"Value: int 89 ID of the player resource Heal Rate Modifer. Check here for more info about what this resource does.","title":"11.79. cAttributeHealRateModifer"},{"location":"general/xs/constants/#1180-cattributehealrange","text":"Value: int 90 ID of the player resource Heal Range. Check here for more info about what this resource does.","title":"11.80. cAttributeHealRange"},{"location":"general/xs/constants/#1181-cattributestartingfood","text":"Value: int 91 ID of the player resource Starting Food. Check here for more info about what this resource does.","title":"11.81. cAttributeStartingFood"},{"location":"general/xs/constants/#1182-cattributestartingwood","text":"Value: int 92 ID of the player resource Starting Wood. Check here for more info about what this resource does.","title":"11.82. cAttributeStartingWood"},{"location":"general/xs/constants/#1183-cattributestartingstone","text":"Value: int 93 ID of the player resource Starting Stone. Check here for more info about what this resource does.","title":"11.83. cAttributeStartingStone"},{"location":"general/xs/constants/#1184-cattributestartinggold","text":"Value: int 94 ID of the player resource Starting Gold. Check here for more info about what this resource does.","title":"11.84. cAttributeStartingGold"},{"location":"general/xs/constants/#1185-cattributeraiderability","text":"Value: int 95 ID of the player resource Raider Ability. Check here for more info about what this resource does.","title":"11.85. cAttributeRaiderAbility"},{"location":"general/xs/constants/#1186-cattributenodropsitefarmers","text":"Value: int 96 ID of the player resource No Dropsite Farmers. Check here for more info about what this resource does.","title":"11.86. cAttributeNoDropsiteFarmers"},{"location":"general/xs/constants/#1187-cattributedominantsheepcontrol","text":"Value: int 97 ID of the player resource Dominant Sheep Control. Check here for more info about what this resource does.","title":"11.87. cAttributeDominantSheepControl"},{"location":"general/xs/constants/#1188-cattributeobjectcostsummation","text":"Value: int 98 ID of the player resource Object Cost Summation. Check here for more info about what this resource does.","title":"11.88. cAttributeObjectCostSummation"},{"location":"general/xs/constants/#1189-cattributeresearchcostsummation","text":"Value: int 99 ID of the player resource Research Cost Summation. Check here for more info about what this resource does.","title":"11.89. cAttributeResearchCostSummation"},{"location":"general/xs/constants/#1190-cattributerelicincomesummation","text":"Value: int 100 ID of the player resource Relic Income Summation. Check here for more info about what this resource does.","title":"11.90. cAttributeRelicIncomeSummation"},{"location":"general/xs/constants/#1191-cattributetradeincomesummation","text":"Value: int 101 ID of the player resource Trade Income Summation. Check here for more info about what this resource does.","title":"11.91. cAttributeTradeIncomeSummation"},{"location":"general/xs/constants/#1192-cattributeplayer1tribute","text":"Value: int 102 ID of the player resource Player1 Tribute. Check here for more info about what this resource does.","title":"11.92. cAttributePlayer1Tribute"},{"location":"general/xs/constants/#1193-cattributeplayer2tribute","text":"Value: int 103 ID of the player resource Player2 Tribute. Check here for more info about what this resource does.","title":"11.93. cAttributePlayer2Tribute"},{"location":"general/xs/constants/#1194-cattributeplayer3tribute","text":"Value: int 104 ID of the player resource Player3 Tribute. Check here for more info about what this resource does.","title":"11.94. cAttributePlayer3Tribute"},{"location":"general/xs/constants/#1195-cattributeplayer4tribute","text":"Value: int 105 ID of the player resource Player4 Tribute. Check here for more info about what this resource does.","title":"11.95. cAttributePlayer4Tribute"},{"location":"general/xs/constants/#1196-cattributeplayer5tribute","text":"Value: int 106 ID of the player resource Player5 Tribute. Check here for more info about what this resource does.","title":"11.96. cAttributePlayer5Tribute"},{"location":"general/xs/constants/#1197-cattributeplayer6tribute","text":"Value: int 107 ID of the player resource Player6 Tribute. Check here for more info about what this resource does.","title":"11.97. cAttributePlayer6Tribute"},{"location":"general/xs/constants/#1198-cattributeplayer7tribute","text":"Value: int 108 ID of the player resource Player7 Tribute. Check here for more info about what this resource does.","title":"11.98. cAttributePlayer7Tribute"},{"location":"general/xs/constants/#1199-cattributeplayer8tribute","text":"Value: int 109 ID of the player resource Player8 Tribute. Check here for more info about what this resource does.","title":"11.99. cAttributePlayer8Tribute"},{"location":"general/xs/constants/#11100-cattributeplayer1killvalue","text":"Value: int 110 ID of the player resource Player1 Kill Value. Check here for more info about what this resource does.","title":"11.100. cAttributePlayer1KillValue"},{"location":"general/xs/constants/#11101-cattributeplayer2killvalue","text":"Value: int 111 ID of the player resource Player2 Kill Value. Check here for more info about what this resource does.","title":"11.101. cAttributePlayer2KillValue"},{"location":"general/xs/constants/#11102-cattributeplayer3killvalue","text":"Value: int 112 ID of the player resource Player3 Kill Value. Check here for more info about what this resource does.","title":"11.102. cAttributePlayer3KillValue"},{"location":"general/xs/constants/#11103-cattributeplayer4killvalue","text":"Value: int 113 ID of the player resource Player4 Kill Value. Check here for more info about what this resource does.","title":"11.103. cAttributePlayer4KillValue"},{"location":"general/xs/constants/#11104-cattributeplayer5killvalue","text":"Value: int 114 ID of the player resource Player5 Kill Value. Check here for more info about what this resource does.","title":"11.104. cAttributePlayer5KillValue"},{"location":"general/xs/constants/#11105-cattributeplayer6killvalue","text":"Value: int 115 ID of the player resource Player6 Kill Value. Check here for more info about what this resource does.","title":"11.105. cAttributePlayer6KillValue"},{"location":"general/xs/constants/#11106-cattributeplayer7killvalue","text":"Value: int 116 ID of the player resource Player7 Kill Value. Check here for more info about what this resource does.","title":"11.106. cAttributePlayer7KillValue"},{"location":"general/xs/constants/#11107-cattributeplayer8killvalue","text":"Value: int 117 ID of the player resource Player8 Kill Value. Check here for more info about what this resource does.","title":"11.107. cAttributePlayer8KillValue"},{"location":"general/xs/constants/#11108-cattributeplayer1razings","text":"Value: int 118 ID of the player resource Player1 Razings. Check here for more info about what this resource does.","title":"11.108. cAttributePlayer1Razings"},{"location":"general/xs/constants/#11109-cattributeplayer2razings","text":"Value: int 119 ID of the player resource Player2 Razings. Check here for more info about what this resource does.","title":"11.109. cAttributePlayer2Razings"},{"location":"general/xs/constants/#11110-cattributeplayer3razings","text":"Value: int 120 ID of the player resource Player3 Razings. Check here for more info about what this resource does.","title":"11.110. cAttributePlayer3Razings"},{"location":"general/xs/constants/#11111-cattributeplayer4razings","text":"Value: int 121 ID of the player resource Player4 Razings. Check here for more info about what this resource does.","title":"11.111. cAttributePlayer4Razings"},{"location":"general/xs/constants/#11112-cattributeplayer5razings","text":"Value: int 122 ID of the player resource Player5 Razings. Check here for more info about what this resource does.","title":"11.112. cAttributePlayer5Razings"},{"location":"general/xs/constants/#11113-cattributeplayer6razings","text":"Value: int 123 ID of the player resource Player6 Razings. Check here for more info about what this resource does.","title":"11.113. cAttributePlayer6Razings"},{"location":"general/xs/constants/#11114-cattributeplayer7razings","text":"Value: int 124 ID of the player resource Player7 Razings. Check here for more info about what this resource does.","title":"11.114. cAttributePlayer7Razings"},{"location":"general/xs/constants/#11115-cattributeplayer8razings","text":"Value: int 125 ID of the player resource Player8 Razings. Check here for more info about what this resource does.","title":"11.115. cAttributePlayer8Razings"},{"location":"general/xs/constants/#11116-cattributeplayer1razingvalue","text":"Value: int 126 ID of the player resource Player1 Razing Value. Check here for more info about what this resource does.","title":"11.116. cAttributePlayer1RazingValue"},{"location":"general/xs/constants/#11117-cattributeplayer2razingvalue","text":"Value: int 127 ID of the player resource Player2 Razing Value. Check here for more info about what this resource does.","title":"11.117. cAttributePlayer2RazingValue"},{"location":"general/xs/constants/#11118-cattributeplayer3razingvalue","text":"Value: int 128 ID of the player resource Player3 Razing Value. Check here for more info about what this resource does.","title":"11.118. cAttributePlayer3RazingValue"},{"location":"general/xs/constants/#11119-cattributeplayer4razingvalue","text":"Value: int 129 ID of the player resource Player4 Razing Value. Check here for more info about what this resource does.","title":"11.119. cAttributePlayer4RazingValue"},{"location":"general/xs/constants/#11120-cattributeplayer5razingvalue","text":"Value: int 130 ID of the player resource Player5 Razing Value. Check here for more info about what this resource does.","title":"11.120. cAttributePlayer5RazingValue"},{"location":"general/xs/constants/#11121-cattributeplayer6razingvalue","text":"Value: int 131 ID of the player resource Player6 Razing Value. Check here for more info about what this resource does.","title":"11.121. cAttributePlayer6RazingValue"},{"location":"general/xs/constants/#11122-cattributeplayer7razingvalue","text":"Value: int 132 ID of the player resource Player7 Razing Value. Check here for more info about what this resource does.","title":"11.122. cAttributePlayer7RazingValue"},{"location":"general/xs/constants/#11123-cattributeplayer8razingvalue","text":"Value: int 133 ID of the player resource Player8 Razing Value. Check here for more info about what this resource does.","title":"11.123. cAttributePlayer8RazingValue"},{"location":"general/xs/constants/#11124-cattributecastle","text":"Value: int 134 ID of the player resource Castle. Check here for more info about what this resource does.","title":"11.124. cAttributeCastle"},{"location":"general/xs/constants/#11125-cattributehitpointrazings","text":"Value: int 135 ID of the player resource Hit Point Razings. Check here for more info about what this resource does.","title":"11.125. cAttributeHitPointRazings"},{"location":"general/xs/constants/#11126-cattributekillsbyplayer1","text":"Value: int 136 ID of the player resource Kills By Player1. Check here for more info about what this resource does.","title":"11.126. cAttributeKillsByPlayer1"},{"location":"general/xs/constants/#11127-cattributekillsbyplayer2","text":"Value: int 137 ID of the player resource Kills By Player2. Check here for more info about what this resource does.","title":"11.127. cAttributeKillsByPlayer2"},{"location":"general/xs/constants/#11128-cattributekillsbyplayer3","text":"Value: int 138 ID of the player resource Kills By Player3. Check here for more info about what this resource does.","title":"11.128. cAttributeKillsByPlayer3"},{"location":"general/xs/constants/#11129-cattributekillsbyplayer4","text":"Value: int 139 ID of the player resource Kills By Player4. Check here for more info about what this resource does.","title":"11.129. cAttributeKillsByPlayer4"},{"location":"general/xs/constants/#11130-cattributekillsbyplayer5","text":"Value: int 140 ID of the player resource Kills By Player5. Check here for more info about what this resource does.","title":"11.130. cAttributeKillsByPlayer5"},{"location":"general/xs/constants/#11131-cattributekillsbyplayer6","text":"Value: int 141 ID of the player resource Kills By Player6. Check here for more info about what this resource does.","title":"11.131. cAttributeKillsByPlayer6"},{"location":"general/xs/constants/#11132-cattributekillsbyplayer7","text":"Value: int 142 ID of the player resource Kills By Player7. Check here for more info about what this resource does.","title":"11.132. cAttributeKillsByPlayer7"},{"location":"general/xs/constants/#11133-cattributekillsbyplayer8","text":"Value: int 143 ID of the player resource Kills By Player8. Check here for more info about what this resource does.","title":"11.133. cAttributeKillsByPlayer8"},{"location":"general/xs/constants/#11134-cattributerazingsbyplayer1","text":"Value: int 144 ID of the player resource Razings By Player1. Check here for more info about what this resource does.","title":"11.134. cAttributeRazingsByPlayer1"},{"location":"general/xs/constants/#11135-cattributerazingsbyplayer2","text":"Value: int 145 ID of the player resource Razings By Player2. Check here for more info about what this resource does.","title":"11.135. cAttributeRazingsByPlayer2"},{"location":"general/xs/constants/#11136-cattributerazingsbyplayer3","text":"Value: int 146 ID of the player resource Razings By Player3. Check here for more info about what this resource does.","title":"11.136. cAttributeRazingsByPlayer3"},{"location":"general/xs/constants/#11137-cattributerazingsbyplayer4","text":"Value: int 147 ID of the player resource Razings By Player4. Check here for more info about what this resource does.","title":"11.137. cAttributeRazingsByPlayer4"},{"location":"general/xs/constants/#11138-cattributerazingsbyplayer5","text":"Value: int 148 ID of the player resource Razings By Player5. Check here for more info about what this resource does.","title":"11.138. cAttributeRazingsByPlayer5"},{"location":"general/xs/constants/#11139-cattributerazingsbyplayer6","text":"Value: int 149 ID of the player resource Razings By Player6. Check here for more info about what this resource does.","title":"11.139. cAttributeRazingsByPlayer6"},{"location":"general/xs/constants/#11140-cattributerazingsbyplayer7","text":"Value: int 150 ID of the player resource Razings By Player7. Check here for more info about what this resource does.","title":"11.140. cAttributeRazingsByPlayer7"},{"location":"general/xs/constants/#11141-cattributerazingsbyplayer8","text":"Value: int 151 ID of the player resource Razings By Player8. Check here for more info about what this resource does.","title":"11.141. cAttributeRazingsByPlayer8"},{"location":"general/xs/constants/#11142-cattributevaluekilledbyothers","text":"Value: int 152 ID of the player resource Value Killed By Others. Check here for more info about what this resource does.","title":"11.142. cAttributeValueKilledByOthers"},{"location":"general/xs/constants/#11143-cattributevaluerazedbyothers","text":"Value: int 153 ID of the player resource Value Razed By Others. Check here for more info about what this resource does.","title":"11.143. cAttributeValueRazedByOthers"},{"location":"general/xs/constants/#11144-cattributekilledbyothers","text":"Value: int 154 ID of the player resource Killed By Others. Check here for more info about what this resource does.","title":"11.144. cAttributeKilledByOthers"},{"location":"general/xs/constants/#11145-cattributerazedbyothers","text":"Value: int 155 ID of the player resource Razed By Others. Check here for more info about what this resource does.","title":"11.145. cAttributeRazedByOthers"},{"location":"general/xs/constants/#11146-cattributetributefromplayer1","text":"Value: int 156 ID of the player resource Tribute From Player1. Check here for more info about what this resource does.","title":"11.146. cAttributeTributeFromPlayer1"},{"location":"general/xs/constants/#11147-cattributetributefromplayer2","text":"Value: int 157 ID of the player resource Tribute From Player2. Check here for more info about what this resource does.","title":"11.147. cAttributeTributeFromPlayer2"},{"location":"general/xs/constants/#11148-cattributetributefromplayer3","text":"Value: int 158 ID of the player resource Tribute From Player3. Check here for more info about what this resource does.","title":"11.148. cAttributeTributeFromPlayer3"},{"location":"general/xs/constants/#11149-cattributetributefromplayer4","text":"Value: int 159 ID of the player resource Tribute From Player4. Check here for more info about what this resource does.","title":"11.149. cAttributeTributeFromPlayer4"},{"location":"general/xs/constants/#11150-cattributetributefromplayer5","text":"Value: int 160 ID of the player resource Tribute From Player5. Check here for more info about what this resource does.","title":"11.150. cAttributeTributeFromPlayer5"},{"location":"general/xs/constants/#11151-cattributetributefromplayer6","text":"Value: int 161 ID of the player resource Tribute From Player6. Check here for more info about what this resource does.","title":"11.151. cAttributeTributeFromPlayer6"},{"location":"general/xs/constants/#11152-cattributetributefromplayer7","text":"Value: int 162 ID of the player resource Tribute From Player7. Check here for more info about what this resource does.","title":"11.152. cAttributeTributeFromPlayer7"},{"location":"general/xs/constants/#11153-cattributetributefromplayer8","text":"Value: int 163 ID of the player resource Tribute From Player8. Check here for more info about what this resource does.","title":"11.153. cAttributeTributeFromPlayer8"},{"location":"general/xs/constants/#11154-cattributevaluecurrentunits","text":"Value: int 164 ID of the player resource Value Current Units. Check here for more info about what this resource does.","title":"11.154. cAttributeValueCurrentUnits"},{"location":"general/xs/constants/#11155-cattributevaluecurrentbuildings","text":"Value: int 165 ID of the player resource Value Current Buildings. Check here for more info about what this resource does.","title":"11.155. cAttributeValueCurrentBuildings"},{"location":"general/xs/constants/#11156-cattributefoodtotal","text":"Value: int 166 ID of the player resource Food Total. Check here for more info about what this resource does.","title":"11.156. cAttributeFoodTotal"},{"location":"general/xs/constants/#11157-cattributewoodtotal","text":"Value: int 167 ID of the player resource Wood Total. Check here for more info about what this resource does.","title":"11.157. cAttributeWoodTotal"},{"location":"general/xs/constants/#11158-cattributestonetotal","text":"Value: int 168 ID of the player resource Stone Total. Check here for more info about what this resource does.","title":"11.158. cAttributeStoneTotal"},{"location":"general/xs/constants/#11159-cattributegoldtotal","text":"Value: int 169 ID of the player resource Gold Total. Check here for more info about what this resource does.","title":"11.159. cAttributeGoldTotal"},{"location":"general/xs/constants/#11160-cattributetotalvalueofkills","text":"Value: int 170 ID of the player resource Total Value Of Kills. Check here for more info about what this resource does.","title":"11.160. cAttributeTotalValueOfKills"},{"location":"general/xs/constants/#11161-cattributetotaltributereceived","text":"Value: int 171 ID of the player resource Total Tribute Received. Check here for more info about what this resource does.","title":"11.161. cAttributeTotalTributeReceived"},{"location":"general/xs/constants/#11162-cattributetotalvalueofrazings","text":"Value: int 172 ID of the player resource Total Value Of Razings. Check here for more info about what this resource does.","title":"11.162. cAttributeTotalValueOfRazings"},{"location":"general/xs/constants/#11163-cattributetotalcastlesbuilt","text":"Value: int 173 ID of the player resource Total Castles Built. Check here for more info about what this resource does.","title":"11.163. cAttributeTotalCastlesBuilt"},{"location":"general/xs/constants/#11164-cattributetotalwondersbuilt","text":"Value: int 174 ID of the player resource Total Wonders Built. Check here for more info about what this resource does.","title":"11.164. cAttributeTotalWondersBuilt"},{"location":"general/xs/constants/#11165-cattributetributescore","text":"Value: int 175 ID of the player resource Tribute Score. Check here for more info about what this resource does.","title":"11.165. cAttributeTributeScore"},{"location":"general/xs/constants/#11166-cattributeconvertminadj","text":"Value: int 176 ID of the player resource Convert Min Adj. Check here for more info about what this resource does.","title":"11.166. cAttributeConvertMinAdj"},{"location":"general/xs/constants/#11167-cattributeconvertmaxadj","text":"Value: int 177 ID of the player resource Convert Max Adj. Check here for more info about what this resource does.","title":"11.167. cAttributeConvertMaxAdj"},{"location":"general/xs/constants/#11168-cattributeconvertresistminadj","text":"Value: int 178 ID of the player resource Convert Resist Min Adj. Check here for more info about what this resource does.","title":"11.168. cAttributeConvertResistMinAdj"},{"location":"general/xs/constants/#11169-cattributeconvertresistmaxadj","text":"Value: int 179 ID of the player resource Convert Resist Max Adj. Check here for more info about what this resource does.","title":"11.169. cAttributeConvertResistMaxAdj"},{"location":"general/xs/constants/#11170-cattributeconvertbuildingmin","text":"Value: int 180 ID of the player resource Convert Building Min. Check here for more info about what this resource does.","title":"11.170. cAttributeConvertBuildingMin"},{"location":"general/xs/constants/#11171-cattributeconvertbuildingmax","text":"Value: int 181 ID of the player resource Convert Building Max. Check here for more info about what this resource does.","title":"11.171. cAttributeConvertBuildingMax"},{"location":"general/xs/constants/#11172-cattributeconvertbuildingchance","text":"Value: int 182 ID of the player resource Convert Building Chance. Check here for more info about what this resource does.","title":"11.172. cAttributeConvertBuildingChance"},{"location":"general/xs/constants/#11173-cattributespies","text":"Value: int 183 ID of the player resource Spies. Check here for more info about what this resource does.","title":"11.173. cAttributeSpies"},{"location":"general/xs/constants/#11174-cattributevaluewonderscastles","text":"Value: int 184 ID of the player resource Value Wonders Castles. Check here for more info about what this resource does.","title":"11.174. cAttributeValueWondersCastles"},{"location":"general/xs/constants/#11175-cattributefoodscore","text":"Value: int 185 ID of the player resource Food Score. Check here for more info about what this resource does.","title":"11.175. cAttributeFoodScore"},{"location":"general/xs/constants/#11176-cattributewoodscore","text":"Value: int 186 ID of the player resource Wood Score. Check here for more info about what this resource does.","title":"11.176. cAttributeWoodScore"},{"location":"general/xs/constants/#11177-cattributestonescore","text":"Value: int 187 ID of the player resource Stone Score. Check here for more info about what this resource does.","title":"11.177. cAttributeStoneScore"},{"location":"general/xs/constants/#11178-cattributegoldscore","text":"Value: int 188 ID of the player resource Gold Score. Check here for more info about what this resource does.","title":"11.178. cAttributeGoldScore"},{"location":"general/xs/constants/#11179-cattributewoodbonus","text":"Value: int 189 ID of the player resource Wood Bonus. Check here for more info about what this resource does.","title":"11.179. cAttributeWoodBonus"},{"location":"general/xs/constants/#11180-cattributefoodbonus","text":"Value: int 190 ID of the player resource Food Bonus. Check here for more info about what this resource does.","title":"11.180. cAttributeFoodBonus"},{"location":"general/xs/constants/#11181-cattributerelicrate","text":"Value: int 191 ID of the player resource Relic Rate. Check here for more info about what this resource does.","title":"11.181. cAttributeRelicRate"},{"location":"general/xs/constants/#11182-cattributeheresy","text":"Value: int 192 ID of the player resource Heresy. Check here for more info about what this resource does.","title":"11.182. cAttributeHeresy"},{"location":"general/xs/constants/#11183-cattributetheocracy","text":"Value: int 193 ID of the player resource Theocracy. Check here for more info about what this resource does.","title":"11.183. cAttributeTheocracy"},{"location":"general/xs/constants/#11184-cattributecrenellations","text":"Value: int 194 ID of the player resource Crenellations. Check here for more info about what this resource does.","title":"11.184. cAttributeCrenellations"},{"location":"general/xs/constants/#11185-cattributeconstructionratemod","text":"Value: int 195 ID of the player resource Construction Rate Mod. Check here for more info about what this resource does.","title":"11.185. cAttributeConstructionRateMod"},{"location":"general/xs/constants/#11186-cattributehunwonderbonus","text":"Value: int 196 ID of the player resource Hun Wonder Bonus. Check here for more info about what this resource does.","title":"11.186. cAttributeHunWonderBonus"},{"location":"general/xs/constants/#11187-cattributespiesdiscount","text":"Value: int 197 ID of the player resource Spies Discount. Check here for more info about what this resource does.","title":"11.187. cAttributeSpiesDiscount"},{"location":"general/xs/constants/#11188-cattributetemporarymapreveal","text":"Value: int 209 ID of the player resource Temporary Map Reveal. Check here for more info about what this resource does.","title":"11.188. cAttributeTemporaryMapReveal"},{"location":"general/xs/constants/#11189-cattributerevealinitialtype","text":"Value: int 210 ID of the player resource Reveal Initial Type. Check here for more info about what this resource does.","title":"11.189. cAttributeRevealInitialType"},{"location":"general/xs/constants/#11190-cattributeelevationbonushigher","text":"Value: int 211 ID of the player resource Elevation Bonus Higher. Check here for more info about what this resource does.","title":"11.190. cAttributeElevationBonusHigher"},{"location":"general/xs/constants/#11191-cattributeelevationbonusloweer","text":"Value: int 212 ID of the player resource Elevation Bonus Loweer. Check here for more info about what this resource does.","title":"11.191. cAttributeElevationBonusLoweer"},{"location":"general/xs/constants/#11192-cattributetriggersharedlos","text":"Value: int 217 ID of the player resource Trigger Shared L O S. Check here for more info about what this resource does.","title":"11.192. cAttributeTriggerSharedLOS"},{"location":"general/xs/constants/#11193-cattributefeudaltowncenterlimit","text":"Value: int 218 ID of the player resource Feudal Town Center Limit. Check here for more info about what this resource does.","title":"11.193. cAttributeFeudalTownCenterLimit"},{"location":"general/xs/constants/#11194-cattributeunused1","text":"Value: int 219 ID of the player resource Unused1. Check here for more info about what this resource does.","title":"11.194. cAttributeUnused1"},{"location":"general/xs/constants/#11195-cattributeunused2","text":"Value: int 220 ID of the player resource Unused2. Check here for more info about what this resource does.","title":"11.195. cAttributeUnused2"},{"location":"general/xs/constants/#11196-cattributemonumentfoodtrickle","text":"Value: int 221 ID of the player resource Monument Food Trickle. Check here for more info about what this resource does.","title":"11.196. cAttributeMonumentFoodTrickle"},{"location":"general/xs/constants/#11197-cattributemonumentwoodtrickle","text":"Value: int 222 ID of the player resource Monument Wood Trickle. Check here for more info about what this resource does.","title":"11.197. cAttributeMonumentWoodTrickle"},{"location":"general/xs/constants/#11198-cattributemonumentstonetrickle","text":"Value: int 223 ID of the player resource Monument Stone Trickle. Check here for more info about what this resource does.","title":"11.198. cAttributeMonumentStoneTrickle"},{"location":"general/xs/constants/#11199-cattributemonumentgoldtrickle","text":"Value: int 224 ID of the player resource Monument Gold Trickle. Check here for more info about what this resource does.","title":"11.199. cAttributeMonumentGoldTrickle"},{"location":"general/xs/constants/#11200-cattributerelicfoodrate","text":"Value: int 225 ID of the player resource Relic Food Rate. Check here for more info about what this resource does.","title":"11.200. cAttributeRelicFoodRate"},{"location":"general/xs/constants/#11201-cattributevillagerskilledbygaia","text":"Value: int 226 ID of the player resource Villagers Killed By Gaia. Check here for more info about what this resource does.","title":"11.201. cAttributeVillagersKilledByGaia"},{"location":"general/xs/constants/#11202-cattributevillgaerskilledbyanimal","text":"Value: int 227 ID of the player resource Villgaers Killed By Animal. Check here for more info about what this resource does.","title":"11.202. cAttributeVillgaersKilledByAnimal"},{"location":"general/xs/constants/#11203-cattributevillagerskilledbyaiplayer","text":"Value: int 228 ID of the player resource Villagers Killed By A I Player. Check here for more info about what this resource does.","title":"11.203. cAttributeVillagersKilledByAIPlayer"},{"location":"general/xs/constants/#11204-cattributevillagerskilledbyhumanplayer","text":"Value: int 229 ID of the player resource Villagers Killed By Human Player. Check here for more info about what this resource does.","title":"11.204. cAttributeVillagersKilledByHumanPlayer"},{"location":"general/xs/constants/#11205-cattributefoodgeneration","text":"Value: int 230 ID of the player resource Food Generation. Check here for more info about what this resource does.","title":"11.205. cAttributeFoodGeneration"},{"location":"general/xs/constants/#11206-cattributewoodgeneration","text":"Value: int 231 ID of the player resource Wood Generation. Check here for more info about what this resource does.","title":"11.206. cAttributeWoodGeneration"},{"location":"general/xs/constants/#11207-cattributestonegeneration","text":"Value: int 232 ID of the player resource Stone Generation. Check here for more info about what this resource does.","title":"11.207. cAttributeStoneGeneration"},{"location":"general/xs/constants/#11208-cattributegoldgeneration","text":"Value: int 233 ID of the player resource Gold Generation. Check here for more info about what this resource does.","title":"11.208. cAttributeGoldGeneration"},{"location":"general/xs/constants/#11209-cattributespawncap","text":"Value: int 234 ID of the player resource Spawn Cap. Check here for more info about what this resource does.","title":"11.209. cAttributeSpawnCap"},{"location":"general/xs/constants/#11210-cattributeflemishmilitiapop","text":"Value: int 235 ID of the player resource Flemish Militia Pop. Check here for more info about what this resource does.","title":"11.210. cAttributeFlemishMilitiaPop"},{"location":"general/xs/constants/#11211-cattributegoldfarmingproductivity","text":"Value: int 236 ID of the player resource Gold Farming Productivity. Check here for more info about what this resource does.","title":"11.211. cAttributeGoldFarmingProductivity"},{"location":"general/xs/constants/#11212-cattributefolwarkcollectionamount","text":"Value: int 237 ID of the player resource Folwark Collection Amount. Check here for more info about what this resource does.","title":"11.212. cAttributeFolwarkCollectionAmount"},{"location":"general/xs/constants/#11213-cattributefolwarkcollectiontype","text":"Value: int 238 ID of the player resource Folwark Collection Type. Check here for more info about what this resource does.","title":"11.213. cAttributeFolwarkCollectionType"},{"location":"general/xs/constants/#11214-cattributebuildingid","text":"Value: int 239 ID of the player resource Building Id. Check here for more info about what this resource does.","title":"11.214. cAttributeBuildingId"},{"location":"general/xs/constants/#11215-cattributeunitsconverted","text":"Value: int 240 ID of the player resource Units Converted. Check here for more info about what this resource does.","title":"11.215. cAttributeUnitsConverted"},{"location":"general/xs/constants/#11216-cattributestonegoldminingproductivity","text":"Value: int 241 ID of the player resource Stone Gold Mining Productivity. Check here for more info about what this resource does.","title":"11.216. cAttributeStoneGoldMiningProductivity"},{"location":"general/xs/constants/#11217-cattributeworkshopfoodtrickle","text":"Value: int 242 ID of the player resource Workshop Food Trickle. Check here for more info about what this resource does.","title":"11.217. cAttributeWorkshopFoodTrickle"},{"location":"general/xs/constants/#11218-cattributeworkshopwoodtrickle","text":"Value: int 243 ID of the player resource Workshop Wood Trickle. Check here for more info about what this resource does.","title":"11.218. cAttributeWorkshopWoodTrickle"},{"location":"general/xs/constants/#11219-cattributeworkshopstonetrickle","text":"Value: int 244 ID of the player resource Workshop Stone Trickle. Check here for more info about what this resource does.","title":"11.219. cAttributeWorkshopStoneTrickle"},{"location":"general/xs/constants/#11220-cattributeworkshopgoldtrickle","text":"Value: int 245 ID of the player resource Workshop Gold Trickle. Check here for more info about what this resource does.","title":"11.220. cAttributeWorkshopGoldTrickle"},{"location":"general/xs/constants/#11221-cattributeunitsvaluetotal","text":"Value: int 246 ID of the player resource Units Value Total. Check here for more info about what this resource does.","title":"11.221. cAttributeUnitsValueTotal"},{"location":"general/xs/constants/#11222-cattributebuildingsvaluetotal","text":"Value: int 247 ID of the player resource Buildings Value Total. Check here for more info about what this resource does.","title":"11.222. cAttributeBuildingsValueTotal"},{"location":"general/xs/constants/#11223-cattributevillagerscreatedtotal","text":"Value: int 248 ID of the player resource Villagers Created Total. Check here for more info about what this resource does.","title":"11.223. cAttributeVillagersCreatedTotal"},{"location":"general/xs/constants/#11224-cattributevillagersidleperiodstotal","text":"Value: int 249 ID of the player resource Villagers Idle Periods Total. Check here for more info about what this resource does.","title":"11.224. cAttributeVillagersIdlePeriodsTotal"},{"location":"general/xs/constants/#11225-cattributevillagersidlesecondstotal","text":"Value: int 250 ID of the player resource Villagers Idle Seconds Total. Check here for more info about what this resource does.","title":"11.225. cAttributeVillagersIdleSecondsTotal"},{"location":"general/xs/constants/#11226-cattributetradefoodpercent","text":"Value: int 251 ID of the player resource Trade Food Percent. Check here for more info about what this resource does.","title":"11.226. cAttributeTradeFoodPercent"},{"location":"general/xs/constants/#11227-cattributetradewoodpercent","text":"Value: int 252 ID of the player resource Trade Wood Percent. Check here for more info about what this resource does.","title":"11.227. cAttributeTradeWoodPercent"},{"location":"general/xs/constants/#11228-cattributetradestonepercent","text":"Value: int 253 ID of the player resource Trade Stone Percent. Check here for more info about what this resource does.","title":"11.228. cAttributeTradeStonePercent"},{"location":"general/xs/constants/#11229-cattributelivestockfoodproductivity","text":"Value: int 254 ID of the player resource Livestock Food Productivity. Check here for more info about what this resource does.","title":"11.229. cAttributeLivestockFoodProductivity"},{"location":"general/xs/constants/#11230-cattributespeedupbuildingtype","text":"Value: int 255 ID of the player resource Speed Up Building Type. Check here for more info about what this resource does.","title":"11.230. cAttributeSpeedUpBuildingType"},{"location":"general/xs/constants/#11231-cattributespeedupbuildingrange","text":"Value: int 256 ID of the player resource Speed Up Building Range. Check here for more info about what this resource does.","title":"11.231. cAttributeSpeedUpBuildingRange"},{"location":"general/xs/constants/#11232-cattributespeeduppercentage","text":"Value: int 257 ID of the player resource Speed Up Percentage. Check here for more info about what this resource does.","title":"11.232. cAttributeSpeedUpPercentage"},{"location":"general/xs/constants/#11233-cattributespeedupobjecttype","text":"Value: int 258 ID of the player resource Speed Up Object Type. Check here for more info about what this resource does.","title":"11.233. cAttributeSpeedUpObjectType"},{"location":"general/xs/constants/#11234-cattributespeedupeffecttype","text":"Value: int 259 ID of the player resource Speed Up Effect Type. Check here for more info about what this resource does.","title":"11.234. cAttributeSpeedUpEffectType"},{"location":"general/xs/constants/#11235-cattributespeedupsecondaryeffecttype","text":"Value: int 260 ID of the player resource Speed Up Secondary Effect Type. Check here for more info about what this resource does.","title":"11.235. cAttributeSpeedUpSecondaryEffectType"},{"location":"general/xs/constants/#11236-cattributespeedupsecondarypercentage","text":"Value: int 261 ID of the player resource Speed Up Secondary Percentage. Check here for more info about what this resource does.","title":"11.236. cAttributeSpeedUpSecondaryPercentage"},{"location":"general/xs/constants/#11237-cattributeextraelephantconvertresist","text":"Value: int 262 ID of the player resource Extra Elephant Convert Resist. Check here for more info about what this resource does.","title":"11.237. cAttributeExtraElephantConvertResist"},{"location":"general/xs/constants/#11238-cattributestartingscoutid","text":"Value: int 263 ID of the player resource Starting Scout I D. Check here for more info about what this resource does.","title":"11.238. cAttributeStartingScoutID"},{"location":"general/xs/constants/#11239-cattributerelicwoodrate","text":"Value: int 264 ID of the player resource Relic Wood Rate. Check here for more info about what this resource does.","title":"11.239. cAttributeRelicWoodRate"},{"location":"general/xs/constants/#11240-cattributerelicstonerate","text":"Value: int 265 ID of the player resource Relic Stone Rate. Check here for more info about what this resource does.","title":"11.240. cAttributeRelicStoneRate"},{"location":"general/xs/functions/","text":"Written by: Alian713 1. Rules \u00b6 1.1. xsDisableRule \u00b6 Returning Type: void Prototype: void xsDisableRule ( string ruleName ) Parameters: string ruleName : The name of the rule to disable Disables the given rule. 1.2. xsDisableRuleGroup \u00b6 Returning Type: void Prototype: void xsDisableRuleGroup ( string ruleGroupName ) Parameters: string ruleGroupName : The name of the rule group to disable Disables all the rules in the given rule group 1.3. xsDisableSelf \u00b6 Returning Type: void Prototype: void xsDisableSelf () Disables the rule this function is called inside. Cannot be used outside of a rule's body! 1.4. xsEnableRule \u00b6 Returning Type: void Prototype: void xsEnableRule ( string ruleName ) Parameters: string ruleName : The name of the rule to enable Enables the given rule. 1.5. xsEnableRuleGroup \u00b6 Returning Type: void Prototype: void xsEnableRuleGroup ( string ruleGroupName ) Parameters: string ruleGroupName : The name of the rule group to enable Enables all the rules in the given rule group 1.6. xsIsRuleEnabled \u00b6 Returning Type: bool Prototype: bool xsIsRuleEnabled ( string ruleName ) Parameters: string ruleName : The name of the rule to check Returns true if the rule is enabled, else returns false. 1.7. xsIsRuleGroupEnabled \u00b6 Returning Type: bool Prototype: bool xsIsRuleGroupEnabled ( string ruleGroupName ) Parameters: string ruleGroupName : The name of the rule group to check Returns true, if all the rules in the given rule group are enabled 1.8. xsSetRuleMaxInterval \u00b6 Returning Type: void Prototype: void xsSetRuleMaxInterval ( string ruleName , int interval ) Parameters: string ruleName : The name of the rule to set the max interval of int interval : The new max interval of the rule Sets the max interval of the given rule. 1.9. xsSetRuleMaxIntervalSelf \u00b6 Returning Type: void Prototype: void xsSetRuleMaxIntervalSelf ( int interval ) Parameters: int interval : The new max interval of the rule Sets the max interval of the rule this function is called inside. Cannot be used outside of a rule's body! 1.10. xsSetRuleMinInterval \u00b6 Returning Type: void Prototype: void xsSetRuleMinInterval ( string ruleName , int interval ) Parameters: string ruleName : The name of the rule to set the min interval of int interval : The new min interval of the rule Sets the min interval of the given rule. 1.11. xsSetRuleMinIntervalSelf \u00b6 Returning Type: void Prototype: void xsSetRuleMinIntervalSelf ( int interval ) Parameters: int interval : The new min interval of the rule Sets the min interval of the rule this function is called inside. Cannot be used outside of a rule's body! 1.12. xsSetRulePriority \u00b6 Returning Type: void Prototype: void xsSetRulePriority ( string ruleName , int priority ) Parameters: string ruleName : The name of the rule to set the priority of int priority : The new priority of the rule Sets the priority of the given rule. 1.13. xsSetRulePrioritySelf \u00b6 Returning Type: void Prototype: void xsSetRulePrioritySelf ( int priority ) Parameters: int priority : The new priority of the rule Sets the priority of the rule this function is called inside. Cannot be used outside of a rule's body! 2. Vectors \u00b6 2.1. xsVectorGetX \u00b6 Returning Type: float Prototype: float xsVectorGetX ( vector v ) Parameters: vector v : The vector to get the X coordinate of The X coordinate of the vector given. 2.2. xsVectorGetY \u00b6 Returning Type: float Prototype: float xsVectorGetY ( vector v ) Parameters: vector v : The vector to get the Y coordinate of The Y coordinate of the vector given. 2.3. xsVectorGetZ \u00b6 Returning Type: float Prototype: float xsVectorGetZ ( vector v ) Parameters: vector v : The vector to get the Z coordinate of The Z coordinate of the vector given. 2.4. xsVectorLength \u00b6 Returning Type: float Prototype: float xsVectorLength ( vector v ) Parameters: vector v : The vector to calculate the length of Returns the length of the given vector. 2.5. xsVectorNormalize \u00b6 Returning Type: vector Prototype: vector xsVectorNormalize ( vector v ) Parameters: vector v : The vector to normalise Returns the normalised vector in the direction of the given vector. 2.6. xsVectorSet \u00b6 Returning Type: vector Prototype: vector xsVectorSet ( float x , float y , float z ) Parameters: float x : The value to set the X coordinate to float y : The value to set the Y coordinate to float z : The value to set the Z coordinate to Returns a vector with the given X, Y and Z components. 2.7. xsVectorSetX \u00b6 Returning Type: vector Prototype: vector xsVectorSetX ( vector v , float x ) Parameters: vector v : The vector to modify the X coordinate of float x : The value to set the X coordinate to Returns a new vector with the X component of the given vector changed to the given value. Note: This function DOES NOT modify the vector given as the parameter! 2.8. xsVectorSetY \u00b6 Returning Type: vector Prototype: vector xsVectorSetY ( vector v , float y ) Parameters: vector v : The vector to modify the Y coordinate of float y : The value to set the Y coordinate to Returns a new vector with the Y component of the given vector changed to the given value. Note: This function DOES NOT modify the vector given as the parameter! 2.9. xsVectorSetZ \u00b6 Returning Type: vector Prototype: vector xsVectorSetZ ( vector v , float z ) Parameters: vector v : The vector to modify the Z coordinate of float z : The value to set the Z coordinate to Returns a new vector with the Z component of the given vector changed to the given value. Note: This function DOES NOT modify the vector given as the parameter! 3. Arrays \u00b6 3.1. xsArrayCreateBool \u00b6 Returning Type: int Prototype: int xsArrayCreateBool ( int size , bool defaultValue , string uniqueName ) Parameters: int size : The length of the array to create bool defaultValue : The default value to initialise all the values in the array to string uniqueName : A unique name of the created array Creates an array of type bool and returns its ID. 3.2. xsArrayCreateFloat \u00b6 Returning Type: int Prototype: int xsArrayCreateFloat ( int size , float defaultValue , string uniqueName ) Parameters: int size : The length of the array to create float defaultValue : The default value to initialise all the values in the array to string uniqueName : A unique name of the created array Creates an array of type float and returns its ID. 3.3. xsArrayCreateInt \u00b6 Returning Type: int Prototype: int xsArrayCreateInt ( int size , int defaultValue , string uniqueName ) Parameters: int size : The length of the array to create int defaultValue : The default value to initialise all the values in the array to string uniqueName : A unique name of the created array Creates an array of type int and returns its ID. 3.4. xsArrayCreateString \u00b6 Returning Type: int Prototype: int xsArrayCreateString ( int size , string defaultValue , string uniqueName ) Parameters: int size : The length of the array to create string defaultValue : The default value to initialise all the values in the array to string uniqueName : A unique name of the created array Creates an array of type String and returns its ID. 3.5. xsArrayCreateVector \u00b6 Returning Type: int Prototype: int xsArrayCreateVector ( int size , vector defaultValue , string uniqueName ) Parameters: int size : The length of the array to create vector defaultValue : The default value to initialise all the values in the array to string uniqueName : A unique name of the created array Creates an array of type Vector and returns its ID. 3.6. xsArrayGetBool \u00b6 Returning Type: int Prototype: int xsArrayGetBool ( int arrayID , int index ) Parameters: int arrayID : The ID of the array to get the value from int index : The index to get the value of Gets and returns the value of the given bool array at the specifed index. 3.7. xsArrayGetFloat \u00b6 Returning Type: int Prototype: int xsArrayGetFloat ( int arrayID , int index ) Parameters: int arrayID : The ID of the array to get the value from int index : The index to get the value of Gets and returns the value of the given float array at the specifed index. 3.8. xsArrayGetInt \u00b6 Returning Type: int Prototype: int xsArrayGetInt ( int arrayID , int index ) Parameters: int arrayID : The ID of the array to get the value from int index : The index to get the value of Gets and returns the value of the given int array at the specifed index. 3.9. xsArrayGetSize \u00b6 Returning Type: int Prototype: int xsArrayGetSize ( int arrayID ) Parameters: int arrayID : The ID of the array to get the length of Returns the length of the given array. 3.10. xsArrayGetString \u00b6 Returning Type: int Prototype: int xsArrayGetString ( int arrayID , int index ) Parameters: int arrayID : The ID of the array to get the value from int index : The index to get the value of Gets and returns the value of the given String array at the specifed index. 3.11. xsArrayGetVector \u00b6 Returning Type: int Prototype: int xsArrayGetVector ( int arrayID , int index ) Parameters: int arrayID : The ID of the array to get the value from int index : The index to get the value of Gets and returns the value of the given Vector array at the specifed index. 3.12. xsArrayResizeBool \u00b6 Returning Type: int Prototype: int xsArrayResizeBool ( int arrayID , int newSize ) Parameters: int arrayID : The ID of the array to resize int newSize : The new size of the array Resizes the the given bool array to the specifed size and returns 1. 3.13. xsArrayResizeFloat \u00b6 Returning Type: int Prototype: int xsArrayResizeFloat ( int arrayID , int newSize ) Parameters: int arrayID : The ID of the array to resize int newSize : The new size of the array Resizes the the given float array to the specifed size and returns 1. 3.14. xsArrayResizeInt \u00b6 Returning Type: int Prototype: int xsArrayResizeInt ( int arrayID , int newSize ) Parameters: int arrayID : The ID of the array to resize int newSize : The new size of the array Resizes the the given int array to the specifed size and returns 1. 3.15. xsArrayResizeString \u00b6 Returning Type: int Prototype: int xsArrayResizeString ( int arrayID , int newSize ) Parameters: int arrayID : The ID of the array to resize int newSize : The new size of the array Resizes the the given String array to the specifed size and returns 1. 3.16. xsArrayResizeVector \u00b6 Returning Type: int Prototype: int xsArrayResizeVector ( int arrayID , int newSize ) Parameters: int arrayID : The ID of the array to resize int newSize : The new size of the array Resizes the the given Vector array to the specifed size and returns 1. 3.17. xsArraySetBool \u00b6 Returning Type: int Prototype: int xsArraySetBool ( int arrayID , int index , bool value ) Parameters: int arrayID : The ID of the array to set the value in int index : The index to set the value of bool value : The new value to set Sets the valuat the specified indedx e of the given bool arrindex to the provided value and returns 1. 3.18. xsArraySetFloat \u00b6 Returning Type: int Prototype: int xsArraySetFloat ( int arrayID , int index , float value ) Parameters: int arrayID : The ID of the array to set the value in int index : The index to set the value of float value : The new value to set Sets the valueat the specified indedx of the given float array to the provided value and returns 1. 3.19. xsArraySetInt \u00b6 Returning Type: int Prototype: int xsArraySetInt ( int arrayID , int index , int value ) Parameters: int arrayID : The ID of the array to set the value in int index : The index to set the value of int value : The new value to set Sets the valat the specified indedx ue of the given int arrindex to the provided value and returns 1. 3.20. xsArraySetString \u00b6 Returning Type: int Prototype: int xsArraySetString ( int arrayID , int index , string value ) Parameters: int arrayID : The ID of the array to set the value in int index : The index to set the value of string value : The new value to set Sets the value at the specified indedx of the given String array to the provided value and returns 1. 3.21. xsArraySetVector \u00b6 Returning Type: int Prototype: int xsArraySetVector ( int arrayID , int index , vector value ) Parameters: int arrayID : The ID of the array to set the value in int index : The index to set the value of vector value : The new value to set Sets the value at the specified indedx of the given Vector array to the provided value and returns 1. 4. Maths \u00b6 4.1. abs \u00b6 Returning Type: float Prototype: float abs ( float x ) Parameters: float x : The number to find the absolute value of Returns the absolute value (magnitude) of the given number. 4.2. acos \u00b6 Returning Type: float Prototype: float acos ( float x ) Parameters: float x : The value to find the inverse cosine of Returns the inverse cosine (arccos) of the given value 4.3. asin \u00b6 Returning Type: float Prototype: float asin ( float x ) Parameters: float x : The value to find the inverse sine of Returns the inverse sine (arcsin) of the given value 4.4. atan \u00b6 Returning Type: float Prototype: float atan ( float x ) Parameters: float x : The value to find the inverse tangent of Returns the inverse tangent (arctan) of the given value 4.5. atan2 \u00b6 Returning Type: float Prototype: float atan2 ( float x ) Parameters: float x : The X coordinate of the point to find the amplitude of This is supposed to be the atan2(y, x) function but apparently it only takes one input. ThxDE 4.6. cos \u00b6 Returning Type: float Prototype: float cos ( float x ) Parameters: float x : The angle (in radians) to find the cosine of Returns the cosine of the angle in radians 4.7. pow \u00b6 Returning Type: float Prototype: float pow ( float x , float y ) Parameters: float x : The base value float y : The exponenet to raise the base value to Returns x raised to the power y (x**y). 4.8. sin \u00b6 Returning Type: float Prototype: float sin ( float x ) Parameters: float x : The angle (in radians) to find the sine of Returns the sine of the angle in radians. 4.9. sqrt \u00b6 Returning Type: float Prototype: float sqrt ( float x ) Parameters: float x : The number to find the square root of Returns the square root of the given number. 4.10. tan \u00b6 Returning Type: float Prototype: float tan ( float x ) Parameters: float x : The angle (in radians) to find the tangent of Returns the tangent of the angle in radians 5. General \u00b6 5.1. xsChatData \u00b6 Returning Type: void Prototype: void xsChatData ( string message , int value ) Parameters: string message : The message to display in chat (Optional) int value : This value is inserted in place of any %d used in the message of the function Shows the given message in the game chat 5.2. xsEffectAmount \u00b6 Returning Type: void Prototype: void xsEffectAmount ( int effectID , int unitOrTechnologyID , int attributeOrOperation , float value , int playerNumber ) Parameters: int effectID : The ID of the effect to use int unitOrTechnologyID : The ID of the unit or technology to effect int attributeOrOperation : The attribute to modify or the operation to perform float value : The value of the effect (Optional) int playerNumber : The player to apply the effect to. If unspecified, applies to all players except Gaia. Change the specified attribute of the specified unit or technology by the value for the specified player. For more information on this, check the UserPatch section of the guide 5.3. xsGetGameTime \u00b6 Returning Type: int Prototype: int xsGetGameTime () Returns the current game time in seconds 5.4. xsGetMapHeight \u00b6 Returning Type: int Prototype: int xsGetMapHeight () Returns the Height of the map. 5.5. xsGetMapID \u00b6 Returning Type: int Prototype: int xsGetMapID () Returns the AI map type. 5.6. xsGetMapName \u00b6 Returning Type: string Prototype: string xsGetMapName ( bool showFileExtension ) Parameters: bool showFileExtension : If this is set to true, then the returned name also contains the file extension Returns the name of the map currently being played. 5.7. xsGetMapWidth \u00b6 Returning Type: int Prototype: int xsGetMapWidth () Returns the Width of the map. 5.8. xsGetNumPlayers \u00b6 Returning Type: int Prototype: int xsGetNumPlayers () Returns the number of players in the game 5.9. xsGetObjectCount \u00b6 Returning Type: int Prototype: int xsGetObjectCount ( int playerId , int id ) Parameters: int playerId : The player to get the object count for int id : The ID of the object to get the count for Returns the number of currently alive objects of with the given ID of the specified player. The behaviours of these two functions is identical, the same descriptions are not a mistake. 5.10. xsGetObjectCountTotal \u00b6 Returning Type: int Prototype: int xsGetObjectCountTotal ( int playerId , int id ) Parameters: int playerId : The player to get the object count for int id : The ID of the object to get the count for Returns the number of currently alive objects of with the given ID of the specified player. The behaviours of these two functions is identical, the same descriptions are not a mistake. 5.11. xsGetPlayerCivilization \u00b6 Returning Type: int Prototype: int xsGetPlayerCivilization ( int playerNumber ) Parameters: int playerNumber : The player to get the civilization of Returns the civilization ID of the given player. Refer to the Constant Reference for all the different civ IDs 5.12. xsGetPlayerInGame \u00b6 Returning Type: bool Prototype: bool xsGetPlayerInGame ( int playerNumber ) Parameters: int playerNumber : Check if this player is still alive Returns true if the player given is still alive, and false otherwise. 5.13. xsGetPlayerNumberOfTechs \u00b6 Returning Type: int Prototype: int xsGetPlayerNumberOfTechs ( int playerNumber ) Parameters: int playerNumber : The player whoes technology count is being requested. Returns the number of technologies available to the player in the entire game. 5.14. xsGetRandomNumber \u00b6 Returning Type: int Prototype: int xsGetRandomNumber () Returns a random number between 0 and 32766. 5.15. xsGetRandomNumberLH \u00b6 Returning Type: int Prototype: int xsGetRandomNumberLH ( int low , int high ) Parameters: int low : The lower bound for the range for the random number returned (included) int high : The upper bound for the range for the random number returned (excluded) Returns a random number between low and high 5.16. xsGetRandomNumberMax \u00b6 Returning Type: int Prototype: int xsGetRandomNumberMax ( int max ) Parameters: int max : The upper bound for the range for the random number returned (excluded) Returns a random number between 0 and max . 5.17. xsGetTime \u00b6 Returning Type: int Prototype: int xsGetTime () Returns the current game time - 1 in seconds 5.18. xsGetVictoryCondition \u00b6 Returning Type: int Prototype: int xsGetVictoryCondition () Returns one of these constants: cStandardVictory cWonderVictory cRelicVictory cKingOfTheHillVictory 5.19. xsGetVictoryConditionForSecondaryGameMode \u00b6 Returning Type: int Prototype: int xsGetVictoryConditionForSecondaryGameMode () Returns one of these constants: cStandardVictory cWonderVictory cRelicVictory cKingOfTheHillVictory 5.20. xsGetVictoryPlayer \u00b6 Returning Type: int Prototype: int xsGetVictoryPlayer () Returns the number of the player with the highest score in a normal game. Returns the number of the player who owns 5 relics or has a wonder if standard victory is enabled. In a game like KoTH, returns the number of the player who owns the monument. 5.21. xsGetVictoryPlayerForSecondaryGameMode \u00b6 Returning Type: int Prototype: int xsGetVictoryPlayerForSecondaryGameMode () Returns 1 when no secondary game mode is set. Returns the number of the player who owns the monument in game modes like KotH 5.22. xsGetVictoryTime \u00b6 Returning Type: int Prototype: int xsGetVictoryTime () For game modes like KoTH and other game modes where there is a timer on the screen, it returns the amount of time left in half seconds. meaning if the value returned is 799, it means there are 399.5s remaining. Returns -1 otherwise 5.23. xsGetVictoryTimeForSecondaryGameMode \u00b6 Returning Type: int Prototype: int xsGetVictoryTimeForSecondaryGameMode () For game modes like KoTH and other game modes where there is a timer on the screen, it returns the amount of time left in half seconds. meaning if the value returned is 799, it means there are 399.5s remaining. Returns -1 otherwise 5.24. xsGetVictoryType \u00b6 Returning Type: int Prototype: int xsGetVictoryType () Returns an integer corresponding to different victory settings ingame. These are: 0: Standard 1: Conquest 2: Time Limit 3: Score 4: Custom (scenarios only). Last Man Standing returns 0 as well. 5.25. xsPlayerAttribute \u00b6 Returning Type: float Prototype: float xsPlayerAttribute ( int playerNumber , int resourceID ) Parameters: int playerNumber : The player to get the resource of (0 for Gaia) int resourceID : The ID of the resource to get the amount of Returns the amount the specified resource of the given player. 5.26. xsResearchTechnology \u00b6 Returning Type: bool Prototype: bool xsResearchTechnology ( int techID , bool force , bool techAvailable , int playerNumber ) Parameters: int techID : The technology ID to research. bool force : Force researching the tech even if it is not enabled. To force an unavailable tech, the argument techAvailable must be set to false bool techAvailable : This flag determines if it is required to check if a tech is available before researching it int playerNumber : The player to research the technology for Returns a boolean based on whether the technology was researched or not. 5.27. xsSetPlayerAttribute \u00b6 Returning Type: void Prototype: void xsSetPlayerAttribute ( int playerNumber , int resourceID , float value ) Parameters: int playerNumber : The player to set the resource of (0 for Gaia) int resourceID : The ID of the resource to set the amount of float value : The amount to set the resource to Sets the amount of the specified resource of the given player to the provided value. 5.28. xsSetTriggerVariable \u00b6 Returning Type: void Prototype: void xsSetTriggerVariable ( int variableID , int value ) Parameters: int variableID : The ID of the variable to set the value of int value : The value to set the variable to Sets the value of the variable of the given variable ID to the provided value. 5.29. xsTriggerVariable \u00b6 Returning Type: int Prototype: int xsTriggerVariable ( int variableID ) Parameters: int variableID : The ID of the variable to get the value of Returns the value of the variable of the given variable ID. 6. Read/Write \u00b6 6.1. xsCloseFile \u00b6 Returning Type: bool Prototype: bool xsCloseFile () Close the currently opened or created file. Returns true if the file was successfully closed 6.2. xsCreateFile \u00b6 Returning Type: bool Prototype: bool xsCreateFile ( bool append ) Parameters: (Optional) bool append : Default: true . If set to false , this will overwrite any existing file with the same name. Creates a new (or appends to an existing) .xsdat file with the same name as the RMS/scenario being played. After invoking this function, the writing functions can be used to write data to the file. Returns true if the file was successfully created 6.3. xsGetDataTypeSize \u00b6 Returning Type: int Prototype: int xsGetDataTypeSize ( int type ) Parameters: int type : One of the cOffsetXXX constants may be used as a parameter Returns the number of bytes used to store a given type value. 6.4. xsGetFilePosition \u00b6 Returning Type: int Prototype: int xsGetFilePosition () Gets the byte (0-indexed) of the file that the next read function will start reading from. 6.5. xsGetFileSize \u00b6 Returning Type: int Prototype: int xsGetFileSize () Gets the size (in bytes) of the currently open file 6.6. xsOffsetFilePosition \u00b6 Returning Type: bool Prototype: bool xsOffsetFilePosition ( int dataType , bool forward ) Parameters: int dataType : The cOffset constants can be used to specify the datatype used for the offset. Integers and floats are 4 bytes long, vectors are 12 bytes long and strings can be of variable length (specified by the 32 bit int preceeding the chars of the string) (Optional) bool forward : Default: true . Setting this to false will make the file position move back Moves the file position forward (or backward) relative to the current file position, and by an amount of bytes equivalent to reading the given data type 6.7. xsOpenFile \u00b6 Returning Type: bool Prototype: bool xsOpenFile ( string filename ) Parameters: string filename : The name of the file to open, without the .xsdat extension Opens an existing .xsdat file in read only mode. After invoking this function, the reading functions can be used to read data from the file. Returns true if the file was successfully opened 6.8. xsReadFloat \u00b6 Returning Type: float Prototype: float xsReadFloat () Reads and returns a float from the previously opened .xsdat file. Note that this function does not check if the value being read is actually meant to be a float, which means the value being read is bit casted into a float regardless of what it originally was. This function also moves the file position forward by 4 bytes 6.9. xsReadInt \u00b6 Returning Type: int Prototype: int xsReadInt () Reads and returns an integer from the previously opened .xsdat file. Note that this function does not check if the value being read is actually meant to be an integer, which means the value being read is bit casted into an integer regardless of what it originally was. This function also moves the file position forward by 4 bytes 6.10. xsReadString \u00b6 Returning Type: string Prototype: string xsReadString () Reads and returns a string from the previously opened .xsdat file. Note that this function does not check if the value being read is actually meant to be a string, which means the value being read is bit casted into a string regardless of what it originally was. This function also moves the file position forward by 4 bytes + the amount of bytes in the length of the string 6.11. xsReadVector \u00b6 Returning Type: vector Prototype: vector xsReadVector () Reads and returns a vector from the previously opened .xsdat file. Note that this function does not check if the value being read is actually meant to be a vector, which means the value being read is bit casted into a vector regardless of what it originally was. This function also moves the file position forward by 12 bytes 6.12. xsSetFilePosition \u00b6 Returning Type: bool Prototype: bool xsSetFilePosition ( int byteOffset ) Parameters: int byteOffset : 0 indexed byte offset to determine which byte to read and return from the file Sets the byte (0-indexed) of the file that the next read function will start reading from. 6.13. xsWriteFloat \u00b6 Returning Type: bool Prototype: bool xsWriteFloat ( float data ) Parameters: float data : The float value to write Writes a floating point number to the previously created .xsdat file. Causes an error if a file hasn't been opened before using. Returns true if the floating point number was successfully written. Floats are written in the 32 bit IEEE 754 format 6.14. xsWriteInt \u00b6 Returning Type: bool Prototype: bool xsWriteInt ( int data ) Parameters: int data : The integer to write Writes an integer to the previously created .xsdat file. Causes an error if a file hasn't been opened before using. Returns true if the integer was successfully written. Integers are written as signed 32 bit numbers 6.15. xsWriteString \u00b6 Returning Type: bool Prototype: bool xsWriteString ( string data ) Parameters: string data : The string to write Writes a string to the previously created .xsdat file. Causes an error if a file hasn't been opened before using. Returns true if the string was successfully written. A string is written to the file in two parts, an unsigned 32 bit integer (indicates the length of the string) followed by that many bytes making up the actual characters of the string 6.16. xsWriteVector \u00b6 Returning Type: bool Prototype: bool xsWriteVector ( vector data ) Parameters: vector data : The vector to write Writes a vector to the previously created .xsdat file. Causes an error if a file hasn't been opened before using. Returns true if the vector was successfully written. Vectors are written as 3 consecutive floating point numbers, one for each coordinate. 7. Functions With Seemingly No Practical Use \u00b6 7.1. xsAddRuntimeEvent \u00b6 Returning Type: bool Prototype: bool xsAddRuntimeEvent ( string runtimeName , string functionName , int functionArgument ) Parameters: string runtimeName : This is the name of the runtime to create the event in. This should be \"Random Map\" for RMS and \"Scenario Triggers\" for scenarios. Find which one to use in a general script by using the xsGetMapName ( true ) function and checking the extension. string functionName : This is the name of a user defined function that takes a single integer argument int functionArgument : This is an integer argument that is passed to the function given to the argument functionName when this event runs. A runtime event is called after all the XS code has finished executing but before rules start executing. It calls the function functionName given to it with the functionArgument passed to it as a parameter. For programmers familiar with the terminology, this is basically a way to set a callback. It also returns true if the function name given to it exists, otherwise it returns false. Does not work with built-ins 7.2. xsBreakPoint \u00b6 Returning Type: void Prototype: void xsBreakPoint () This function adds a break point to the execution of code. Do not use this function and beware, if you do, it will likely cause a crash! 7.3. xsDumpArrays \u00b6 Returning Type: void Prototype: void xsDumpArrays () This function is supposed to blogs out all XS arrays. Currently, it does absolutely nothing. 7.4. xsGetContextPlayer \u00b6 Returning Type: int Prototype: int xsGetContextPlayer () Returns the current context player ID. 7.5. xsGetFunctionID \u00b6 Returning Type: int Prototype: int xsGetFunctionID ( string functionName ) Parameters: string functionName : The name of the function to get the hash of Returns the hash of a given function. This function has no practical application and is probably for internal usage only. 7.6. xsSetContextPlayer \u00b6 Returning Type: void Prototype: void xsSetContextPlayer ( int playerNumber ) Parameters: int playerNumber : The player to set the context player to In other functions involving a playerNumber argument, the value of the context player is used if -1 is passed as playerNumber to them. xsEffectAmount will use the value of the context player as its player if -2 is passed to it as the player argument.","title":"Functions Reference"},{"location":"general/xs/functions/#1-rules","text":"","title":"1. Rules"},{"location":"general/xs/functions/#11-xsdisablerule","text":"Returning Type: void Prototype: void xsDisableRule ( string ruleName ) Parameters: string ruleName : The name of the rule to disable Disables the given rule.","title":"1.1. xsDisableRule"},{"location":"general/xs/functions/#12-xsdisablerulegroup","text":"Returning Type: void Prototype: void xsDisableRuleGroup ( string ruleGroupName ) Parameters: string ruleGroupName : The name of the rule group to disable Disables all the rules in the given rule group","title":"1.2. xsDisableRuleGroup"},{"location":"general/xs/functions/#13-xsdisableself","text":"Returning Type: void Prototype: void xsDisableSelf () Disables the rule this function is called inside. Cannot be used outside of a rule's body!","title":"1.3. xsDisableSelf"},{"location":"general/xs/functions/#14-xsenablerule","text":"Returning Type: void Prototype: void xsEnableRule ( string ruleName ) Parameters: string ruleName : The name of the rule to enable Enables the given rule.","title":"1.4. xsEnableRule"},{"location":"general/xs/functions/#15-xsenablerulegroup","text":"Returning Type: void Prototype: void xsEnableRuleGroup ( string ruleGroupName ) Parameters: string ruleGroupName : The name of the rule group to enable Enables all the rules in the given rule group","title":"1.5. xsEnableRuleGroup"},{"location":"general/xs/functions/#16-xsisruleenabled","text":"Returning Type: bool Prototype: bool xsIsRuleEnabled ( string ruleName ) Parameters: string ruleName : The name of the rule to check Returns true if the rule is enabled, else returns false.","title":"1.6. xsIsRuleEnabled"},{"location":"general/xs/functions/#17-xsisrulegroupenabled","text":"Returning Type: bool Prototype: bool xsIsRuleGroupEnabled ( string ruleGroupName ) Parameters: string ruleGroupName : The name of the rule group to check Returns true, if all the rules in the given rule group are enabled","title":"1.7. xsIsRuleGroupEnabled"},{"location":"general/xs/functions/#18-xssetrulemaxinterval","text":"Returning Type: void Prototype: void xsSetRuleMaxInterval ( string ruleName , int interval ) Parameters: string ruleName : The name of the rule to set the max interval of int interval : The new max interval of the rule Sets the max interval of the given rule.","title":"1.8. xsSetRuleMaxInterval"},{"location":"general/xs/functions/#19-xssetrulemaxintervalself","text":"Returning Type: void Prototype: void xsSetRuleMaxIntervalSelf ( int interval ) Parameters: int interval : The new max interval of the rule Sets the max interval of the rule this function is called inside. Cannot be used outside of a rule's body!","title":"1.9. xsSetRuleMaxIntervalSelf"},{"location":"general/xs/functions/#110-xssetrulemininterval","text":"Returning Type: void Prototype: void xsSetRuleMinInterval ( string ruleName , int interval ) Parameters: string ruleName : The name of the rule to set the min interval of int interval : The new min interval of the rule Sets the min interval of the given rule.","title":"1.10. xsSetRuleMinInterval"},{"location":"general/xs/functions/#111-xssetruleminintervalself","text":"Returning Type: void Prototype: void xsSetRuleMinIntervalSelf ( int interval ) Parameters: int interval : The new min interval of the rule Sets the min interval of the rule this function is called inside. Cannot be used outside of a rule's body!","title":"1.11. xsSetRuleMinIntervalSelf"},{"location":"general/xs/functions/#112-xssetrulepriority","text":"Returning Type: void Prototype: void xsSetRulePriority ( string ruleName , int priority ) Parameters: string ruleName : The name of the rule to set the priority of int priority : The new priority of the rule Sets the priority of the given rule.","title":"1.12. xsSetRulePriority"},{"location":"general/xs/functions/#113-xssetrulepriorityself","text":"Returning Type: void Prototype: void xsSetRulePrioritySelf ( int priority ) Parameters: int priority : The new priority of the rule Sets the priority of the rule this function is called inside. Cannot be used outside of a rule's body!","title":"1.13. xsSetRulePrioritySelf"},{"location":"general/xs/functions/#2-vectors","text":"","title":"2. Vectors"},{"location":"general/xs/functions/#21-xsvectorgetx","text":"Returning Type: float Prototype: float xsVectorGetX ( vector v ) Parameters: vector v : The vector to get the X coordinate of The X coordinate of the vector given.","title":"2.1. xsVectorGetX"},{"location":"general/xs/functions/#22-xsvectorgety","text":"Returning Type: float Prototype: float xsVectorGetY ( vector v ) Parameters: vector v : The vector to get the Y coordinate of The Y coordinate of the vector given.","title":"2.2. xsVectorGetY"},{"location":"general/xs/functions/#23-xsvectorgetz","text":"Returning Type: float Prototype: float xsVectorGetZ ( vector v ) Parameters: vector v : The vector to get the Z coordinate of The Z coordinate of the vector given.","title":"2.3. xsVectorGetZ"},{"location":"general/xs/functions/#24-xsvectorlength","text":"Returning Type: float Prototype: float xsVectorLength ( vector v ) Parameters: vector v : The vector to calculate the length of Returns the length of the given vector.","title":"2.4. xsVectorLength"},{"location":"general/xs/functions/#25-xsvectornormalize","text":"Returning Type: vector Prototype: vector xsVectorNormalize ( vector v ) Parameters: vector v : The vector to normalise Returns the normalised vector in the direction of the given vector.","title":"2.5. xsVectorNormalize"},{"location":"general/xs/functions/#26-xsvectorset","text":"Returning Type: vector Prototype: vector xsVectorSet ( float x , float y , float z ) Parameters: float x : The value to set the X coordinate to float y : The value to set the Y coordinate to float z : The value to set the Z coordinate to Returns a vector with the given X, Y and Z components.","title":"2.6. xsVectorSet"},{"location":"general/xs/functions/#27-xsvectorsetx","text":"Returning Type: vector Prototype: vector xsVectorSetX ( vector v , float x ) Parameters: vector v : The vector to modify the X coordinate of float x : The value to set the X coordinate to Returns a new vector with the X component of the given vector changed to the given value. Note: This function DOES NOT modify the vector given as the parameter!","title":"2.7. xsVectorSetX"},{"location":"general/xs/functions/#28-xsvectorsety","text":"Returning Type: vector Prototype: vector xsVectorSetY ( vector v , float y ) Parameters: vector v : The vector to modify the Y coordinate of float y : The value to set the Y coordinate to Returns a new vector with the Y component of the given vector changed to the given value. Note: This function DOES NOT modify the vector given as the parameter!","title":"2.8. xsVectorSetY"},{"location":"general/xs/functions/#29-xsvectorsetz","text":"Returning Type: vector Prototype: vector xsVectorSetZ ( vector v , float z ) Parameters: vector v : The vector to modify the Z coordinate of float z : The value to set the Z coordinate to Returns a new vector with the Z component of the given vector changed to the given value. Note: This function DOES NOT modify the vector given as the parameter!","title":"2.9. xsVectorSetZ"},{"location":"general/xs/functions/#3-arrays","text":"","title":"3. Arrays"},{"location":"general/xs/functions/#31-xsarraycreatebool","text":"Returning Type: int Prototype: int xsArrayCreateBool ( int size , bool defaultValue , string uniqueName ) Parameters: int size : The length of the array to create bool defaultValue : The default value to initialise all the values in the array to string uniqueName : A unique name of the created array Creates an array of type bool and returns its ID.","title":"3.1. xsArrayCreateBool"},{"location":"general/xs/functions/#32-xsarraycreatefloat","text":"Returning Type: int Prototype: int xsArrayCreateFloat ( int size , float defaultValue , string uniqueName ) Parameters: int size : The length of the array to create float defaultValue : The default value to initialise all the values in the array to string uniqueName : A unique name of the created array Creates an array of type float and returns its ID.","title":"3.2. xsArrayCreateFloat"},{"location":"general/xs/functions/#33-xsarraycreateint","text":"Returning Type: int Prototype: int xsArrayCreateInt ( int size , int defaultValue , string uniqueName ) Parameters: int size : The length of the array to create int defaultValue : The default value to initialise all the values in the array to string uniqueName : A unique name of the created array Creates an array of type int and returns its ID.","title":"3.3. xsArrayCreateInt"},{"location":"general/xs/functions/#34-xsarraycreatestring","text":"Returning Type: int Prototype: int xsArrayCreateString ( int size , string defaultValue , string uniqueName ) Parameters: int size : The length of the array to create string defaultValue : The default value to initialise all the values in the array to string uniqueName : A unique name of the created array Creates an array of type String and returns its ID.","title":"3.4. xsArrayCreateString"},{"location":"general/xs/functions/#35-xsarraycreatevector","text":"Returning Type: int Prototype: int xsArrayCreateVector ( int size , vector defaultValue , string uniqueName ) Parameters: int size : The length of the array to create vector defaultValue : The default value to initialise all the values in the array to string uniqueName : A unique name of the created array Creates an array of type Vector and returns its ID.","title":"3.5. xsArrayCreateVector"},{"location":"general/xs/functions/#36-xsarraygetbool","text":"Returning Type: int Prototype: int xsArrayGetBool ( int arrayID , int index ) Parameters: int arrayID : The ID of the array to get the value from int index : The index to get the value of Gets and returns the value of the given bool array at the specifed index.","title":"3.6. xsArrayGetBool"},{"location":"general/xs/functions/#37-xsarraygetfloat","text":"Returning Type: int Prototype: int xsArrayGetFloat ( int arrayID , int index ) Parameters: int arrayID : The ID of the array to get the value from int index : The index to get the value of Gets and returns the value of the given float array at the specifed index.","title":"3.7. xsArrayGetFloat"},{"location":"general/xs/functions/#38-xsarraygetint","text":"Returning Type: int Prototype: int xsArrayGetInt ( int arrayID , int index ) Parameters: int arrayID : The ID of the array to get the value from int index : The index to get the value of Gets and returns the value of the given int array at the specifed index.","title":"3.8. xsArrayGetInt"},{"location":"general/xs/functions/#39-xsarraygetsize","text":"Returning Type: int Prototype: int xsArrayGetSize ( int arrayID ) Parameters: int arrayID : The ID of the array to get the length of Returns the length of the given array.","title":"3.9. xsArrayGetSize"},{"location":"general/xs/functions/#310-xsarraygetstring","text":"Returning Type: int Prototype: int xsArrayGetString ( int arrayID , int index ) Parameters: int arrayID : The ID of the array to get the value from int index : The index to get the value of Gets and returns the value of the given String array at the specifed index.","title":"3.10. xsArrayGetString"},{"location":"general/xs/functions/#311-xsarraygetvector","text":"Returning Type: int Prototype: int xsArrayGetVector ( int arrayID , int index ) Parameters: int arrayID : The ID of the array to get the value from int index : The index to get the value of Gets and returns the value of the given Vector array at the specifed index.","title":"3.11. xsArrayGetVector"},{"location":"general/xs/functions/#312-xsarrayresizebool","text":"Returning Type: int Prototype: int xsArrayResizeBool ( int arrayID , int newSize ) Parameters: int arrayID : The ID of the array to resize int newSize : The new size of the array Resizes the the given bool array to the specifed size and returns 1.","title":"3.12. xsArrayResizeBool"},{"location":"general/xs/functions/#313-xsarrayresizefloat","text":"Returning Type: int Prototype: int xsArrayResizeFloat ( int arrayID , int newSize ) Parameters: int arrayID : The ID of the array to resize int newSize : The new size of the array Resizes the the given float array to the specifed size and returns 1.","title":"3.13. xsArrayResizeFloat"},{"location":"general/xs/functions/#314-xsarrayresizeint","text":"Returning Type: int Prototype: int xsArrayResizeInt ( int arrayID , int newSize ) Parameters: int arrayID : The ID of the array to resize int newSize : The new size of the array Resizes the the given int array to the specifed size and returns 1.","title":"3.14. xsArrayResizeInt"},{"location":"general/xs/functions/#315-xsarrayresizestring","text":"Returning Type: int Prototype: int xsArrayResizeString ( int arrayID , int newSize ) Parameters: int arrayID : The ID of the array to resize int newSize : The new size of the array Resizes the the given String array to the specifed size and returns 1.","title":"3.15. xsArrayResizeString"},{"location":"general/xs/functions/#316-xsarrayresizevector","text":"Returning Type: int Prototype: int xsArrayResizeVector ( int arrayID , int newSize ) Parameters: int arrayID : The ID of the array to resize int newSize : The new size of the array Resizes the the given Vector array to the specifed size and returns 1.","title":"3.16. xsArrayResizeVector"},{"location":"general/xs/functions/#317-xsarraysetbool","text":"Returning Type: int Prototype: int xsArraySetBool ( int arrayID , int index , bool value ) Parameters: int arrayID : The ID of the array to set the value in int index : The index to set the value of bool value : The new value to set Sets the valuat the specified indedx e of the given bool arrindex to the provided value and returns 1.","title":"3.17. xsArraySetBool"},{"location":"general/xs/functions/#318-xsarraysetfloat","text":"Returning Type: int Prototype: int xsArraySetFloat ( int arrayID , int index , float value ) Parameters: int arrayID : The ID of the array to set the value in int index : The index to set the value of float value : The new value to set Sets the valueat the specified indedx of the given float array to the provided value and returns 1.","title":"3.18. xsArraySetFloat"},{"location":"general/xs/functions/#319-xsarraysetint","text":"Returning Type: int Prototype: int xsArraySetInt ( int arrayID , int index , int value ) Parameters: int arrayID : The ID of the array to set the value in int index : The index to set the value of int value : The new value to set Sets the valat the specified indedx ue of the given int arrindex to the provided value and returns 1.","title":"3.19. xsArraySetInt"},{"location":"general/xs/functions/#320-xsarraysetstring","text":"Returning Type: int Prototype: int xsArraySetString ( int arrayID , int index , string value ) Parameters: int arrayID : The ID of the array to set the value in int index : The index to set the value of string value : The new value to set Sets the value at the specified indedx of the given String array to the provided value and returns 1.","title":"3.20. xsArraySetString"},{"location":"general/xs/functions/#321-xsarraysetvector","text":"Returning Type: int Prototype: int xsArraySetVector ( int arrayID , int index , vector value ) Parameters: int arrayID : The ID of the array to set the value in int index : The index to set the value of vector value : The new value to set Sets the value at the specified indedx of the given Vector array to the provided value and returns 1.","title":"3.21. xsArraySetVector"},{"location":"general/xs/functions/#4-maths","text":"","title":"4. Maths"},{"location":"general/xs/functions/#41-abs","text":"Returning Type: float Prototype: float abs ( float x ) Parameters: float x : The number to find the absolute value of Returns the absolute value (magnitude) of the given number.","title":"4.1. abs"},{"location":"general/xs/functions/#42-acos","text":"Returning Type: float Prototype: float acos ( float x ) Parameters: float x : The value to find the inverse cosine of Returns the inverse cosine (arccos) of the given value","title":"4.2. acos"},{"location":"general/xs/functions/#43-asin","text":"Returning Type: float Prototype: float asin ( float x ) Parameters: float x : The value to find the inverse sine of Returns the inverse sine (arcsin) of the given value","title":"4.3. asin"},{"location":"general/xs/functions/#44-atan","text":"Returning Type: float Prototype: float atan ( float x ) Parameters: float x : The value to find the inverse tangent of Returns the inverse tangent (arctan) of the given value","title":"4.4. atan"},{"location":"general/xs/functions/#45-atan2","text":"Returning Type: float Prototype: float atan2 ( float x ) Parameters: float x : The X coordinate of the point to find the amplitude of This is supposed to be the atan2(y, x) function but apparently it only takes one input. ThxDE","title":"4.5. atan2"},{"location":"general/xs/functions/#46-cos","text":"Returning Type: float Prototype: float cos ( float x ) Parameters: float x : The angle (in radians) to find the cosine of Returns the cosine of the angle in radians","title":"4.6. cos"},{"location":"general/xs/functions/#47-pow","text":"Returning Type: float Prototype: float pow ( float x , float y ) Parameters: float x : The base value float y : The exponenet to raise the base value to Returns x raised to the power y (x**y).","title":"4.7. pow"},{"location":"general/xs/functions/#48-sin","text":"Returning Type: float Prototype: float sin ( float x ) Parameters: float x : The angle (in radians) to find the sine of Returns the sine of the angle in radians.","title":"4.8. sin"},{"location":"general/xs/functions/#49-sqrt","text":"Returning Type: float Prototype: float sqrt ( float x ) Parameters: float x : The number to find the square root of Returns the square root of the given number.","title":"4.9. sqrt"},{"location":"general/xs/functions/#410-tan","text":"Returning Type: float Prototype: float tan ( float x ) Parameters: float x : The angle (in radians) to find the tangent of Returns the tangent of the angle in radians","title":"4.10. tan"},{"location":"general/xs/functions/#5-general","text":"","title":"5. General"},{"location":"general/xs/functions/#51-xschatdata","text":"Returning Type: void Prototype: void xsChatData ( string message , int value ) Parameters: string message : The message to display in chat (Optional) int value : This value is inserted in place of any %d used in the message of the function Shows the given message in the game chat","title":"5.1. xsChatData"},{"location":"general/xs/functions/#52-xseffectamount","text":"Returning Type: void Prototype: void xsEffectAmount ( int effectID , int unitOrTechnologyID , int attributeOrOperation , float value , int playerNumber ) Parameters: int effectID : The ID of the effect to use int unitOrTechnologyID : The ID of the unit or technology to effect int attributeOrOperation : The attribute to modify or the operation to perform float value : The value of the effect (Optional) int playerNumber : The player to apply the effect to. If unspecified, applies to all players except Gaia. Change the specified attribute of the specified unit or technology by the value for the specified player. For more information on this, check the UserPatch section of the guide","title":"5.2. xsEffectAmount"},{"location":"general/xs/functions/#53-xsgetgametime","text":"Returning Type: int Prototype: int xsGetGameTime () Returns the current game time in seconds","title":"5.3. xsGetGameTime"},{"location":"general/xs/functions/#54-xsgetmapheight","text":"Returning Type: int Prototype: int xsGetMapHeight () Returns the Height of the map.","title":"5.4. xsGetMapHeight"},{"location":"general/xs/functions/#55-xsgetmapid","text":"Returning Type: int Prototype: int xsGetMapID () Returns the AI map type.","title":"5.5. xsGetMapID"},{"location":"general/xs/functions/#56-xsgetmapname","text":"Returning Type: string Prototype: string xsGetMapName ( bool showFileExtension ) Parameters: bool showFileExtension : If this is set to true, then the returned name also contains the file extension Returns the name of the map currently being played.","title":"5.6. xsGetMapName"},{"location":"general/xs/functions/#57-xsgetmapwidth","text":"Returning Type: int Prototype: int xsGetMapWidth () Returns the Width of the map.","title":"5.7. xsGetMapWidth"},{"location":"general/xs/functions/#58-xsgetnumplayers","text":"Returning Type: int Prototype: int xsGetNumPlayers () Returns the number of players in the game","title":"5.8. xsGetNumPlayers"},{"location":"general/xs/functions/#59-xsgetobjectcount","text":"Returning Type: int Prototype: int xsGetObjectCount ( int playerId , int id ) Parameters: int playerId : The player to get the object count for int id : The ID of the object to get the count for Returns the number of currently alive objects of with the given ID of the specified player. The behaviours of these two functions is identical, the same descriptions are not a mistake.","title":"5.9. xsGetObjectCount"},{"location":"general/xs/functions/#510-xsgetobjectcounttotal","text":"Returning Type: int Prototype: int xsGetObjectCountTotal ( int playerId , int id ) Parameters: int playerId : The player to get the object count for int id : The ID of the object to get the count for Returns the number of currently alive objects of with the given ID of the specified player. The behaviours of these two functions is identical, the same descriptions are not a mistake.","title":"5.10. xsGetObjectCountTotal"},{"location":"general/xs/functions/#511-xsgetplayercivilization","text":"Returning Type: int Prototype: int xsGetPlayerCivilization ( int playerNumber ) Parameters: int playerNumber : The player to get the civilization of Returns the civilization ID of the given player. Refer to the Constant Reference for all the different civ IDs","title":"5.11. xsGetPlayerCivilization"},{"location":"general/xs/functions/#512-xsgetplayeringame","text":"Returning Type: bool Prototype: bool xsGetPlayerInGame ( int playerNumber ) Parameters: int playerNumber : Check if this player is still alive Returns true if the player given is still alive, and false otherwise.","title":"5.12. xsGetPlayerInGame"},{"location":"general/xs/functions/#513-xsgetplayernumberoftechs","text":"Returning Type: int Prototype: int xsGetPlayerNumberOfTechs ( int playerNumber ) Parameters: int playerNumber : The player whoes technology count is being requested. Returns the number of technologies available to the player in the entire game.","title":"5.13. xsGetPlayerNumberOfTechs"},{"location":"general/xs/functions/#514-xsgetrandomnumber","text":"Returning Type: int Prototype: int xsGetRandomNumber () Returns a random number between 0 and 32766.","title":"5.14. xsGetRandomNumber"},{"location":"general/xs/functions/#515-xsgetrandomnumberlh","text":"Returning Type: int Prototype: int xsGetRandomNumberLH ( int low , int high ) Parameters: int low : The lower bound for the range for the random number returned (included) int high : The upper bound for the range for the random number returned (excluded) Returns a random number between low and high","title":"5.15. xsGetRandomNumberLH"},{"location":"general/xs/functions/#516-xsgetrandomnumbermax","text":"Returning Type: int Prototype: int xsGetRandomNumberMax ( int max ) Parameters: int max : The upper bound for the range for the random number returned (excluded) Returns a random number between 0 and max .","title":"5.16. xsGetRandomNumberMax"},{"location":"general/xs/functions/#517-xsgettime","text":"Returning Type: int Prototype: int xsGetTime () Returns the current game time - 1 in seconds","title":"5.17. xsGetTime"},{"location":"general/xs/functions/#518-xsgetvictorycondition","text":"Returning Type: int Prototype: int xsGetVictoryCondition () Returns one of these constants: cStandardVictory cWonderVictory cRelicVictory cKingOfTheHillVictory","title":"5.18. xsGetVictoryCondition"},{"location":"general/xs/functions/#519-xsgetvictoryconditionforsecondarygamemode","text":"Returning Type: int Prototype: int xsGetVictoryConditionForSecondaryGameMode () Returns one of these constants: cStandardVictory cWonderVictory cRelicVictory cKingOfTheHillVictory","title":"5.19. xsGetVictoryConditionForSecondaryGameMode"},{"location":"general/xs/functions/#520-xsgetvictoryplayer","text":"Returning Type: int Prototype: int xsGetVictoryPlayer () Returns the number of the player with the highest score in a normal game. Returns the number of the player who owns 5 relics or has a wonder if standard victory is enabled. In a game like KoTH, returns the number of the player who owns the monument.","title":"5.20. xsGetVictoryPlayer"},{"location":"general/xs/functions/#521-xsgetvictoryplayerforsecondarygamemode","text":"Returning Type: int Prototype: int xsGetVictoryPlayerForSecondaryGameMode () Returns 1 when no secondary game mode is set. Returns the number of the player who owns the monument in game modes like KotH","title":"5.21. xsGetVictoryPlayerForSecondaryGameMode"},{"location":"general/xs/functions/#522-xsgetvictorytime","text":"Returning Type: int Prototype: int xsGetVictoryTime () For game modes like KoTH and other game modes where there is a timer on the screen, it returns the amount of time left in half seconds. meaning if the value returned is 799, it means there are 399.5s remaining. Returns -1 otherwise","title":"5.22. xsGetVictoryTime"},{"location":"general/xs/functions/#523-xsgetvictorytimeforsecondarygamemode","text":"Returning Type: int Prototype: int xsGetVictoryTimeForSecondaryGameMode () For game modes like KoTH and other game modes where there is a timer on the screen, it returns the amount of time left in half seconds. meaning if the value returned is 799, it means there are 399.5s remaining. Returns -1 otherwise","title":"5.23. xsGetVictoryTimeForSecondaryGameMode"},{"location":"general/xs/functions/#524-xsgetvictorytype","text":"Returning Type: int Prototype: int xsGetVictoryType () Returns an integer corresponding to different victory settings ingame. These are: 0: Standard 1: Conquest 2: Time Limit 3: Score 4: Custom (scenarios only). Last Man Standing returns 0 as well.","title":"5.24. xsGetVictoryType"},{"location":"general/xs/functions/#525-xsplayerattribute","text":"Returning Type: float Prototype: float xsPlayerAttribute ( int playerNumber , int resourceID ) Parameters: int playerNumber : The player to get the resource of (0 for Gaia) int resourceID : The ID of the resource to get the amount of Returns the amount the specified resource of the given player.","title":"5.25. xsPlayerAttribute"},{"location":"general/xs/functions/#526-xsresearchtechnology","text":"Returning Type: bool Prototype: bool xsResearchTechnology ( int techID , bool force , bool techAvailable , int playerNumber ) Parameters: int techID : The technology ID to research. bool force : Force researching the tech even if it is not enabled. To force an unavailable tech, the argument techAvailable must be set to false bool techAvailable : This flag determines if it is required to check if a tech is available before researching it int playerNumber : The player to research the technology for Returns a boolean based on whether the technology was researched or not.","title":"5.26. xsResearchTechnology"},{"location":"general/xs/functions/#527-xssetplayerattribute","text":"Returning Type: void Prototype: void xsSetPlayerAttribute ( int playerNumber , int resourceID , float value ) Parameters: int playerNumber : The player to set the resource of (0 for Gaia) int resourceID : The ID of the resource to set the amount of float value : The amount to set the resource to Sets the amount of the specified resource of the given player to the provided value.","title":"5.27. xsSetPlayerAttribute"},{"location":"general/xs/functions/#528-xssettriggervariable","text":"Returning Type: void Prototype: void xsSetTriggerVariable ( int variableID , int value ) Parameters: int variableID : The ID of the variable to set the value of int value : The value to set the variable to Sets the value of the variable of the given variable ID to the provided value.","title":"5.28. xsSetTriggerVariable"},{"location":"general/xs/functions/#529-xstriggervariable","text":"Returning Type: int Prototype: int xsTriggerVariable ( int variableID ) Parameters: int variableID : The ID of the variable to get the value of Returns the value of the variable of the given variable ID.","title":"5.29. xsTriggerVariable"},{"location":"general/xs/functions/#6-readwrite","text":"","title":"6. Read/Write"},{"location":"general/xs/functions/#61-xsclosefile","text":"Returning Type: bool Prototype: bool xsCloseFile () Close the currently opened or created file. Returns true if the file was successfully closed","title":"6.1. xsCloseFile"},{"location":"general/xs/functions/#62-xscreatefile","text":"Returning Type: bool Prototype: bool xsCreateFile ( bool append ) Parameters: (Optional) bool append : Default: true . If set to false , this will overwrite any existing file with the same name. Creates a new (or appends to an existing) .xsdat file with the same name as the RMS/scenario being played. After invoking this function, the writing functions can be used to write data to the file. Returns true if the file was successfully created","title":"6.2. xsCreateFile"},{"location":"general/xs/functions/#63-xsgetdatatypesize","text":"Returning Type: int Prototype: int xsGetDataTypeSize ( int type ) Parameters: int type : One of the cOffsetXXX constants may be used as a parameter Returns the number of bytes used to store a given type value.","title":"6.3. xsGetDataTypeSize"},{"location":"general/xs/functions/#64-xsgetfileposition","text":"Returning Type: int Prototype: int xsGetFilePosition () Gets the byte (0-indexed) of the file that the next read function will start reading from.","title":"6.4. xsGetFilePosition"},{"location":"general/xs/functions/#65-xsgetfilesize","text":"Returning Type: int Prototype: int xsGetFileSize () Gets the size (in bytes) of the currently open file","title":"6.5. xsGetFileSize"},{"location":"general/xs/functions/#66-xsoffsetfileposition","text":"Returning Type: bool Prototype: bool xsOffsetFilePosition ( int dataType , bool forward ) Parameters: int dataType : The cOffset constants can be used to specify the datatype used for the offset. Integers and floats are 4 bytes long, vectors are 12 bytes long and strings can be of variable length (specified by the 32 bit int preceeding the chars of the string) (Optional) bool forward : Default: true . Setting this to false will make the file position move back Moves the file position forward (or backward) relative to the current file position, and by an amount of bytes equivalent to reading the given data type","title":"6.6. xsOffsetFilePosition"},{"location":"general/xs/functions/#67-xsopenfile","text":"Returning Type: bool Prototype: bool xsOpenFile ( string filename ) Parameters: string filename : The name of the file to open, without the .xsdat extension Opens an existing .xsdat file in read only mode. After invoking this function, the reading functions can be used to read data from the file. Returns true if the file was successfully opened","title":"6.7. xsOpenFile"},{"location":"general/xs/functions/#68-xsreadfloat","text":"Returning Type: float Prototype: float xsReadFloat () Reads and returns a float from the previously opened .xsdat file. Note that this function does not check if the value being read is actually meant to be a float, which means the value being read is bit casted into a float regardless of what it originally was. This function also moves the file position forward by 4 bytes","title":"6.8. xsReadFloat"},{"location":"general/xs/functions/#69-xsreadint","text":"Returning Type: int Prototype: int xsReadInt () Reads and returns an integer from the previously opened .xsdat file. Note that this function does not check if the value being read is actually meant to be an integer, which means the value being read is bit casted into an integer regardless of what it originally was. This function also moves the file position forward by 4 bytes","title":"6.9. xsReadInt"},{"location":"general/xs/functions/#610-xsreadstring","text":"Returning Type: string Prototype: string xsReadString () Reads and returns a string from the previously opened .xsdat file. Note that this function does not check if the value being read is actually meant to be a string, which means the value being read is bit casted into a string regardless of what it originally was. This function also moves the file position forward by 4 bytes + the amount of bytes in the length of the string","title":"6.10. xsReadString"},{"location":"general/xs/functions/#611-xsreadvector","text":"Returning Type: vector Prototype: vector xsReadVector () Reads and returns a vector from the previously opened .xsdat file. Note that this function does not check if the value being read is actually meant to be a vector, which means the value being read is bit casted into a vector regardless of what it originally was. This function also moves the file position forward by 12 bytes","title":"6.11. xsReadVector"},{"location":"general/xs/functions/#612-xssetfileposition","text":"Returning Type: bool Prototype: bool xsSetFilePosition ( int byteOffset ) Parameters: int byteOffset : 0 indexed byte offset to determine which byte to read and return from the file Sets the byte (0-indexed) of the file that the next read function will start reading from.","title":"6.12. xsSetFilePosition"},{"location":"general/xs/functions/#613-xswritefloat","text":"Returning Type: bool Prototype: bool xsWriteFloat ( float data ) Parameters: float data : The float value to write Writes a floating point number to the previously created .xsdat file. Causes an error if a file hasn't been opened before using. Returns true if the floating point number was successfully written. Floats are written in the 32 bit IEEE 754 format","title":"6.13. xsWriteFloat"},{"location":"general/xs/functions/#614-xswriteint","text":"Returning Type: bool Prototype: bool xsWriteInt ( int data ) Parameters: int data : The integer to write Writes an integer to the previously created .xsdat file. Causes an error if a file hasn't been opened before using. Returns true if the integer was successfully written. Integers are written as signed 32 bit numbers","title":"6.14. xsWriteInt"},{"location":"general/xs/functions/#615-xswritestring","text":"Returning Type: bool Prototype: bool xsWriteString ( string data ) Parameters: string data : The string to write Writes a string to the previously created .xsdat file. Causes an error if a file hasn't been opened before using. Returns true if the string was successfully written. A string is written to the file in two parts, an unsigned 32 bit integer (indicates the length of the string) followed by that many bytes making up the actual characters of the string","title":"6.15. xsWriteString"},{"location":"general/xs/functions/#616-xswritevector","text":"Returning Type: bool Prototype: bool xsWriteVector ( vector data ) Parameters: vector data : The vector to write Writes a vector to the previously created .xsdat file. Causes an error if a file hasn't been opened before using. Returns true if the vector was successfully written. Vectors are written as 3 consecutive floating point numbers, one for each coordinate.","title":"6.16. xsWriteVector"},{"location":"general/xs/functions/#7-functions-with-seemingly-no-practical-use","text":"","title":"7. Functions With Seemingly No Practical Use"},{"location":"general/xs/functions/#71-xsaddruntimeevent","text":"Returning Type: bool Prototype: bool xsAddRuntimeEvent ( string runtimeName , string functionName , int functionArgument ) Parameters: string runtimeName : This is the name of the runtime to create the event in. This should be \"Random Map\" for RMS and \"Scenario Triggers\" for scenarios. Find which one to use in a general script by using the xsGetMapName ( true ) function and checking the extension. string functionName : This is the name of a user defined function that takes a single integer argument int functionArgument : This is an integer argument that is passed to the function given to the argument functionName when this event runs. A runtime event is called after all the XS code has finished executing but before rules start executing. It calls the function functionName given to it with the functionArgument passed to it as a parameter. For programmers familiar with the terminology, this is basically a way to set a callback. It also returns true if the function name given to it exists, otherwise it returns false. Does not work with built-ins","title":"7.1. xsAddRuntimeEvent"},{"location":"general/xs/functions/#72-xsbreakpoint","text":"Returning Type: void Prototype: void xsBreakPoint () This function adds a break point to the execution of code. Do not use this function and beware, if you do, it will likely cause a crash!","title":"7.2. xsBreakPoint"},{"location":"general/xs/functions/#73-xsdumparrays","text":"Returning Type: void Prototype: void xsDumpArrays () This function is supposed to blogs out all XS arrays. Currently, it does absolutely nothing.","title":"7.3. xsDumpArrays"},{"location":"general/xs/functions/#74-xsgetcontextplayer","text":"Returning Type: int Prototype: int xsGetContextPlayer () Returns the current context player ID.","title":"7.4. xsGetContextPlayer"},{"location":"general/xs/functions/#75-xsgetfunctionid","text":"Returning Type: int Prototype: int xsGetFunctionID ( string functionName ) Parameters: string functionName : The name of the function to get the hash of Returns the hash of a given function. This function has no practical application and is probably for internal usage only.","title":"7.5. xsGetFunctionID"},{"location":"general/xs/functions/#76-xssetcontextplayer","text":"Returning Type: void Prototype: void xsSetContextPlayer ( int playerNumber ) Parameters: int playerNumber : The player to set the context player to In other functions involving a playerNumber argument, the value of the context player is used if -1 is passed as playerNumber to them. xsEffectAmount will use the value of the context player as its player if -2 is passed to it as the player argument.","title":"7.6. xsSetContextPlayer"},{"location":"general/xs/programmer/","text":"XS Scripting: A Programmer's Reference \u00b6 Written by: Alian713 This is the most short and precise guide for XS Scripting that you will find, it does not give any introductions to programming topics and cuts right to the chase, if you are a programmer then this is perfect for you. If you are not a programmer fear not! Refer to the For Beginners section of this guide instead. 1. Using an XS Script \u00b6 To use an XS script: Navigate to the folder C:\\Program Files (x86)\\Steam\\steamapps\\common\\AoE2DE\\resources\\_common\\xs There should be 2 files in this folder already, called Constants.xs and xs.txt . In here, create a new file with any name ending with .xs . For example, the file can be called filename.xs default0.xs There may be an additional file called default0.xs . Never write code in this file as this is a temporary file and can be overwritten by the game. Constants.xs The file Constants.xs contains a list of constants that can be used in any XS Script directly, without needing to use an include statement. VSC Plugin for XS A VSC Extension for syntax highlighting and code auto completion for AoE XS Scripting can be found here To begin with using XS, write this basic code in the file: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // this is a comment /* this is a multiline comment */ void main () { int a = 10 ; int b = 20 ; // the variables cannot be declared by separating them with commas // unlike java or python. // chats to the screen xsChatData ( \"a+b = \" + ( a + b )); } 1.1. In a Custom Scenario \u00b6 Open the scenario in the editor Under the Map tab, type the name of the XS Script that you created in the Script Filename field without the .xs at the end. For example, if your file is called filename.xs then you will write filename in this field. Now, under the Triggers tab in the editor, add a new trigger, then add a new effect. (If you do not know what a trigger/effect is, please go through the Custom Scenarios: Triggers: Trigger Basics section of this guide) From the Effects List select Script Call . You can now use the functions in the XS Script in the message box using a normal function call. Keep in mind, only those functions that do not take any parameters work here! The main() function that we made above is automatically run when the scenario is played. If there are no errors in the code, clicking the E#0: Script Call effect will turn it green. If there is an error in the script, an error message will be shown. Testing the scenario now will run the Script Call effect in the trigger defined above, which in turn will run the main() function in the XS Script and 30 will be shown in the chat. 1.2. In an RMS \u00b6 Open the RM Script in a text editor At the very top, type #includeXS filename.xs . Here, filename.xs is the name of the file that you created above. The main(); function is automatically called when a map is generated using the RMS. To test, load the RMS in a single player (or multi player) lobby and start the game. It is recommended that you use a custom scenario to test XS Scripts, as it is easier to debug them in the editor. Now that you have set up an XS file with a main() function inside, you can type code inside this function to do different things! We'll be walking through all of the different things that are known to be possible one by one: 2. Variables Data Types \u00b6 There are a total of 5 data types supported by XS, they are: Data Type Syntax int int a = 10 ; float float a = 3.1 ; string string a = \"string\" ; bool bool a = true ; vector vector v = vector ( 1.2 , 2.3 , 3 ); Refer to the Vector Manipulation section of this guide for all the different functions that can be used on vectors. No Vars in Vector Initialisation Variables cannot be used in vector initialisation. For example: vector v = vector ( x , y , z ); does not work. Here x , y , z are floating point values. Use vector v = xsVectorSet ( x , y , z ); instead. Constants and Scope Constant Variables Syntax const int a = 10 ; or const float PI = 3.1415 ; will declare an immutable variable. Scope of a Variable The concept of local and global variables applies to XS. 3. Operations \u00b6 3.1. Arithmetic Operations \u00b6 Operation Syntax Addition a+b Subtraction a-b Multiplication a*b Division a/b Modulo a%b Refer to the Mathematical Operations section of this guide for useful mathematical functions. Unary Negative There is no unary negative operator in XS 1 2 3 4 5 6 7 8 9 void main () { int a = 10 ; // this does not work: int b = - a + 20 ; // instead use: int b = 0 - a + 20 ; } 3.2. Prefix and Postfix Operations \u00b6 Operation Syntax Postfix increment a++ Postfix decrement a-- Prefix operations are not supported by XS. 3.3 Shorthand Assignment Operations \u00b6 Shorthand Assignment operations are not supported by XS. 3.4 Bitwise Operations \u00b6 Bitwise operations are not supported by XS. 3.5. Relational Operations \u00b6 Operation Syntax Less Than a < b Greater Than a > b Less Than or Equal To a <= b Greater Than or Equal To a >= b Equal To a == b Not Equal To a != b Relational Operators on Strings These relational operators also work on strings, for example a < b tells you if a lexicographically preceeds b . 3.6. Boolean Operations \u00b6 Operation Syntax AND a && b OR a || b Negation is not supported by XS. DataType of Result of Operation Due to a bug at the moment, the data type of the answer of any operation is determined by the first operand. This means that 9 * 5.5 evaluates to 49 instead of 49.5 . However, 5.5 * 9 will correctly evaluate to 49.5 . 4. Flow Control Statements \u00b6 The following flow control statements are supported by XS: if else if construct: Example Syntax: 1 2 3 4 5 6 7 8 9 10 11 12 void main () { int a = 10 ; float b = 20 ; int c = 30 ; float max = 0 ; if ( a > b && a > c ) max = a ; else if ( b > c && b > a ) max = b ; else max = c ; } switch - case construct: Example Syntax: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void main () { int a = 10 ; switch ( a ) { case 1 : { // do stuff } case 2 : { // do stuff } case 3 : { // do stuff } default : { // do stuff } } } while loop: Example Syntax: 1 2 3 4 5 6 7 void main () { int a = 0 ; while ( a < 10 ) { xsChatData ( \"a = \" + a ); a ++ ; } } for loop: Syntax: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 void main () { // this loops a from 0 to 10 for ( a = 0 ; < 10 ) xsChatData ( \"a = \" + a ); // this loops a from 10 to 0 for ( a = 10 ; > 0 ) xsChatData ( \"a = \" + a ); // unlike java, you do not need to specify an increment or decrement // the for loop takes care of that // step sizes unfortunately cannot be changed. } 5. Functions \u00b6 Syntax: 1 2 3 4 returnType functionName ( dataType parameter1 = defaultValue1 , dataType parameter2 = defaultValue2 ) { return ( value ); // value must be enclosed by parantheses } Example Syntax: 1 2 3 4 5 6 7 8 9 10 11 int max ( int a = 0 , int b = 2 ) { if ( a > b ) return ( a ); return ( b ); // the return value must always be inside parantheses. } void main () { xsChatData ( \"max \" + max ( 10 , 20 )); } An XS Script can import other XS Scripts using the following syntax: 1 include \"absolute/or/relative/path/to/file.xs\" ; 6. Arrays \u00b6 Refer to the Array Manipulation section of this guide on how to use arrays. Standard syntax like int a [] = new int [ 10 ]; or a [ 2 ]; is not supported by XS. 7. Type Casting \u00b6 int , float and bool data types can be implicitly casted into each other. All of them can be implicitly casted into strings by doing string a = \"this would work \" + 5.6 ; . However, string a = 5.5 ; will not work, instead use: string a = \"\" + 5.5 ; . It is unknown if XS supports proper explicit type casting 8. Rules \u00b6 A rule is a block of code that can be set to repeatedly execute at set intervals throughout the duration of the game. A rule is always initialised outside of a method. Its usage looks like: Syntax: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 rule ruleName // This is the name of the rule. Follows same naming laws as variables. active / inactive // this is the initial state of the rule, active means that runs by default // and inactive means that it wont run by default. // this is similar to how triggers work when you enable/disable them. group groupName // the group that this rule belongs to. Follows same naming laws as variables. minInterval < int > // the minimum time interval that must pass before the block is executed again maxInterval < int > // the maximum time interval that may pass before the block has to be executed again highFrequency // Loop the rule 60 times every physical second (this is independant of inagme speed) // Only one of \"highFrequency\" or \"minInterval\" and \"maxInterval\" are used. Both cannot be used together runImmediately // It is currently unknown as to what this option does priority < int > // rules are executed in order of their descending priority { // code to execute } Example: 1 2 3 4 5 6 7 8 9 10 11 int a = 0 ; // This rule prints the value of a every 2 seconds. rule chatTheValueOfA active minInterval 2 maxInterval 2 group chatGroup { xsChatData ( \"a = \" + a ); a ++ ; } There are a lot of built in XS functions that can interact with rules. Check the Rules Section of this guide. The variable cActivationTime , when used inside the block of a rule, gives the time of activation of the rule in seconds. With that, you now know everything that is currently known to work with XS Scripts. Good luck and have fun creating awesome maps!","title":"For Programmers"},{"location":"general/xs/programmer/#xs-scripting-a-programmers-reference","text":"Written by: Alian713 This is the most short and precise guide for XS Scripting that you will find, it does not give any introductions to programming topics and cuts right to the chase, if you are a programmer then this is perfect for you. If you are not a programmer fear not! Refer to the For Beginners section of this guide instead.","title":"XS Scripting: A Programmer's Reference"},{"location":"general/xs/programmer/#1-using-an-xs-script","text":"To use an XS script: Navigate to the folder C:\\Program Files (x86)\\Steam\\steamapps\\common\\AoE2DE\\resources\\_common\\xs There should be 2 files in this folder already, called Constants.xs and xs.txt . In here, create a new file with any name ending with .xs . For example, the file can be called filename.xs default0.xs There may be an additional file called default0.xs . Never write code in this file as this is a temporary file and can be overwritten by the game. Constants.xs The file Constants.xs contains a list of constants that can be used in any XS Script directly, without needing to use an include statement. VSC Plugin for XS A VSC Extension for syntax highlighting and code auto completion for AoE XS Scripting can be found here To begin with using XS, write this basic code in the file: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // this is a comment /* this is a multiline comment */ void main () { int a = 10 ; int b = 20 ; // the variables cannot be declared by separating them with commas // unlike java or python. // chats to the screen xsChatData ( \"a+b = \" + ( a + b )); }","title":"1. Using an XS Script"},{"location":"general/xs/programmer/#11-in-a-custom-scenario","text":"Open the scenario in the editor Under the Map tab, type the name of the XS Script that you created in the Script Filename field without the .xs at the end. For example, if your file is called filename.xs then you will write filename in this field. Now, under the Triggers tab in the editor, add a new trigger, then add a new effect. (If you do not know what a trigger/effect is, please go through the Custom Scenarios: Triggers: Trigger Basics section of this guide) From the Effects List select Script Call . You can now use the functions in the XS Script in the message box using a normal function call. Keep in mind, only those functions that do not take any parameters work here! The main() function that we made above is automatically run when the scenario is played. If there are no errors in the code, clicking the E#0: Script Call effect will turn it green. If there is an error in the script, an error message will be shown. Testing the scenario now will run the Script Call effect in the trigger defined above, which in turn will run the main() function in the XS Script and 30 will be shown in the chat.","title":"1.1. In a Custom Scenario"},{"location":"general/xs/programmer/#12-in-an-rms","text":"Open the RM Script in a text editor At the very top, type #includeXS filename.xs . Here, filename.xs is the name of the file that you created above. The main(); function is automatically called when a map is generated using the RMS. To test, load the RMS in a single player (or multi player) lobby and start the game. It is recommended that you use a custom scenario to test XS Scripts, as it is easier to debug them in the editor. Now that you have set up an XS file with a main() function inside, you can type code inside this function to do different things! We'll be walking through all of the different things that are known to be possible one by one:","title":"1.2. In an RMS"},{"location":"general/xs/programmer/#2-variables-data-types","text":"There are a total of 5 data types supported by XS, they are: Data Type Syntax int int a = 10 ; float float a = 3.1 ; string string a = \"string\" ; bool bool a = true ; vector vector v = vector ( 1.2 , 2.3 , 3 ); Refer to the Vector Manipulation section of this guide for all the different functions that can be used on vectors. No Vars in Vector Initialisation Variables cannot be used in vector initialisation. For example: vector v = vector ( x , y , z ); does not work. Here x , y , z are floating point values. Use vector v = xsVectorSet ( x , y , z ); instead. Constants and Scope Constant Variables Syntax const int a = 10 ; or const float PI = 3.1415 ; will declare an immutable variable. Scope of a Variable The concept of local and global variables applies to XS.","title":"2. Variables Data Types"},{"location":"general/xs/programmer/#3-operations","text":"","title":"3. Operations"},{"location":"general/xs/programmer/#31-arithmetic-operations","text":"Operation Syntax Addition a+b Subtraction a-b Multiplication a*b Division a/b Modulo a%b Refer to the Mathematical Operations section of this guide for useful mathematical functions. Unary Negative There is no unary negative operator in XS 1 2 3 4 5 6 7 8 9 void main () { int a = 10 ; // this does not work: int b = - a + 20 ; // instead use: int b = 0 - a + 20 ; }","title":"3.1. Arithmetic Operations"},{"location":"general/xs/programmer/#32-prefix-and-postfix-operations","text":"Operation Syntax Postfix increment a++ Postfix decrement a-- Prefix operations are not supported by XS.","title":"3.2. Prefix and Postfix Operations"},{"location":"general/xs/programmer/#33-shorthand-assignment-operations","text":"Shorthand Assignment operations are not supported by XS.","title":"3.3 Shorthand Assignment Operations"},{"location":"general/xs/programmer/#34-bitwise-operations","text":"Bitwise operations are not supported by XS.","title":"3.4 Bitwise Operations"},{"location":"general/xs/programmer/#35-relational-operations","text":"Operation Syntax Less Than a < b Greater Than a > b Less Than or Equal To a <= b Greater Than or Equal To a >= b Equal To a == b Not Equal To a != b Relational Operators on Strings These relational operators also work on strings, for example a < b tells you if a lexicographically preceeds b .","title":"3.5. Relational Operations"},{"location":"general/xs/programmer/#36-boolean-operations","text":"Operation Syntax AND a && b OR a || b Negation is not supported by XS. DataType of Result of Operation Due to a bug at the moment, the data type of the answer of any operation is determined by the first operand. This means that 9 * 5.5 evaluates to 49 instead of 49.5 . However, 5.5 * 9 will correctly evaluate to 49.5 .","title":"3.6. Boolean Operations"},{"location":"general/xs/programmer/#4-flow-control-statements","text":"The following flow control statements are supported by XS: if else if construct: Example Syntax: 1 2 3 4 5 6 7 8 9 10 11 12 void main () { int a = 10 ; float b = 20 ; int c = 30 ; float max = 0 ; if ( a > b && a > c ) max = a ; else if ( b > c && b > a ) max = b ; else max = c ; } switch - case construct: Example Syntax: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void main () { int a = 10 ; switch ( a ) { case 1 : { // do stuff } case 2 : { // do stuff } case 3 : { // do stuff } default : { // do stuff } } } while loop: Example Syntax: 1 2 3 4 5 6 7 void main () { int a = 0 ; while ( a < 10 ) { xsChatData ( \"a = \" + a ); a ++ ; } } for loop: Syntax: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 void main () { // this loops a from 0 to 10 for ( a = 0 ; < 10 ) xsChatData ( \"a = \" + a ); // this loops a from 10 to 0 for ( a = 10 ; > 0 ) xsChatData ( \"a = \" + a ); // unlike java, you do not need to specify an increment or decrement // the for loop takes care of that // step sizes unfortunately cannot be changed. }","title":"4. Flow Control Statements"},{"location":"general/xs/programmer/#5-functions","text":"Syntax: 1 2 3 4 returnType functionName ( dataType parameter1 = defaultValue1 , dataType parameter2 = defaultValue2 ) { return ( value ); // value must be enclosed by parantheses } Example Syntax: 1 2 3 4 5 6 7 8 9 10 11 int max ( int a = 0 , int b = 2 ) { if ( a > b ) return ( a ); return ( b ); // the return value must always be inside parantheses. } void main () { xsChatData ( \"max \" + max ( 10 , 20 )); } An XS Script can import other XS Scripts using the following syntax: 1 include \"absolute/or/relative/path/to/file.xs\" ;","title":"5. Functions"},{"location":"general/xs/programmer/#6-arrays","text":"Refer to the Array Manipulation section of this guide on how to use arrays. Standard syntax like int a [] = new int [ 10 ]; or a [ 2 ]; is not supported by XS.","title":"6. Arrays"},{"location":"general/xs/programmer/#7-type-casting","text":"int , float and bool data types can be implicitly casted into each other. All of them can be implicitly casted into strings by doing string a = \"this would work \" + 5.6 ; . However, string a = 5.5 ; will not work, instead use: string a = \"\" + 5.5 ; . It is unknown if XS supports proper explicit type casting","title":"7. Type Casting"},{"location":"general/xs/programmer/#8-rules","text":"A rule is a block of code that can be set to repeatedly execute at set intervals throughout the duration of the game. A rule is always initialised outside of a method. Its usage looks like: Syntax: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 rule ruleName // This is the name of the rule. Follows same naming laws as variables. active / inactive // this is the initial state of the rule, active means that runs by default // and inactive means that it wont run by default. // this is similar to how triggers work when you enable/disable them. group groupName // the group that this rule belongs to. Follows same naming laws as variables. minInterval < int > // the minimum time interval that must pass before the block is executed again maxInterval < int > // the maximum time interval that may pass before the block has to be executed again highFrequency // Loop the rule 60 times every physical second (this is independant of inagme speed) // Only one of \"highFrequency\" or \"minInterval\" and \"maxInterval\" are used. Both cannot be used together runImmediately // It is currently unknown as to what this option does priority < int > // rules are executed in order of their descending priority { // code to execute } Example: 1 2 3 4 5 6 7 8 9 10 11 int a = 0 ; // This rule prints the value of a every 2 seconds. rule chatTheValueOfA active minInterval 2 maxInterval 2 group chatGroup { xsChatData ( \"a = \" + a ); a ++ ; } There are a lot of built in XS functions that can interact with rules. Check the Rules Section of this guide. The variable cActivationTime , when used inside the block of a rule, gives the time of activation of the rule in seconds. With that, you now know everything that is currently known to work with XS Scripts. Good luck and have fun creating awesome maps!","title":"8. Rules"},{"location":"general/xs/tricks/","text":"Written by: Alian713 1. Setting and Unsetting Costs \u00b6 A house normally costs 25 wood, but what if we want to make it cost, lets say, 10 stone instead? One might attempt something like this: 1 2 3 4 const int HOUSE = 70 ; xsEffectAmount ( cSetAttribute , HOUSE , cStoneCost , 10 , 1 ); xsEffectAmount ( cSetAttribute , HOUSE , cWoodCost , -2 , 1 ); This is a reasonable guess for how to do it, but unfortunately this does not work. The stone cost does not get added to the house, and instead of unsetting the wood cost, making a house actually gives back 2 wood to the player! There is however a trick that can achieve this: 1 2 3 4 5 const int HOUSE = 70 ; xsEffectAmount ( cMulAttribute , HOUSE , cStoneCost , -1 , 1 ); xsEffectAmount ( cSetAttribute , HOUSE , cStoneCost , 10 , 1 ); xsEffectAmount ( cMulAttribute , HOUSE , cWoodCost , -2 , 1 ); This same trick does not work for changing technology costs.","title":"Tricks"},{"location":"general/xs/tricks/#1-setting-and-unsetting-costs","text":"A house normally costs 25 wood, but what if we want to make it cost, lets say, 10 stone instead? One might attempt something like this: 1 2 3 4 const int HOUSE = 70 ; xsEffectAmount ( cSetAttribute , HOUSE , cStoneCost , 10 , 1 ); xsEffectAmount ( cSetAttribute , HOUSE , cWoodCost , -2 , 1 ); This is a reasonable guess for how to do it, but unfortunately this does not work. The stone cost does not get added to the house, and instead of unsetting the wood cost, making a house actually gives back 2 wood to the player! There is however a trick that can achieve this: 1 2 3 4 5 const int HOUSE = 70 ; xsEffectAmount ( cMulAttribute , HOUSE , cStoneCost , -1 , 1 ); xsEffectAmount ( cSetAttribute , HOUSE , cStoneCost , 10 , 1 ); xsEffectAmount ( cMulAttribute , HOUSE , cWoodCost , -2 , 1 ); This same trick does not work for changing technology costs.","title":"1. Setting and Unsetting Costs"},{"location":"general/xs/bugs/","text":"Known Bugs And Quirks In XS Scripting \u00b6 Written by: Alian713 This section is a list of known bugs, quirks and weird behaviour in XS Scripting. All the shown code can be directly copy pasted into any XS file to reproduce the bugs/effects documented. Any new bugs discovered will be added to the list. This list will also be updated with each AoEII:DE update, removing any bugs that get fixed. If you know of a bug that is not documented here, or if a bug listed here is actually fixed in the indicated game version, reach out to the authors of this guide! Check the About page for relevant information about the authors. Game Version: 101.102.5558.0 (#71094) 9717890 Last Updated: 08.11.2022 Game Platform: Steam OS: Windows 10","title":"Known Bugs And Quirks In XS Scripting"},{"location":"general/xs/bugs/#known-bugs-and-quirks-in-xs-scripting","text":"Written by: Alian713 This section is a list of known bugs, quirks and weird behaviour in XS Scripting. All the shown code can be directly copy pasted into any XS file to reproduce the bugs/effects documented. Any new bugs discovered will be added to the list. This list will also be updated with each AoEII:DE update, removing any bugs that get fixed. If you know of a bug that is not documented here, or if a bug listed here is actually fixed in the indicated game version, reach out to the authors of this guide! Check the About page for relevant information about the authors. Game Version: 101.102.5558.0 (#71094) 9717890 Last Updated: 08.11.2022 Game Platform: Steam OS: Windows 10","title":"Known Bugs And Quirks In XS Scripting"},{"location":"general/xs/bugs/Chat%20Data/","text":"1. Cannot Print 0 Or 1 At The Start Of The Line In xsChatData() \u00b6 Description: If a 0 or 1 character occurs at the beginning of a string that is being chatted to the screen using xsChatData , then the 0 or 1 characters do not appear in the message. Expected Behaviour: 0 or 1 should be shown correctly at the beginning of the line if used in an xsChatData function Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 void main () { // expected `1 the one at the start isn't visible` but // prints ` the one at the start isn't visible` xsChatData ( \"1 the one at the start isn't visible\" ); // expected `0 the zero at the start isn't visible` but // prints ` the zero at the start isn't visible` xsChatData ( \"0 the zero at the start isn't visible\" ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, any 1 or 0 at the beginning of the lines are omitted in the resulting message on screen.","title":"Chat Data"},{"location":"general/xs/bugs/Chat%20Data/#1-cannot-print-0-or-1-at-the-start-of-the-line-in-xschatdata","text":"Description: If a 0 or 1 character occurs at the beginning of a string that is being chatted to the screen using xsChatData , then the 0 or 1 characters do not appear in the message. Expected Behaviour: 0 or 1 should be shown correctly at the beginning of the line if used in an xsChatData function Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 void main () { // expected `1 the one at the start isn't visible` but // prints ` the one at the start isn't visible` xsChatData ( \"1 the one at the start isn't visible\" ); // expected `0 the zero at the start isn't visible` but // prints ` the zero at the start isn't visible` xsChatData ( \"0 the zero at the start isn't visible\" ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, any 1 or 0 at the beginning of the lines are omitted in the resulting message on screen.","title":"1. Cannot Print 0 Or 1 At The Start Of The Line In xsChatData()"},{"location":"general/xs/bugs/Crashes/","text":"1. Crash On Using % Symbols In xsChatData() \u00b6 Description: Cannot escape % symbols in the message, since they are considered special characters because of the %d and %f usage. Expected Behaviour: It should be possible to escape the % character by using a backslash \\ . Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 void main () { // This crashes the game altogether // prints `this will not appear in game` xsChatData ( \"this % will not appear in game\" ); // prints `neither will this \\ appear in game` xsChatData ( \"neither will this \\% appear in game\" ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the game will crash 2. Using goto With A Non Existent Label Crashes The Game \u00b6 Description: If a goto statement is used as shown below, it crashes the game. How to define a working label in XS is currently unknown Expected Behaviour: The game should warn about wrong usage of goto to a non existent label. How is a label defined in the first place in XS? Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 void main () { goto non_existent_label ; } Include the script in the scenario or RMS When a game is played using the scenario or RMS, A crash will occur 3. Crash On Using An Integer Larger Than 999_999_999 In Chat Data \u00b6 Description: Trying to chan an int that is bigger than 999_999_999 with %d in xsChatData causes a crash Expected Behaviour: The int value should be printed properly as expected Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 void main () { int a = 999999999 + 1 ; xsChatData ( \"t %d\" , a ); // crashes the game // xsChatData(\"t \"+a); // this works normally } Include the script in the scenario or RMS When a game is played using the scenario or RMS, A crash will occur","title":"Crashes"},{"location":"general/xs/bugs/Crashes/#1-crash-on-using-symbols-in-xschatdata","text":"Description: Cannot escape % symbols in the message, since they are considered special characters because of the %d and %f usage. Expected Behaviour: It should be possible to escape the % character by using a backslash \\ . Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 void main () { // This crashes the game altogether // prints `this will not appear in game` xsChatData ( \"this % will not appear in game\" ); // prints `neither will this \\ appear in game` xsChatData ( \"neither will this \\% appear in game\" ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the game will crash","title":"1. Crash On Using % Symbols In xsChatData()"},{"location":"general/xs/bugs/Crashes/#2-using-goto-with-a-non-existent-label-crashes-the-game","text":"Description: If a goto statement is used as shown below, it crashes the game. How to define a working label in XS is currently unknown Expected Behaviour: The game should warn about wrong usage of goto to a non existent label. How is a label defined in the first place in XS? Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 void main () { goto non_existent_label ; } Include the script in the scenario or RMS When a game is played using the scenario or RMS, A crash will occur","title":"2. Using goto With A Non Existent Label Crashes The Game"},{"location":"general/xs/bugs/Crashes/#3-crash-on-using-an-integer-larger-than-999_999_999-in-chat-data","text":"Description: Trying to chan an int that is bigger than 999_999_999 with %d in xsChatData causes a crash Expected Behaviour: The int value should be printed properly as expected Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 void main () { int a = 999999999 + 1 ; xsChatData ( \"t %d\" , a ); // crashes the game // xsChatData(\"t \"+a); // this works normally } Include the script in the scenario or RMS When a game is played using the scenario or RMS, A crash will occur","title":"3. Crash On Using An Integer Larger Than 999_999_999 In Chat Data"},{"location":"general/xs/bugs/Editor/","text":"1. Script Call A Function With Parameters \u00b6 Description: When a function that takes arguments is defined in an XS file is called using script call, all XS execution stops. No syntax errors are shown, this happens completely silently Expected Behaviour: Function call works as expected, without crashing the entirety of XS execution Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 void test ( int a = 0 , int b = 0 ) { xsChatData ( \"this is var a: %d\" , a ); xsChatData ( \"this is var b: %d\" , b ); } Include the script in the scenario, and create a trigger with a script call condition/effect Type test ( 1 , 2 ) ; in the message box for the script call When the scenario is played, no text is chatted to the screen, execution fails silently","title":"Editor"},{"location":"general/xs/bugs/Editor/#1-script-call-a-function-with-parameters","text":"Description: When a function that takes arguments is defined in an XS file is called using script call, all XS execution stops. No syntax errors are shown, this happens completely silently Expected Behaviour: Function call works as expected, without crashing the entirety of XS execution Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 void test ( int a = 0 , int b = 0 ) { xsChatData ( \"this is var a: %d\" , a ); xsChatData ( \"this is var b: %d\" , b ); } Include the script in the scenario, and create a trigger with a script call condition/effect Type test ( 1 , 2 ) ; in the message box for the script call When the scenario is played, no text is chatted to the screen, execution fails silently","title":"1. Script Call A Function With Parameters"},{"location":"general/xs/bugs/Effect%20Amount/","text":"1. xsEffectAmount effect cMulAttribute and cAddAttribute with attribute cAttack/cArmor \u00b6 Description: When using xsEffectAmount and cMulAttribute or cAddAttribute to modify cAttack/cArmor , the effect does not change the attack/armour at all Expected Behaviour: Expected behaviour is demonstrated using the following example: Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 void main () { const int cGenghisKhan = 731 ; const int cPierce = 3 ; // Both of these work correctly as expected xsEffectAmount ( cSetAttribute , cGenghisKhan , cAttack , cPierce * 65536 + 5 ); xsEffectAmount ( cSetAttribute , cGenghisKhan , cArmor , cPierce * 65536 + 5 ); // These however do not do anything. xsEffectAmount ( cAddAttribute , cGenghisKhan , cAttack , cPierce * 65536 + 5 ); xsEffectAmount ( cMulAttribute , cGenghisKhan , cArmor , cPierce * 65536 + 5 ); // To make cAddAttribute and cMulAttribute work, we need to currently use the old format: // xsEffectAmount(cAddAttribute, cGenghisKhan, cAttack, cPierce*256 + 5); // xsEffectAmount(cMulAttribute, cGenghisKhan, cArmor, cPierce*256 + 5); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, The attack and armour of the Genghis Khan unit is unchanged","title":"Effect Amount"},{"location":"general/xs/bugs/Effect%20Amount/#1-xseffectamount-effect-cmulattribute-and-caddattribute-with-attribute-cattackcarmor","text":"Description: When using xsEffectAmount and cMulAttribute or cAddAttribute to modify cAttack/cArmor , the effect does not change the attack/armour at all Expected Behaviour: Expected behaviour is demonstrated using the following example: Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 void main () { const int cGenghisKhan = 731 ; const int cPierce = 3 ; // Both of these work correctly as expected xsEffectAmount ( cSetAttribute , cGenghisKhan , cAttack , cPierce * 65536 + 5 ); xsEffectAmount ( cSetAttribute , cGenghisKhan , cArmor , cPierce * 65536 + 5 ); // These however do not do anything. xsEffectAmount ( cAddAttribute , cGenghisKhan , cAttack , cPierce * 65536 + 5 ); xsEffectAmount ( cMulAttribute , cGenghisKhan , cArmor , cPierce * 65536 + 5 ); // To make cAddAttribute and cMulAttribute work, we need to currently use the old format: // xsEffectAmount(cAddAttribute, cGenghisKhan, cAttack, cPierce*256 + 5); // xsEffectAmount(cMulAttribute, cGenghisKhan, cArmor, cPierce*256 + 5); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, The attack and armour of the Genghis Khan unit is unchanged","title":"1. xsEffectAmount effect cMulAttribute and cAddAttribute with attribute cAttack/cArmor"},{"location":"general/xs/bugs/Fixed/","text":"1. xsEffectAmount Crashes When Source Player Does Not Exist \u00b6 Description: When an attribute for a player that is not present in the game is modified, a crash occurs Expected Behaviour: Expressions and variables should be able to be used when initialising Vectors. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 void main () { xsEffectAmount ( cSetAttribute , 1071 , cAmountFirstStorage , current_pop - 250 , 8 ); // if the game is not an 8 player game, this will crash } Include the script in the scenario or RMS When a game is played with less than 8 players, a crash will occur 2. xsEffectAmount Crashes When Negative ID Is Provided For Tech/Object \u00b6 Description: When a negative object/tech ID is provided when using cSetAttribute (or similar operations), a crash occurs Expected Behaviour: Expressions and variables should be able to be used when initialising Vectors. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 void main () { xsEffectAmount ( cEnableObject , -1 , cEnableObject , 0 ); } Include the script in the scenario or RMS When a game is played, a crash will occur 3. XS Files Do Not Transfer In A Lobby \u00b6 Description: When playing in a multiplayer lobby, the required XS scripts are not transfered to other players from the host. (Currently, #includeXS works for scripts that the host has in their profile folder, but recursive includes and scripts from other sources are still not transferred) Expected Behaviour: The main XS script and all XS scripts imported in the main script using include \"fileName.xs\" ; (and potentially more imported scripts inside those scripts too) should be transfered to everyone. Reproduction Steps: Create a new scenario or RMS Create a new XS script that chats something to the screen Include the script in the scenario or RMS Host a lobby with at least two human players Set the map as the above scenario or RMS When the game is started, the host sees the message chatted but the others get a failed to open file error","title":"Fixed"},{"location":"general/xs/bugs/Fixed/#1-xseffectamount-crashes-when-source-player-does-not-exist","text":"Description: When an attribute for a player that is not present in the game is modified, a crash occurs Expected Behaviour: Expressions and variables should be able to be used when initialising Vectors. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 void main () { xsEffectAmount ( cSetAttribute , 1071 , cAmountFirstStorage , current_pop - 250 , 8 ); // if the game is not an 8 player game, this will crash } Include the script in the scenario or RMS When a game is played with less than 8 players, a crash will occur","title":"1. xsEffectAmount Crashes When Source Player Does Not Exist"},{"location":"general/xs/bugs/Fixed/#2-xseffectamount-crashes-when-negative-id-is-provided-for-techobject","text":"Description: When a negative object/tech ID is provided when using cSetAttribute (or similar operations), a crash occurs Expected Behaviour: Expressions and variables should be able to be used when initialising Vectors. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 void main () { xsEffectAmount ( cEnableObject , -1 , cEnableObject , 0 ); } Include the script in the scenario or RMS When a game is played, a crash will occur","title":"2. xsEffectAmount Crashes When Negative ID Is Provided For Tech/Object"},{"location":"general/xs/bugs/Fixed/#3-xs-files-do-not-transfer-in-a-lobby","text":"Description: When playing in a multiplayer lobby, the required XS scripts are not transfered to other players from the host. (Currently, #includeXS works for scripts that the host has in their profile folder, but recursive includes and scripts from other sources are still not transferred) Expected Behaviour: The main XS script and all XS scripts imported in the main script using include \"fileName.xs\" ; (and potentially more imported scripts inside those scripts too) should be transfered to everyone. Reproduction Steps: Create a new scenario or RMS Create a new XS script that chats something to the screen Include the script in the scenario or RMS Host a lobby with at least two human players Set the map as the above scenario or RMS When the game is started, the host sees the message chatted but the others get a failed to open file error","title":"3. XS Files Do Not Transfer In A Lobby"},{"location":"general/xs/bugs/Important/","text":"1. XS File Transferring \u00b6 Description: In a lobby, to other players: In an RMS: from the game dir from the profile dir from the mods (local/subscribed) dir In a Scenario: from the game dir from the profile dir from the mods (local/subscribed) dir To spectators: In an RMS: from the game dir from the profile dir Transfers the directly included XS (using #includeXS) file from the mods (local/subscribed) dir to others, but in the wrong temp folder location In a Scenario: from the game dir from the profile dir Transfers the directly included XS (using script file name box) file from the mods (local/subscribed) dir to others, but in the wrong temp folder location Expected Behaviour: -- Reproduction Steps: -- 2. Technology Related XS function Do Not Work In RMS \u00b6 Description: xsResearchTechnology and xsGetPlayerNumberOfTechs cannot be used in RMS Expected Behaviour: These functions should work in an RMS as they do in scenarios Reproduction Steps: Create a new RMS Create a new XS script with the following code: 1 2 3 4 5 void main () { // these functionds do not work in an RMS xsResearchTechnology ( 22 , true , false , 2 ); xsGetPlayerNumberOfTechs ( 1 ); } When a game is played using the XS script included in an RMS, a parsing error is shown 3. Object Count Related XS function Do Not Work In RMS \u00b6 Description: xsGetObjectCount and xsGetObjectCountTotal cannot be used in RMS Expected Behaviour: These functions should work in an RMS as they do in scenarios Reproduction Steps: Create a new RMS Create a new XS script with the following code: 1 2 3 4 5 void main () { // these functionds do not work in an RMS xsGetObjectCount ( 1 , 83 ); xsGetObjectCountTotal ( 1 , 83 ); } When a game is played using the XS script included in an RMS, a parsing error is shown","title":"Important"},{"location":"general/xs/bugs/Important/#1-xs-file-transferring","text":"Description: In a lobby, to other players: In an RMS: from the game dir from the profile dir from the mods (local/subscribed) dir In a Scenario: from the game dir from the profile dir from the mods (local/subscribed) dir To spectators: In an RMS: from the game dir from the profile dir Transfers the directly included XS (using #includeXS) file from the mods (local/subscribed) dir to others, but in the wrong temp folder location In a Scenario: from the game dir from the profile dir Transfers the directly included XS (using script file name box) file from the mods (local/subscribed) dir to others, but in the wrong temp folder location Expected Behaviour: -- Reproduction Steps: --","title":"1. XS File Transferring"},{"location":"general/xs/bugs/Important/#2-technology-related-xs-function-do-not-work-in-rms","text":"Description: xsResearchTechnology and xsGetPlayerNumberOfTechs cannot be used in RMS Expected Behaviour: These functions should work in an RMS as they do in scenarios Reproduction Steps: Create a new RMS Create a new XS script with the following code: 1 2 3 4 5 void main () { // these functionds do not work in an RMS xsResearchTechnology ( 22 , true , false , 2 ); xsGetPlayerNumberOfTechs ( 1 ); } When a game is played using the XS script included in an RMS, a parsing error is shown","title":"2. Technology Related XS function Do Not Work In RMS"},{"location":"general/xs/bugs/Important/#3-object-count-related-xs-function-do-not-work-in-rms","text":"Description: xsGetObjectCount and xsGetObjectCountTotal cannot be used in RMS Expected Behaviour: These functions should work in an RMS as they do in scenarios Reproduction Steps: Create a new RMS Create a new XS script with the following code: 1 2 3 4 5 void main () { // these functionds do not work in an RMS xsGetObjectCount ( 1 , 83 ); xsGetObjectCountTotal ( 1 , 83 ); } When a game is played using the XS script included in an RMS, a parsing error is shown","title":"3. Object Count Related XS function Do Not Work In RMS"},{"location":"general/xs/bugs/Language%20Syntax/","text":"1. Outputs Of Operations Are Of The Wrong Data Type \u00b6 Description: The output type of an operation is determined by the first operand a*b . For example: 9 * 5.5 evaluates to 49 and not 49.5 . However, the expression 5.5 * 9 gives the correct result. Expected Behaviour: Both the expressions in the above example should yield the same result. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 void main () { int a = 7 ; float b = 1.1 ; // expected `7/1.1 = 6.363636` but actually // prints `7/1.1 = 6` xsChatData ( \"7/1.1 = \" + a / b ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, 6.363636 should have been chatted to the screen, but instead 6 is shown on the screen. 2. Modulo Operator Does Not Work Properly With Floating Point Values \u00b6 Description: Using the modulo operator on floats does not return the fractional part of the answer. Expected Behaviour: Using the modulo operator on a float value should correctly return the fractional part of the remainder. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 void main () { // expected `5.5 mod 1 = 0.500000` but actually // prints `5.5 mod 1 = 0.000000` xsChatData ( \"5.5 mod 1 = \" + ( 5.5 % 1 )); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, 0.500000 should be chatted to the screen, but instaed 0.000000 is shown. 3. Function Parameters And Return Statements Do Not Implicitly Type Cast \u00b6 Description: Passing an int to a function parameter that is supposed to take in a float value gets used as an int and is not type casted. Similarly, values returned from a function are not type casted to the function's return type. For example, if an int is returned in a function that is supposed to return a float , it will just return the int as is without type casting into float Expected Behaviour: Values that are passed to/returned from a function should be correctly type casted. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 float test ( float a = -1 ) { // keeping in mind the previous bug, // 5*5.5 evaluates to 27 (an int) // 27/2 then evaluates to 13 (an int) return ( a * 5.5 / 2 ); // expected to return `13.750000` } void main () { // expected `test = 13.7500000` // prints `test = 13` xsChatData ( \"test = \" + test ( 5 )); // passed 5 for the argument which should // get type casted into a float but it // actually does not. // note that this function is supposed to return a float // but it actually returns an integer! } Include the script in the scenario or RMS When a game is played using the scenario or RMS, 13.750000 should be chatted to the screen, but 13 is shown instead 4. Limit On Number Of Params In A Function Call \u00b6 Description: The number of parameters that can be used IN a function call are limited to 12. Attempting to call a function with more parameters results in an error from the game. Note that the error in the example shown below happens at the line the call is made, and not at the function definition itself. This suggests that defining a function with more than 12 parameters can be defined but they can't be called Expected Behaviour: There should ideally be no limit on the amount of parameters for a function Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void test ( int a1 = 1 , int a2 = 1 , int a3 = 1 , int a4 = 1 , int a5 = 1 , int a6 = 1 , int a7 = 1 , int a8 = 1 , int a9 = 1 , int a10 = 1 , int a11 = 1 , int a12 = 1 , int a13 = 1 ) { } void main () { test ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 ); } Include the script in the scenario or RMS When a game is played using this above script, an error at line 15 (the last line of the function call) is shown If the lines with the function call are commented out, the error goes away 5. Cannot Use Variables Or Expressions In Vector Initialisation \u00b6 Description: When initialising a vector, expressions or variables cannot be used in the initialisation. The code in question is shown below. Expected Behaviour: Expressions and variables should be able to be used when initialising Vectors. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 void main () { float x = 2 ; float y = 4 ; float z = 6 ; // none of these declarations work: vector v1 = vector ( 5 + 5 , 10 , 4 ); vector v2 = vector ( 5 , 10-1 , 4 ); vector v3 = vector ( 5 , 10 , 4 + 5 ); vector v4 = vector ( x , 5 , 3 ); vector v5 = vector ( 3 , y , 2 ); vector v6 = vector ( 4 , 4 , z ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the Could not parse the code for 'main' function error is shown 6. Unary Negative Does Not Work \u00b6 Description: The unary negative operator does not work. Expected Behaviour: Unary negative operator should return the negative of the number. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 void main () { int a = 5 ; float b = 3.4 ; // these do not work: int c = - a ; float d = - a ; int e = - b ; float f = - b ; int g = - a + b ; float h = - a + b ; } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the Could not parse the code for 'main' function error is shown 7. Explicit Type Casting Does Not Work \u00b6 Description: Explicit type casting does not work on variables or at initialisation. Expected Behaviour: Explicit type casting should be able to be used to convert one data type to another. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void main () { float a = 5.5 ; float b = ( int ) a ; // will outwright assign 0 to b // expected `b = 5.000000` but // prints `b = 0.000000` xsChatData ( \"b = \" + b ); b = 6.7 ; xsChatData ( \"b (two) = \" + b ); b = ( int ) 5.7 ; // this expression will do nothing // expected `b = 5.000000` but // prints `b = 6.700000` xsChatData ( \"b (three) = \" + b ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the effects described in the code using comments for each case are observed 8. Loop Variable Not Bounded To The Scope Of The Loop \u00b6 Description: The loop variable from a for loop can be used anywhere outside the body of the loop Expected Behaviour: The scope of the looping variable in for loop should be limited only to the body of the loop Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 void main () { for ( j = 2 ; < 10 ) { xsChatData ( \"j =\" + j ,); } // the scopr of the variable j is not limited to just the loop above xsChatData ( \"j (out of loop scope) = \" + j ); // this will print \"j (out of loop scope) = 10\" } Include the script in the scenario or RMS When a game is played using the scenario or RMS, 'j = 10' will be printed last because of the chat data at the end. 9. Assigning Loop Variable To Itself Does Not Throw An Error \u00b6 Description: Assigning the loop variable from a for loop to itself in the loop definition statement doesn't throw an error. The loop body is even run once Expected Behaviour: This should throw an error in the editor Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 void main () { xsChatData ( \"test before for lop for loop\" ); for ( j = j ; < 10 ) { xsChatData ( \"test inside for loop\" ); } xsChatData ( \"test after for loop\" ); } Include the script in the scenario or RMS When a game is played all three chat data functions run and show on screen 10. Integers Softly Limited To 999_999_999 \u00b6 Description: An int cannot be directly initialised a value greater than 999_999_999 . Attempting to do so causes a parsing error. They can still be given values higher than 999_999_999 by just adding/any other math operations Expected Behaviour: Any value between the 32 bit signed int limits ( -2147483648 and 2147483647 inclusive) should be a valid initial value for an integer Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 void main () { // this line will cause a parsing error: int a = 1000000000 ; } Include the script in the scenario or RMS When a game is played using the scenario or RMS, 'j = 10' will be printed last because of the chat data at the end. 11. Static Variables In Recursive Functions \u00b6 Description: If a static variable is declared inside a recursive function, its value cannot be changed Expected Behaviour: static variables inside recursive functions should behave normally like they do in C++ Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 int prevent_infinite_recursion = 1 ; void test () { static int a = 1 ; xsChatData ( \"a is \" + a + \" pri is \" + prevent_infinite_recursion ); a ++ ; prevent_infinite_recursion ++ ; if ( a < 10 && prevent_infinite_recursion < 10 ) test (); } void main () { test (); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the values of the variable a are always the same 12. Static Variables In Global Scope \u00b6 Description: If a static variable is declared in the global scope, XS execution fails silently Expected Behaviour: This should be allowed (or throws an error) since static variables technically give variables internal linkage which they already have by default in XS. What should really not be allowed though is using extern static int a = 10 ; Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 static int a = 10 ; void main () { xsChatData ( \"test \" + a ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, nothing is chatted to the screen 13. Strings In Global Scope \u00b6 Description: A string declared in the global scope doesn't retain its value Expected Behaviour: When a string is declared in the global scope, it should be usable like other data type variables Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 string a = \"test\" ; void main () { // prints random text to the screen or ??? or shows an // Error invalid encoding xsChatData ( \"a = \" + a ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the actual value that was assigned to the string is not chatted to the screen, but something random 14. Off By One Error With infiniteLoopLimit \u00b6 Description: If infiniteLoopLimit = n; is used inside a function, it makes it so that ALL loops in that function run a maximum of n+1 times. Expected Behaviour: It should make the loops run only n times, one is extra Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 void main () { infiniteLoopLimit = 10 ; int loopCount = 1 ; while ( true ) { xsChatData ( \"loop count %d\" , loopCount ); loopCount ++ ; } // the last line printed is \"loop count 11\" off by one error here } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the last line chatted to the screen is \"loop count 11\" . 15. Silent XS Crash with infiniteRecursionLimit \u00b6 Description: If infiniteRecursionLimit = n; is used inside a function, the function may only be called n-1 times in one call stack. Attempting to call it for the n -th time will result in a silent XS crash Expected Behaviour: The n -th function call should run normally, and further calls to the function in the same call stack should be prevented. The entirety of XS execution should not crash Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 int calls = 1 ; void recursionTest () { infiniteRecursionLimit = 10 ; xsChatData ( \"recursion test %d\" , calls ); // the last line chatted to screen is \"recursion test 9\" and no further XS execution takes place calls ++ ; recursionTest (); } void main () { recursionTest (); xsChatData ( \"further xs execution\" ); // this line isn't chatted to the screen } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the last line chatted to the screen is \"recursion test 9\" . The last xsChatData in main() isn't run at all. 16. Return Statements Do Not Work As Documented \u00b6 Description: Paranthesis are needed around return expressions for them to work. Expected Behaviour: Return expressions should work with or without paranthesis. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 int test () { return 5 + 5 ; // instead, `return (5+5);` would work. } void main () { int a = test (); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the Could not parse the code for 'test' function error is shown 17. Scopes Cannot Be Explicitly Created \u00b6 Description: {} cannot be used to explicitly create a scope Expected Behaviour: Code within {} should define a scope and variable lifetime should properly be managed like in C++ Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 void main () { { int a = 10 ; } xsChatData ( \"test \" + a ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, a parsing error is thrown 18. Cannot Declare Variables As A const In Function Parameters \u00b6 Description: It is not possible to declare a function parameter as a const even though it is used in the xsChatData function in the official documentation. Expected Behaviour: It should bee possible to declare function parameters as a const Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 float test ( const float a = -1 ) { return ( a * 5 ); } void main () { xsChatData ( \"test = \" + test ( 5 )); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the 'const' is not a valid parameter type error is shown 19. Missing Data Types Which Are Documented \u00b6 Description: The long , char and double data types do not exist, even though the official XS documentation references them. Expected Behaviour: Variables of the long , char and double data types shoulld be able to be initialised. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 void main () { // none of these declarations work: long a = 1000 ; double b = 10.34 ; char c = '8' ; } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the Could not parse the code for 'main' function error is shown 20. Weird Behaviour With Return Statements \u00b6 Description: This behaviour is not understood well Expected Behaviour: An Error? Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 float test ( float a = -1 ) { // thisDoesNot... is not a function return thisDoesNotMatterWhatIsGoingOn ( a ) / 55 + 2 * 2 ; // seems like this is completely ignoring the first term in the expression. } void main () { // prints `test = 4` // once again, note that a float returning function is returning an int xsChatData ( \"test = \" + test ( 5 )); //returns 4 } Include the script in the scenario or RMS Run the main function of the script in the scenario 21. Using Single Quotes Causes The Could not emit quads Error \u00b6 Description: Using single quotes (to construct strings) is not allowed and causes the could not emit quads error Expected Behaviour: A more useful error along the lines of: \"Could not parse function x\" or \"Single quotes not allowed\" Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 void unrelatedFunc () { // ... } void main () { string x = ' my string ' ; } Include the script in the scenario or RMS Run the main function of the script in the scenario","title":"Language Syntax"},{"location":"general/xs/bugs/Language%20Syntax/#1-outputs-of-operations-are-of-the-wrong-data-type","text":"Description: The output type of an operation is determined by the first operand a*b . For example: 9 * 5.5 evaluates to 49 and not 49.5 . However, the expression 5.5 * 9 gives the correct result. Expected Behaviour: Both the expressions in the above example should yield the same result. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 void main () { int a = 7 ; float b = 1.1 ; // expected `7/1.1 = 6.363636` but actually // prints `7/1.1 = 6` xsChatData ( \"7/1.1 = \" + a / b ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, 6.363636 should have been chatted to the screen, but instead 6 is shown on the screen.","title":"1. Outputs Of Operations Are Of The Wrong Data Type"},{"location":"general/xs/bugs/Language%20Syntax/#2-modulo-operator-does-not-work-properly-with-floating-point-values","text":"Description: Using the modulo operator on floats does not return the fractional part of the answer. Expected Behaviour: Using the modulo operator on a float value should correctly return the fractional part of the remainder. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 void main () { // expected `5.5 mod 1 = 0.500000` but actually // prints `5.5 mod 1 = 0.000000` xsChatData ( \"5.5 mod 1 = \" + ( 5.5 % 1 )); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, 0.500000 should be chatted to the screen, but instaed 0.000000 is shown.","title":"2. Modulo Operator Does Not Work Properly With Floating Point Values"},{"location":"general/xs/bugs/Language%20Syntax/#3-function-parameters-and-return-statements-do-not-implicitly-type-cast","text":"Description: Passing an int to a function parameter that is supposed to take in a float value gets used as an int and is not type casted. Similarly, values returned from a function are not type casted to the function's return type. For example, if an int is returned in a function that is supposed to return a float , it will just return the int as is without type casting into float Expected Behaviour: Values that are passed to/returned from a function should be correctly type casted. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 float test ( float a = -1 ) { // keeping in mind the previous bug, // 5*5.5 evaluates to 27 (an int) // 27/2 then evaluates to 13 (an int) return ( a * 5.5 / 2 ); // expected to return `13.750000` } void main () { // expected `test = 13.7500000` // prints `test = 13` xsChatData ( \"test = \" + test ( 5 )); // passed 5 for the argument which should // get type casted into a float but it // actually does not. // note that this function is supposed to return a float // but it actually returns an integer! } Include the script in the scenario or RMS When a game is played using the scenario or RMS, 13.750000 should be chatted to the screen, but 13 is shown instead","title":"3. Function Parameters And Return Statements Do Not Implicitly Type Cast"},{"location":"general/xs/bugs/Language%20Syntax/#4-limit-on-number-of-params-in-a-function-call","text":"Description: The number of parameters that can be used IN a function call are limited to 12. Attempting to call a function with more parameters results in an error from the game. Note that the error in the example shown below happens at the line the call is made, and not at the function definition itself. This suggests that defining a function with more than 12 parameters can be defined but they can't be called Expected Behaviour: There should ideally be no limit on the amount of parameters for a function Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void test ( int a1 = 1 , int a2 = 1 , int a3 = 1 , int a4 = 1 , int a5 = 1 , int a6 = 1 , int a7 = 1 , int a8 = 1 , int a9 = 1 , int a10 = 1 , int a11 = 1 , int a12 = 1 , int a13 = 1 ) { } void main () { test ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 ); } Include the script in the scenario or RMS When a game is played using this above script, an error at line 15 (the last line of the function call) is shown If the lines with the function call are commented out, the error goes away","title":"4. Limit On Number Of Params In A Function Call"},{"location":"general/xs/bugs/Language%20Syntax/#5-cannot-use-variables-or-expressions-in-vector-initialisation","text":"Description: When initialising a vector, expressions or variables cannot be used in the initialisation. The code in question is shown below. Expected Behaviour: Expressions and variables should be able to be used when initialising Vectors. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 void main () { float x = 2 ; float y = 4 ; float z = 6 ; // none of these declarations work: vector v1 = vector ( 5 + 5 , 10 , 4 ); vector v2 = vector ( 5 , 10-1 , 4 ); vector v3 = vector ( 5 , 10 , 4 + 5 ); vector v4 = vector ( x , 5 , 3 ); vector v5 = vector ( 3 , y , 2 ); vector v6 = vector ( 4 , 4 , z ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the Could not parse the code for 'main' function error is shown","title":"5. Cannot Use Variables Or Expressions In Vector Initialisation"},{"location":"general/xs/bugs/Language%20Syntax/#6-unary-negative-does-not-work","text":"Description: The unary negative operator does not work. Expected Behaviour: Unary negative operator should return the negative of the number. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 void main () { int a = 5 ; float b = 3.4 ; // these do not work: int c = - a ; float d = - a ; int e = - b ; float f = - b ; int g = - a + b ; float h = - a + b ; } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the Could not parse the code for 'main' function error is shown","title":"6. Unary Negative Does Not Work"},{"location":"general/xs/bugs/Language%20Syntax/#7-explicit-type-casting-does-not-work","text":"Description: Explicit type casting does not work on variables or at initialisation. Expected Behaviour: Explicit type casting should be able to be used to convert one data type to another. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void main () { float a = 5.5 ; float b = ( int ) a ; // will outwright assign 0 to b // expected `b = 5.000000` but // prints `b = 0.000000` xsChatData ( \"b = \" + b ); b = 6.7 ; xsChatData ( \"b (two) = \" + b ); b = ( int ) 5.7 ; // this expression will do nothing // expected `b = 5.000000` but // prints `b = 6.700000` xsChatData ( \"b (three) = \" + b ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the effects described in the code using comments for each case are observed","title":"7. Explicit Type Casting Does Not Work"},{"location":"general/xs/bugs/Language%20Syntax/#8-loop-variable-not-bounded-to-the-scope-of-the-loop","text":"Description: The loop variable from a for loop can be used anywhere outside the body of the loop Expected Behaviour: The scope of the looping variable in for loop should be limited only to the body of the loop Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 void main () { for ( j = 2 ; < 10 ) { xsChatData ( \"j =\" + j ,); } // the scopr of the variable j is not limited to just the loop above xsChatData ( \"j (out of loop scope) = \" + j ); // this will print \"j (out of loop scope) = 10\" } Include the script in the scenario or RMS When a game is played using the scenario or RMS, 'j = 10' will be printed last because of the chat data at the end.","title":"8. Loop Variable Not Bounded To The Scope Of The Loop"},{"location":"general/xs/bugs/Language%20Syntax/#9-assigning-loop-variable-to-itself-does-not-throw-an-error","text":"Description: Assigning the loop variable from a for loop to itself in the loop definition statement doesn't throw an error. The loop body is even run once Expected Behaviour: This should throw an error in the editor Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 void main () { xsChatData ( \"test before for lop for loop\" ); for ( j = j ; < 10 ) { xsChatData ( \"test inside for loop\" ); } xsChatData ( \"test after for loop\" ); } Include the script in the scenario or RMS When a game is played all three chat data functions run and show on screen","title":"9. Assigning Loop Variable To Itself Does Not Throw An Error"},{"location":"general/xs/bugs/Language%20Syntax/#10-integers-softly-limited-to-999_999_999","text":"Description: An int cannot be directly initialised a value greater than 999_999_999 . Attempting to do so causes a parsing error. They can still be given values higher than 999_999_999 by just adding/any other math operations Expected Behaviour: Any value between the 32 bit signed int limits ( -2147483648 and 2147483647 inclusive) should be a valid initial value for an integer Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 void main () { // this line will cause a parsing error: int a = 1000000000 ; } Include the script in the scenario or RMS When a game is played using the scenario or RMS, 'j = 10' will be printed last because of the chat data at the end.","title":"10. Integers Softly Limited To 999_999_999"},{"location":"general/xs/bugs/Language%20Syntax/#11-static-variables-in-recursive-functions","text":"Description: If a static variable is declared inside a recursive function, its value cannot be changed Expected Behaviour: static variables inside recursive functions should behave normally like they do in C++ Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 int prevent_infinite_recursion = 1 ; void test () { static int a = 1 ; xsChatData ( \"a is \" + a + \" pri is \" + prevent_infinite_recursion ); a ++ ; prevent_infinite_recursion ++ ; if ( a < 10 && prevent_infinite_recursion < 10 ) test (); } void main () { test (); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the values of the variable a are always the same","title":"11. Static Variables In Recursive Functions"},{"location":"general/xs/bugs/Language%20Syntax/#12-static-variables-in-global-scope","text":"Description: If a static variable is declared in the global scope, XS execution fails silently Expected Behaviour: This should be allowed (or throws an error) since static variables technically give variables internal linkage which they already have by default in XS. What should really not be allowed though is using extern static int a = 10 ; Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 static int a = 10 ; void main () { xsChatData ( \"test \" + a ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, nothing is chatted to the screen","title":"12. Static Variables In Global Scope"},{"location":"general/xs/bugs/Language%20Syntax/#13-strings-in-global-scope","text":"Description: A string declared in the global scope doesn't retain its value Expected Behaviour: When a string is declared in the global scope, it should be usable like other data type variables Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 string a = \"test\" ; void main () { // prints random text to the screen or ??? or shows an // Error invalid encoding xsChatData ( \"a = \" + a ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the actual value that was assigned to the string is not chatted to the screen, but something random","title":"13. Strings In Global Scope"},{"location":"general/xs/bugs/Language%20Syntax/#14-off-by-one-error-with-infinitelooplimit","text":"Description: If infiniteLoopLimit = n; is used inside a function, it makes it so that ALL loops in that function run a maximum of n+1 times. Expected Behaviour: It should make the loops run only n times, one is extra Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 void main () { infiniteLoopLimit = 10 ; int loopCount = 1 ; while ( true ) { xsChatData ( \"loop count %d\" , loopCount ); loopCount ++ ; } // the last line printed is \"loop count 11\" off by one error here } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the last line chatted to the screen is \"loop count 11\" .","title":"14. Off By One Error With infiniteLoopLimit"},{"location":"general/xs/bugs/Language%20Syntax/#15-silent-xs-crash-with-infiniterecursionlimit","text":"Description: If infiniteRecursionLimit = n; is used inside a function, the function may only be called n-1 times in one call stack. Attempting to call it for the n -th time will result in a silent XS crash Expected Behaviour: The n -th function call should run normally, and further calls to the function in the same call stack should be prevented. The entirety of XS execution should not crash Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 int calls = 1 ; void recursionTest () { infiniteRecursionLimit = 10 ; xsChatData ( \"recursion test %d\" , calls ); // the last line chatted to screen is \"recursion test 9\" and no further XS execution takes place calls ++ ; recursionTest (); } void main () { recursionTest (); xsChatData ( \"further xs execution\" ); // this line isn't chatted to the screen } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the last line chatted to the screen is \"recursion test 9\" . The last xsChatData in main() isn't run at all.","title":"15. Silent XS Crash with infiniteRecursionLimit"},{"location":"general/xs/bugs/Language%20Syntax/#16-return-statements-do-not-work-as-documented","text":"Description: Paranthesis are needed around return expressions for them to work. Expected Behaviour: Return expressions should work with or without paranthesis. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 int test () { return 5 + 5 ; // instead, `return (5+5);` would work. } void main () { int a = test (); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the Could not parse the code for 'test' function error is shown","title":"16. Return Statements Do Not Work As Documented"},{"location":"general/xs/bugs/Language%20Syntax/#17-scopes-cannot-be-explicitly-created","text":"Description: {} cannot be used to explicitly create a scope Expected Behaviour: Code within {} should define a scope and variable lifetime should properly be managed like in C++ Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 void main () { { int a = 10 ; } xsChatData ( \"test \" + a ); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, a parsing error is thrown","title":"17. Scopes Cannot Be Explicitly Created"},{"location":"general/xs/bugs/Language%20Syntax/#18-cannot-declare-variables-as-a-const-in-function-parameters","text":"Description: It is not possible to declare a function parameter as a const even though it is used in the xsChatData function in the official documentation. Expected Behaviour: It should bee possible to declare function parameters as a const Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 float test ( const float a = -1 ) { return ( a * 5 ); } void main () { xsChatData ( \"test = \" + test ( 5 )); } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the 'const' is not a valid parameter type error is shown","title":"18. Cannot Declare Variables As A const In Function Parameters"},{"location":"general/xs/bugs/Language%20Syntax/#19-missing-data-types-which-are-documented","text":"Description: The long , char and double data types do not exist, even though the official XS documentation references them. Expected Behaviour: Variables of the long , char and double data types shoulld be able to be initialised. Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 void main () { // none of these declarations work: long a = 1000 ; double b = 10.34 ; char c = '8' ; } Include the script in the scenario or RMS When a game is played using the scenario or RMS, the Could not parse the code for 'main' function error is shown","title":"19. Missing Data Types Which Are Documented"},{"location":"general/xs/bugs/Language%20Syntax/#20-weird-behaviour-with-return-statements","text":"Description: This behaviour is not understood well Expected Behaviour: An Error? Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 8 9 10 11 float test ( float a = -1 ) { // thisDoesNot... is not a function return thisDoesNotMatterWhatIsGoingOn ( a ) / 55 + 2 * 2 ; // seems like this is completely ignoring the first term in the expression. } void main () { // prints `test = 4` // once again, note that a float returning function is returning an int xsChatData ( \"test = \" + test ( 5 )); //returns 4 } Include the script in the scenario or RMS Run the main function of the script in the scenario","title":"20. Weird Behaviour With Return Statements"},{"location":"general/xs/bugs/Language%20Syntax/#21-using-single-quotes-causes-the-could-not-emit-quads-error","text":"Description: Using single quotes (to construct strings) is not allowed and causes the could not emit quads error Expected Behaviour: A more useful error along the lines of: \"Could not parse function x\" or \"Single quotes not allowed\" Reproduction Steps: Create a new scenario or RMS Create a new XS script with the following code: 1 2 3 4 5 6 7 void unrelatedFunc () { // ... } void main () { string x = ' my string ' ; } Include the script in the scenario or RMS Run the main function of the script in the scenario","title":"21. Using Single Quotes Causes The Could not emit quads Error"},{"location":"mods/","text":"Written By: hszemi Game mods (short for \"modifications\") allow you to customise your game. The most common types of mods are: Additional content (like Random Map Scripts, Scenarios, or Campaigns), User Interface mods (like moving the resource bar to the bottom), Graphic mods (like small trees or idle villager pointer), Data mods (like the Exploding Villagers mod or the No Wall mod). Mods work by modifying or adding files in your game directory. That's it. The hard part is figuring out which files you need to modify, and how. Of course you can edit files in your game folder directly, but that has the following disadvantages: It modifies your vanilla game You cannot switch easily between different modifications You cannot quickly disable and enable your modifications If you break something, you can't simply fetch the original file from your game files and start again This is solved by bundling your modifications into game mods, which you can then manage comfortably through the in-game mod center. There are two kinds of mods: Local and subscribed mods. Local mods only exist in a folder on your computer. Subscribed mods are published in the mod center, and you have subscribed to them. While developing a mod, you usually use a local mod to test your modifications. Once it is ready, you can publish it so other people can subscribe to it and therefore use it as well. Published mods can also be updated with a new version. If you are subscribed to a mod, the game regularly checks for new versions of those mods and downloads them automatically. Creating a local mod \u00b6 First, you need to locate your local mod folder. You can usually find it at the following location: 1 C:\\Users\\<username>\\Games\\Age of Empires 2 DE\\<number>\\mods It contains two folders: A local folder, which contains your local mods, and a subscribed folder, which contains the mods you subscribed to. Inside of the local folder, create a folder with an arbitrary name that describes your mod. For demonstration purposes, let's call it funktown . Inside of funktown , place all the modified and new files in the same folder structure that you find in the game directory. For example, if you want to provide a modified version of resources/en/strings/key-value/key-value-modded-strings-utf8.txt , you have to create resources/en/strings/key-value as subfolders inside of funktown , and then place your version of key-value-modded-strings-utf8.txt inside of that key-value folder. If you want to also add a new Random Map Script called FunkyTown-v3.rms to the random maps selection, you would likewise have to create resources/_common/random-map-scripts as subfolders inside of funktown , and then place your FunkyTown-v3.rms file inside of that random-map-scripts folder. Finally, in order to give your new local mod a recognisable name in the Mod centre, create a file called info.json inside of the funktown folder and add the following content (you can of course adapt the values): 1 2 3 4 5 6 { \"Author\" : \"Your Name\" , \"CacheStatus\" : 0 , \"Description\" : \"A Description of your liking\" , \"Title\" : \"funktown test mod\" } The contents of your local mods folder should now look like this: Publishing a mod \u00b6 There are two ways to publish a mod: By publishing it from inside the game, or by uploading it as a zipped archive to the ageofempires.com website Publishing from within the game \u00b6 You need to be signed in via XBOX Live inside the game in order to publish mods from within the game. In the mod centre, open the tab \"My mods\", where your local mods are listed. Select the mod you want to publish, and click \"Publish Mod\". Publishing by uploading a zip file on ageofempires.com \u00b6 Put the contents of your local mod into a zip file, such that the zip file has a structure like this (the info.json file is not required): Sign in on ageofempires.com with your XBOX Live account. From the navigation menu, select Mods > Submit a mod. Fill in the appropriate values in the Form. For the Zip File Upload, select the zip file your created at the beginning. Once you submit, your mod is being published. Be patient, this may take multiple minutes. Updating a published mod \u00b6 As time goes on, you might want to update or improve your mod. And then, you of course want to update your published mod, so everyone else can profit from the improvements as well. Updating from withing the game \u00b6 To update a mod via the game: go to the in-game mod menu, go to the \"My Mods\" tab click the mod that you want to update click \"Update Mod\" type in the relevant information in the fields provided select the folder that contains your mod using the \"Select Folder\" option at the top left of the UI click \"Publish\" and wait for a few seconds. Once the mod is up, you will be redirected to the ageofempires.com page for your mod Updating via ageofempires.com \u00b6 To update a mod via the ageofempires.com website, you: create a new zip file with all the contents of the mod open the mod you want to update on the website and click edit it select your new zip file under \"Zip File Upload\". you also have the ability to describe what changed in this update in the \"Change List\" field. click \"Submit\", wait for a few seconds/minutes, and your mod should be updated. Troubleshooting \u00b6 1. Do you have trouble updating / downloading mods or logging in? \u00b6 Maybe the mod centre simply is going through a phase of having technical issues. That happens frequently. Ask fellow modders if they are experiencing the same issues. 2. Does the content you added in your mod not show up in game? \u00b6 Maybe your mod is just disabled. That happens automatically after a game update. Maybe your files are not in the right spot. Double-check your folder names for typos, and your folder structure overall if it matches the one outlined above. Maybe you are trying to combine a data mod with a User Interface or Content mod. While that should be possible according to the patch notes, this functionality seems to be broken again.","title":"Index"},{"location":"mods/#creating-a-local-mod","text":"First, you need to locate your local mod folder. You can usually find it at the following location: 1 C:\\Users\\<username>\\Games\\Age of Empires 2 DE\\<number>\\mods It contains two folders: A local folder, which contains your local mods, and a subscribed folder, which contains the mods you subscribed to. Inside of the local folder, create a folder with an arbitrary name that describes your mod. For demonstration purposes, let's call it funktown . Inside of funktown , place all the modified and new files in the same folder structure that you find in the game directory. For example, if you want to provide a modified version of resources/en/strings/key-value/key-value-modded-strings-utf8.txt , you have to create resources/en/strings/key-value as subfolders inside of funktown , and then place your version of key-value-modded-strings-utf8.txt inside of that key-value folder. If you want to also add a new Random Map Script called FunkyTown-v3.rms to the random maps selection, you would likewise have to create resources/_common/random-map-scripts as subfolders inside of funktown , and then place your FunkyTown-v3.rms file inside of that random-map-scripts folder. Finally, in order to give your new local mod a recognisable name in the Mod centre, create a file called info.json inside of the funktown folder and add the following content (you can of course adapt the values): 1 2 3 4 5 6 { \"Author\" : \"Your Name\" , \"CacheStatus\" : 0 , \"Description\" : \"A Description of your liking\" , \"Title\" : \"funktown test mod\" } The contents of your local mods folder should now look like this:","title":"Creating a local mod"},{"location":"mods/#publishing-a-mod","text":"There are two ways to publish a mod: By publishing it from inside the game, or by uploading it as a zipped archive to the ageofempires.com website","title":"Publishing a mod"},{"location":"mods/#publishing-from-within-the-game","text":"You need to be signed in via XBOX Live inside the game in order to publish mods from within the game. In the mod centre, open the tab \"My mods\", where your local mods are listed. Select the mod you want to publish, and click \"Publish Mod\".","title":"Publishing from within the game"},{"location":"mods/#publishing-by-uploading-a-zip-file-on-ageofempirescom","text":"Put the contents of your local mod into a zip file, such that the zip file has a structure like this (the info.json file is not required): Sign in on ageofempires.com with your XBOX Live account. From the navigation menu, select Mods > Submit a mod. Fill in the appropriate values in the Form. For the Zip File Upload, select the zip file your created at the beginning. Once you submit, your mod is being published. Be patient, this may take multiple minutes.","title":"Publishing by uploading a zip file on ageofempires.com"},{"location":"mods/#updating-a-published-mod","text":"As time goes on, you might want to update or improve your mod. And then, you of course want to update your published mod, so everyone else can profit from the improvements as well.","title":"Updating a published mod"},{"location":"mods/#updating-from-withing-the-game","text":"To update a mod via the game: go to the in-game mod menu, go to the \"My Mods\" tab click the mod that you want to update click \"Update Mod\" type in the relevant information in the fields provided select the folder that contains your mod using the \"Select Folder\" option at the top left of the UI click \"Publish\" and wait for a few seconds. Once the mod is up, you will be redirected to the ageofempires.com page for your mod","title":"Updating from withing the game"},{"location":"mods/#updating-via-ageofempirescom","text":"To update a mod via the ageofempires.com website, you: create a new zip file with all the contents of the mod open the mod you want to update on the website and click edit it select your new zip file under \"Zip File Upload\". you also have the ability to describe what changed in this update in the \"Change List\" field. click \"Submit\", wait for a few seconds/minutes, and your mod should be updated.","title":"Updating via ageofempires.com"},{"location":"mods/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"mods/#1-do-you-have-trouble-updating-downloading-mods-or-logging-in","text":"Maybe the mod centre simply is going through a phase of having technical issues. That happens frequently. Ask fellow modders if they are experiencing the same issues.","title":"1. Do you have trouble updating / downloading mods or logging in?"},{"location":"mods/#2-does-the-content-you-added-in-your-mod-not-show-up-in-game","text":"Maybe your mod is just disabled. That happens automatically after a game update. Maybe your files are not in the right spot. Double-check your folder names for typos, and your folder structure overall if it matches the one outlined above. Maybe you are trying to combine a data mod with a User Interface or Content mod. While that should be possible according to the patch notes, this functionality seems to be broken again.","title":"2. Does the content you added in your mod not show up in game?"},{"location":"mods/age/basics/","text":"","title":"Basics"},{"location":"publishing_ugc/publish/","text":"","title":"Publish"},{"location":"rms/basics/","text":"","title":"Basics"},{"location":"scenarios/","text":"Basics of the Scenario Editor \u00b6 Written by: Alian713 Custom Scenarios allow you to define your own, custom game modes. Literally, they are different \"scenarios\" the game can be played in. The Scenario Editor \u00b6 The Scenario Editor is the tool that every map maker uses to make and test scenarios. To open a new scenario in the editor, Click Single Player in the main menu Click Editors Click Create Scenario To open a saved scenario in the editor, Double-click the scenario from the list in the editors menu in step 3 above To open an externally downloaded scenario in the editor, Click Open Scenario Folder in the editors menu in step 3 above Put the downloaded scenario in this folder To see the newly added scenario in the editors menu, go back to the main menu and open the editors menu again. When you load into a new scenario, it is a blank canvas for you to play with! In the editor, there are quite a few tabs that you can see at the top, their functionalities are discussed below: 1. Map \u00b6 Under the Map tab in the editor, there are several options to change the map, they are discussed below: 1.1. Map Style \u00b6 Blank Map : This option generates a map of the same terrain throughout the map. The default map that is generated when a new scenario is loaded is a blank map with grass terrain. Random Map : This option generates a map from an RMS. (RMS stands for Random Map Script, they are scripts that generate regular maps like Arabia) Seed Map : This option generates a map from an RMS using a specified seed. Question What is a seed you ask? Each generation of a particular RMS in the game has a number attached to it called its \"seed\" that uniquely identifies that particular generation of the RMS. Generating a map with the same RMS and seed twice will give you the exact same map! 1.2. AI Map Type \u00b6 This option is used by AIs to figure out what kind of a map they are playing on. This is important if you have AIs in your map because you want them to go for water builds when you have water on your map. Lets say that the map is nomad themed, then setting the AI Map Type to Nomad would allow AI players to properly play in a nomad style. 1.3. Colour Mood \u00b6 This setting changes the colour theme (lighting) of the map. By default it is set to Empty which means no colour theme. Colour themes are used for aesthetic reasons only and do not effect gameplay. For exmaple, if you are making a map set in the winter season, then using the winter colour theme could be an option. 1.4. Team Positions \u00b6 This setting is for when you generate maps from an RMS. It determines if players in the same team are placed in order of their colour or if they are randomly distributed throughout the map For example, The teams are currently set to Players 1,3,5,7 vs Players 2,4,6,8 and generating the map with team positions on gives this result: Notice that players 1,3,5,7 who are on the same team have, generated in that particular order (going counter clockwise in the image) and that players 2,4,6,8 have also generated in that order. Generating the map with team positions off on the other hand, gives this result: Notice that now, players 1,3,5,7 who are on the same team, have generated in random positions. Similarly players 2,4,6,8 have generated in no particular order. Also note that even though the positions within the team are random, the players are still grouped on each side of the map by team. To be more precise, this option generates players in each team in order of their player numbers. Players do not have to be in the specific teams used in the above exmaple for this to work. 1.5. Extend Map \u00b6 This features is useful for expanding an already existing map if you need to use more space. To use it, Click the checkbox called Extend Map . This brings up two new options, New Map Size and a Map Offset . New Map Size : the size of the new map that will be generated. Map Offset : determines where to place the existing map on the new map. For example, Extending this 4 player map with a New Map Size of 8 players and a Map Offset of North gives the following result: Remember, the top corner of the map is North! 1.6. Script Filename \u00b6 This is the place where you need to enter the name of any XS scripts that you are using in your map. XS scripts are covered in the XS Scripts section of this guide 2. Global Victory \u00b6 Under the Global Victory tab in the editor, there are options that allow you to define custom victory conditions for all players. They are all discussed below: 2.1. Standard \u00b6 A player wins by either defeating all enemies, or capturing 5 relics and holding them for 200 years, or constructing and holding a wonder for 200 years 2.2. Conquest \u00b6 A player can only win by defeating all enemy players 2.3. Score \u00b6 The first player to reach the specified score wins 2.4. Time Limit \u00b6 The game is played until the specified time limit. When the time limit is reached, the player with the highest score wins 2.5. Custom \u00b6 This victory condition can be customised using the following options: Conquest this is the same as the victory condition in point 2. above Exploration the first player to reach the specified percentage of the map explored wins the game. (There is a text box infront of this option to specify percentage) Relics the first player to capture the specified quantity of relics wins the game. Unlike Standard Victory, a playar wins as soon as they have gathered the relics and do not need to hold them for 200 years. (There is a text box infront of this option to specify quantity) Any One a player can complete any one of the victory condition enabled above to win All a player has to complete all of the victory conditions enabled above to win 3. Terrain \u00b6 Under the Terrain tab in the editor, there are a lot of options to modify the terrain of the map. Each of them are discussed below: 3.1. Map \u00b6 This option allows you to manually place down terrain on the map. Brush Size : allows you to pick how large of an area you want to affect on the map at once Layering Mode : allows you to blend and layer another type of terrain on top of the base terrain. Note that the terrain properties like buildings that can be placed on terrain are still determined by the base terrain. This means that you won't be able to build buildings on ice layered with grass but you will be able to build buildings on grass layered with ice Eye Candy : determines if the terrain you place automatically spawns eye candy on top of it. Eye candy are plants and other units that are generated for aesthetic reasons only, hence the name \"eye candy\" No Waves on Shore : disables waves on water throughout the map Water Definitions : this option changes what water looks like throughout the map Different water definitions are shown below: Preset_Main : Preset_FE1 : Preset_FE2 : Preset_WickedWitch : Beach Type : this option changes the type of beach terrain that is placed down when water terrain is placed. Exploring the different beach types has been left as an excersise for the reader. 3.2. Elevation \u00b6 This option allows you to change the elevation of existing tiles on the map. Brush Size : allows you to pick how large of an area you want to affect on the map at once Tip In the editor, there are 7 different levels of elevation to chose from, but the elevation can actually have higher or lower values. In the editor, there is no way to make water have elevation either, but it is actually possible to give water elevation as well. Both of these things requires use of external map editing tools and are covered under the AoE2ScenarioParser section of this guide. 3.3. Cliffs \u00b6 This option allows you to place cliffs on your map. There are two types of cliffs to chose from, Granite and Sandstone. They function exactly the same, and differ only in their appearence. Tip A cliff is actually a gaia object that can be rotated, if you go to the Units tab, and enable the Rotate option, you will be able to click the cliff and rotate it (right click rotates it in the opposite direction). There are a few rotations of the cliff objects that actually do not have graphics for them and hence appear invisible. but since they are still present on the map, just not visible, they block units from going through them. This mechanic can be used to make invisible walls on the map! 3.4. Map Copy \u00b6 This option allows you to copy a part of the map and paste it using a brush. There are options to rotate and flip the selected area as well. Bug When a selection that is rectangular is rotated, the highlighted area that shows the brush DOES NOT rotate accordingly to show this rotation, but the game still pastes a rotated as you would expect. There is also another option called Change Player . This option allows you to change the player of the units in the selection to another player when pasting the selection. 3.5. Erase \u00b6 This option allows you to selectively remove parts of the map in an area using a brush. The objects that can be selectively removed when using this feature are: Buildings Gaia Objects Invisible Units Layered Terrain Trees Units Abstract The layering mode option in this tab seems to have no effect on the way that elements are erased. 4. Options \u00b6 Under the Options tab in the editor, there are options to: 4.1. Point of View \u00b6 Set the specified player's starting PoV to your current view in the editor using the set view button. Once the view is set, check that it works by clicking go to view 4.2. Testing Difficulty \u00b6 Set the Testing Difficulty 4.3. Full Tech Tree \u00b6 Enable Full Tech Tree for all players. Warning This option does not disable civ bonuses unlike the full tech tree option in normal games! 4.4. Disable Objects \u00b6 Disable Buildings, Units or Techs by moving them from the Full List to the Disabled List by clicking the < arrow. remove an object from the disabled list by clicking > . The << and >> move all items at once Note: Using this option to disable objects is not recommended as there is a better way to do it via triggers which are covered in the Triggers section of this guide. 4.5. Collide & Correcting \u00b6 Enabling this option makes stationary units move out the way to let moving units pass through. 4.6. Villager Force Drop \u00b6 Makes villagers instantly lose their resources when their tasks are switched instead of losing when they actually start working on the other task. This mimics FE behaviour, i.e. if villagers are switched from hunters to sheep, they don't lose any food. 4.7. Block Humanity Team Change \u00b6 Lock Teams ONLY for human players. 5. Players \u00b6 Under the Players tab in the editor, there are several properties that can be changed about the players 5.1. Number of Players \u00b6 The total number of players you have in your scenario 5.2. Starting Age \u00b6 Specify the starting age for the currently selected player 5.3. Colour \u00b6 Specify the colour of the currently selected player 5.4. Starting Resources \u00b6 Food , Wood , Stone , Gold determine the starting amount of the currently selected player's resources 5.5. Pop Limit \u00b6 Determine the maximum population limit allowed for the currently selected player. This value is capped at 500 5.6. Base Priority \u00b6 This option seems to have no effect on the game. Question If you are aware of what this does, please reach out to one of the authors of this guide and let them know! 5.7. Tribe Name \u00b6 Sets the name for the currently selected player if they are an AI. Does not effect human players 5.8. Name String ID \u00b6 This field is used for refering to names that the game recognises by default. It can be used to automatically set a Tribe name by using a value that the game recognises. Trying out the value 1 in this field on an AI and seeing what happens is left as an excersise for the reader. 5.9. Personality \u00b6 The AI to use for this player if they are not a human player. Pick E3-p2.ai to simulate an afk player 5.10. Player Type \u00b6 This setting doesn't make a difference to gameplay. The only difference between the two options is that setting this to Either wont auto fill lobby slots with AIs. Setting it to AI will automatically set that player up for you in a lobby game 5.11. Civilization \u00b6 Set the currently selected player's civilization 5.12. Lock Civ \u00b6 Prevent the currently selected player from changing their civilization in a lobby 5.13. Architecture \u00b6 Change the currently selected player's architecture set to another civilization's. 5.14. Swap Players \u00b6 Swap the settings for the currently selected player with the specified player. 6. Messages \u00b6 Under the Messages tab, there are different options for displaying text in the scenario. 6.1. Scenario Instructions \u00b6 This option lets you set the text that is shown in the Instructions tab of the Objectives Panel . Note The Objective Panel can be opened by clicking the button to the right of the Tech Tree button at the top of the screen. 6.2. Objectives \u00b6 This option lets you set the text that is shown in the Objectives tab of the Objectives Panel . 6.3. Hints \u00b6 This option lets you set the text that is shown in the Hints tab of the Objectives Panel . 6.4. Scout \u00b6 This option lets you set the text that is shown in the Scout tab of the Objectives Panel . 6.5. Victory \u00b6 This option lets you set the text that is shown to players who win the game before the statistics screen. 6.6. Defeat \u00b6 This option lets you set the text that is shown to players who lose the game before the statistics screen. 7. Units \u00b6 Under the Units tab, there are several options to place and manipulate units. 7.1. Placing Units \u00b6 Units can be placed on the map from the 4 menus in this tab: The game categorises all unit objects in the game into 4 categories, Units , Buildings , Heroes , Others . Units allows you to place down units that are most commonly seen in regular games. Buildings allows you to place down most of the different buildings in the game. Heroes allows you to place down the hero units used in campaigns and scenarios. Others these are miscellanious units that do not directly come under any of the above categories. By default, units are placed in a random rotation, however scrolling up/down before placing a unit allows you to fix its rotation to whichever rotation you want. To go back to placing in a random rotation, select another unit in the menu and then re select the unit for placement. While placing these units, changing the player to Gaia will reveal additional hidden units like trees, mines, wolves and other units that only Gaia can own in normal games. There are additional units in the game that cannot be seen in the editor's lists even when using Gaia to place them. There are two ways to use these hidden units: Use a create object trigger with the hidden unit's object ID Use the Advanced Genie Editor (A.G.E.) to unhide hidden units in the editor to allow for manual placement. If you do not know how to do either of those, you can refer to the Effects section of this guide for the first option, and/or refer to the Unhide Editor Units section of this guide 7.2. Deleting Units \u00b6 Units that are already placed on the map can be deleted from the map by the following ways: The first and the most obvious option is to use the Delete option in this tab. This allows us to delete units one by one from the map. The first option can be tedious if you need to delete a large amount of units, thus the second option is to use the Erase Units option in the Erase menu under the Terrain tab. Refer to 3.5. Erase about how to use the Erase option. 7.3. Moving Units \u00b6 Units already placed on the map can be moved around on the map by using the Move option in this tab. 7.4. Rotating Units \u00b6 Units already placed on the map can be rotated by using the Rotate option in this tab. After the Rotate option is selected, clicking a unit will rotate it clockwise, and right clicking it will rotate it counter clockwise. 7.5. Selecting Units \u00b6 When selecting a unit, its statistics like HP, Attack, Armour and units garrisoned inside it are shown. Units inside other units can be deleted using the garrison delete. 7.6. Converting Units \u00b6 This option allows you to convert existing units from one or more players to another player. When enabled, 9 new options (to the right) appear in the menu for selecting which players' units you want to convert from . The currently selected player (on the left) is the player the units will be converted to . After picking a Brush Size when you click on an area, all of the units belonging to the players being converted from will be converted to the selected player. Remember the players being converted from are selected on the right side using the checkboxes, and the player being converted to is the one selected in the dropdown to the left! 8. Cinematics \u00b6 Under the Cinematics tab, there are options to change the movie clips displayed before or after a scenario. Bug These are mainly used in the campaigns, and functionality for changing them in scenarios is bugged as of the time of the writing of this guide. 9. Diplomacy \u00b6 Under the Diplomacy tab, there are options to change the diplomacy settings of the game: 9.1. Diplomacy Stance \u00b6 The grid of checkboxes to the right allows you to change each player's stance with all of the other players. 9.2. Lock Teams \u00b6 This option makes it so that teams cannot be changed by players in the game. They can still be changed by triggers. 9.3. Players Choose Teams \u00b6 Disabling this option will not allow players to pick teams in the lobby before the start of the game. The teams will not be locked however, and may still be changed in game unless the Lock Teams option is also enabled. 9.4. Random Start Points \u00b6 This option seems to have no effect on the game. Question If you are aware of what this does, please reach out to one of the authors of this guide and let them know! 10. Triggers \u00b6 Under the Triggers tab, triggers can be manipulated in a scenario. Triggers are the most powerful component of a scenario as they allow us to do a plethora of different things in a game. They can be used to add more dynamics and game mechanics to a scenario, almost anything that you could think of (within the context of AoE2 and its own limits) is possible to do in some way using triggers. Details about how to use triggers are covered in the Triggers section of this guide. 11. Useful Hotkeys \u00b6 Some hotkeys that are useful to know and make the workflow of making and testing a scenario faster Scrolling up and down on a dropdown list makes the values go up and down the lists as well Pressing or holding a letter in any object selection menu will cycle through the list of objects If you are on a tab where a player can be selected (except triggers) then pressing numbers 1-8 will switch to that player When testing a scenario, pressing Ctrl + Shift and F# where # is the number of a player, will let you control that player. For example, pressing Ctrl + Shift + F4 will shift your control to player 4 Scrolling when placing objects will rotate them. Some gaia buildings and units have entirely different graphics for different rotations! Pressing Ctrl + G once allows for off grid placement of units. Pressing it again allows for stacking units and off grid placement together. Pressing a 3 rd time allows for on grid unit placement with stacking enabled. Pressing a 4 th time makes it go back to default! Even Buildings can be stacked using this option! Ctrl + Q Quit the scenario editor Ctrl + A Toggle hitboxes on every unit on the map Ctrl + S Save the scenario Ctrl + L Load a scenario Ctrl + N Create a new scenario Tabs F1 - F10 selects a tab in the scenario editor. F1 - Map, F2 - Terrain, and so on Ctrl + W Switch to the Messages tab Ctrl + R Switch to the Triggers tab Ctrl + T Switch to the Terrain tab Ctrl + U Switch to the Units tab Ctrl + O Switch to the Options tab Ctrl + P Switch to the Players tab Ctrl + D Switch to the Diplomacy tab Ctrl + C Switch to the Cinematics tab Ctrl + V Switch to the Global Victory tab Ctrl + M Switch to the Map tab Ctrl + Space Test Scenario (Currently bugged, causes a crash in the game D:)","title":"Basics of the Scenario Editor"},{"location":"scenarios/#basics-of-the-scenario-editor","text":"Written by: Alian713 Custom Scenarios allow you to define your own, custom game modes. Literally, they are different \"scenarios\" the game can be played in.","title":"Basics of the Scenario Editor"},{"location":"scenarios/#the-scenario-editor","text":"The Scenario Editor is the tool that every map maker uses to make and test scenarios. To open a new scenario in the editor, Click Single Player in the main menu Click Editors Click Create Scenario To open a saved scenario in the editor, Double-click the scenario from the list in the editors menu in step 3 above To open an externally downloaded scenario in the editor, Click Open Scenario Folder in the editors menu in step 3 above Put the downloaded scenario in this folder To see the newly added scenario in the editors menu, go back to the main menu and open the editors menu again. When you load into a new scenario, it is a blank canvas for you to play with! In the editor, there are quite a few tabs that you can see at the top, their functionalities are discussed below:","title":"The Scenario Editor"},{"location":"scenarios/#1-map","text":"Under the Map tab in the editor, there are several options to change the map, they are discussed below:","title":"1. Map"},{"location":"scenarios/#11-map-style","text":"Blank Map : This option generates a map of the same terrain throughout the map. The default map that is generated when a new scenario is loaded is a blank map with grass terrain. Random Map : This option generates a map from an RMS. (RMS stands for Random Map Script, they are scripts that generate regular maps like Arabia) Seed Map : This option generates a map from an RMS using a specified seed. Question What is a seed you ask? Each generation of a particular RMS in the game has a number attached to it called its \"seed\" that uniquely identifies that particular generation of the RMS. Generating a map with the same RMS and seed twice will give you the exact same map!","title":"1.1. Map Style"},{"location":"scenarios/#12-ai-map-type","text":"This option is used by AIs to figure out what kind of a map they are playing on. This is important if you have AIs in your map because you want them to go for water builds when you have water on your map. Lets say that the map is nomad themed, then setting the AI Map Type to Nomad would allow AI players to properly play in a nomad style.","title":"1.2. AI Map Type"},{"location":"scenarios/#13-colour-mood","text":"This setting changes the colour theme (lighting) of the map. By default it is set to Empty which means no colour theme. Colour themes are used for aesthetic reasons only and do not effect gameplay. For exmaple, if you are making a map set in the winter season, then using the winter colour theme could be an option.","title":"1.3. Colour Mood"},{"location":"scenarios/#14-team-positions","text":"This setting is for when you generate maps from an RMS. It determines if players in the same team are placed in order of their colour or if they are randomly distributed throughout the map For example, The teams are currently set to Players 1,3,5,7 vs Players 2,4,6,8 and generating the map with team positions on gives this result: Notice that players 1,3,5,7 who are on the same team have, generated in that particular order (going counter clockwise in the image) and that players 2,4,6,8 have also generated in that order. Generating the map with team positions off on the other hand, gives this result: Notice that now, players 1,3,5,7 who are on the same team, have generated in random positions. Similarly players 2,4,6,8 have generated in no particular order. Also note that even though the positions within the team are random, the players are still grouped on each side of the map by team. To be more precise, this option generates players in each team in order of their player numbers. Players do not have to be in the specific teams used in the above exmaple for this to work.","title":"1.4. Team Positions"},{"location":"scenarios/#15-extend-map","text":"This features is useful for expanding an already existing map if you need to use more space. To use it, Click the checkbox called Extend Map . This brings up two new options, New Map Size and a Map Offset . New Map Size : the size of the new map that will be generated. Map Offset : determines where to place the existing map on the new map. For example, Extending this 4 player map with a New Map Size of 8 players and a Map Offset of North gives the following result: Remember, the top corner of the map is North!","title":"1.5. Extend Map"},{"location":"scenarios/#16-script-filename","text":"This is the place where you need to enter the name of any XS scripts that you are using in your map. XS scripts are covered in the XS Scripts section of this guide","title":"1.6. Script Filename"},{"location":"scenarios/#2-global-victory","text":"Under the Global Victory tab in the editor, there are options that allow you to define custom victory conditions for all players. They are all discussed below:","title":"2. Global Victory"},{"location":"scenarios/#21-standard","text":"A player wins by either defeating all enemies, or capturing 5 relics and holding them for 200 years, or constructing and holding a wonder for 200 years","title":"2.1. Standard"},{"location":"scenarios/#22-conquest","text":"A player can only win by defeating all enemy players","title":"2.2. Conquest"},{"location":"scenarios/#23-score","text":"The first player to reach the specified score wins","title":"2.3. Score"},{"location":"scenarios/#24-time-limit","text":"The game is played until the specified time limit. When the time limit is reached, the player with the highest score wins","title":"2.4. Time Limit"},{"location":"scenarios/#25-custom","text":"This victory condition can be customised using the following options: Conquest this is the same as the victory condition in point 2. above Exploration the first player to reach the specified percentage of the map explored wins the game. (There is a text box infront of this option to specify percentage) Relics the first player to capture the specified quantity of relics wins the game. Unlike Standard Victory, a playar wins as soon as they have gathered the relics and do not need to hold them for 200 years. (There is a text box infront of this option to specify quantity) Any One a player can complete any one of the victory condition enabled above to win All a player has to complete all of the victory conditions enabled above to win","title":"2.5. Custom"},{"location":"scenarios/#3-terrain","text":"Under the Terrain tab in the editor, there are a lot of options to modify the terrain of the map. Each of them are discussed below:","title":"3. Terrain"},{"location":"scenarios/#31-map","text":"This option allows you to manually place down terrain on the map. Brush Size : allows you to pick how large of an area you want to affect on the map at once Layering Mode : allows you to blend and layer another type of terrain on top of the base terrain. Note that the terrain properties like buildings that can be placed on terrain are still determined by the base terrain. This means that you won't be able to build buildings on ice layered with grass but you will be able to build buildings on grass layered with ice Eye Candy : determines if the terrain you place automatically spawns eye candy on top of it. Eye candy are plants and other units that are generated for aesthetic reasons only, hence the name \"eye candy\" No Waves on Shore : disables waves on water throughout the map Water Definitions : this option changes what water looks like throughout the map Different water definitions are shown below: Preset_Main : Preset_FE1 : Preset_FE2 : Preset_WickedWitch : Beach Type : this option changes the type of beach terrain that is placed down when water terrain is placed. Exploring the different beach types has been left as an excersise for the reader.","title":"3.1. Map"},{"location":"scenarios/#32-elevation","text":"This option allows you to change the elevation of existing tiles on the map. Brush Size : allows you to pick how large of an area you want to affect on the map at once Tip In the editor, there are 7 different levels of elevation to chose from, but the elevation can actually have higher or lower values. In the editor, there is no way to make water have elevation either, but it is actually possible to give water elevation as well. Both of these things requires use of external map editing tools and are covered under the AoE2ScenarioParser section of this guide.","title":"3.2. Elevation"},{"location":"scenarios/#33-cliffs","text":"This option allows you to place cliffs on your map. There are two types of cliffs to chose from, Granite and Sandstone. They function exactly the same, and differ only in their appearence. Tip A cliff is actually a gaia object that can be rotated, if you go to the Units tab, and enable the Rotate option, you will be able to click the cliff and rotate it (right click rotates it in the opposite direction). There are a few rotations of the cliff objects that actually do not have graphics for them and hence appear invisible. but since they are still present on the map, just not visible, they block units from going through them. This mechanic can be used to make invisible walls on the map!","title":"3.3. Cliffs"},{"location":"scenarios/#34-map-copy","text":"This option allows you to copy a part of the map and paste it using a brush. There are options to rotate and flip the selected area as well. Bug When a selection that is rectangular is rotated, the highlighted area that shows the brush DOES NOT rotate accordingly to show this rotation, but the game still pastes a rotated as you would expect. There is also another option called Change Player . This option allows you to change the player of the units in the selection to another player when pasting the selection.","title":"3.4. Map Copy"},{"location":"scenarios/#35-erase","text":"This option allows you to selectively remove parts of the map in an area using a brush. The objects that can be selectively removed when using this feature are: Buildings Gaia Objects Invisible Units Layered Terrain Trees Units Abstract The layering mode option in this tab seems to have no effect on the way that elements are erased.","title":"3.5. Erase"},{"location":"scenarios/#4-options","text":"Under the Options tab in the editor, there are options to:","title":"4. Options"},{"location":"scenarios/#41-point-of-view","text":"Set the specified player's starting PoV to your current view in the editor using the set view button. Once the view is set, check that it works by clicking go to view","title":"4.1. Point of View"},{"location":"scenarios/#42-testing-difficulty","text":"Set the Testing Difficulty","title":"4.2. Testing Difficulty"},{"location":"scenarios/#43-full-tech-tree","text":"Enable Full Tech Tree for all players. Warning This option does not disable civ bonuses unlike the full tech tree option in normal games!","title":"4.3. Full Tech Tree"},{"location":"scenarios/#44-disable-objects","text":"Disable Buildings, Units or Techs by moving them from the Full List to the Disabled List by clicking the < arrow. remove an object from the disabled list by clicking > . The << and >> move all items at once Note: Using this option to disable objects is not recommended as there is a better way to do it via triggers which are covered in the Triggers section of this guide.","title":"4.4. Disable Objects"},{"location":"scenarios/#45-collide-correcting","text":"Enabling this option makes stationary units move out the way to let moving units pass through.","title":"4.5. Collide &amp; Correcting"},{"location":"scenarios/#46-villager-force-drop","text":"Makes villagers instantly lose their resources when their tasks are switched instead of losing when they actually start working on the other task. This mimics FE behaviour, i.e. if villagers are switched from hunters to sheep, they don't lose any food.","title":"4.6. Villager Force Drop"},{"location":"scenarios/#47-block-humanity-team-change","text":"Lock Teams ONLY for human players.","title":"4.7. Block Humanity Team Change"},{"location":"scenarios/#5-players","text":"Under the Players tab in the editor, there are several properties that can be changed about the players","title":"5. Players"},{"location":"scenarios/#51-number-of-players","text":"The total number of players you have in your scenario","title":"5.1. Number of Players"},{"location":"scenarios/#52-starting-age","text":"Specify the starting age for the currently selected player","title":"5.2. Starting Age"},{"location":"scenarios/#53-colour","text":"Specify the colour of the currently selected player","title":"5.3. Colour"},{"location":"scenarios/#54-starting-resources","text":"Food , Wood , Stone , Gold determine the starting amount of the currently selected player's resources","title":"5.4. Starting Resources"},{"location":"scenarios/#55-pop-limit","text":"Determine the maximum population limit allowed for the currently selected player. This value is capped at 500","title":"5.5. Pop Limit"},{"location":"scenarios/#56-base-priority","text":"This option seems to have no effect on the game. Question If you are aware of what this does, please reach out to one of the authors of this guide and let them know!","title":"5.6. Base Priority"},{"location":"scenarios/#57-tribe-name","text":"Sets the name for the currently selected player if they are an AI. Does not effect human players","title":"5.7. Tribe Name"},{"location":"scenarios/#58-name-string-id","text":"This field is used for refering to names that the game recognises by default. It can be used to automatically set a Tribe name by using a value that the game recognises. Trying out the value 1 in this field on an AI and seeing what happens is left as an excersise for the reader.","title":"5.8. Name String ID"},{"location":"scenarios/#59-personality","text":"The AI to use for this player if they are not a human player. Pick E3-p2.ai to simulate an afk player","title":"5.9. Personality"},{"location":"scenarios/#510-player-type","text":"This setting doesn't make a difference to gameplay. The only difference between the two options is that setting this to Either wont auto fill lobby slots with AIs. Setting it to AI will automatically set that player up for you in a lobby game","title":"5.10. Player Type"},{"location":"scenarios/#511-civilization","text":"Set the currently selected player's civilization","title":"5.11. Civilization"},{"location":"scenarios/#512-lock-civ","text":"Prevent the currently selected player from changing their civilization in a lobby","title":"5.12. Lock Civ"},{"location":"scenarios/#513-architecture","text":"Change the currently selected player's architecture set to another civilization's.","title":"5.13. Architecture"},{"location":"scenarios/#514-swap-players","text":"Swap the settings for the currently selected player with the specified player.","title":"5.14. Swap Players"},{"location":"scenarios/#6-messages","text":"Under the Messages tab, there are different options for displaying text in the scenario.","title":"6. Messages"},{"location":"scenarios/#61-scenario-instructions","text":"This option lets you set the text that is shown in the Instructions tab of the Objectives Panel . Note The Objective Panel can be opened by clicking the button to the right of the Tech Tree button at the top of the screen.","title":"6.1. Scenario Instructions"},{"location":"scenarios/#62-objectives","text":"This option lets you set the text that is shown in the Objectives tab of the Objectives Panel .","title":"6.2. Objectives"},{"location":"scenarios/#63-hints","text":"This option lets you set the text that is shown in the Hints tab of the Objectives Panel .","title":"6.3. Hints"},{"location":"scenarios/#64-scout","text":"This option lets you set the text that is shown in the Scout tab of the Objectives Panel .","title":"6.4. Scout"},{"location":"scenarios/#65-victory","text":"This option lets you set the text that is shown to players who win the game before the statistics screen.","title":"6.5. Victory"},{"location":"scenarios/#66-defeat","text":"This option lets you set the text that is shown to players who lose the game before the statistics screen.","title":"6.6. Defeat"},{"location":"scenarios/#7-units","text":"Under the Units tab, there are several options to place and manipulate units.","title":"7. Units"},{"location":"scenarios/#71-placing-units","text":"Units can be placed on the map from the 4 menus in this tab: The game categorises all unit objects in the game into 4 categories, Units , Buildings , Heroes , Others . Units allows you to place down units that are most commonly seen in regular games. Buildings allows you to place down most of the different buildings in the game. Heroes allows you to place down the hero units used in campaigns and scenarios. Others these are miscellanious units that do not directly come under any of the above categories. By default, units are placed in a random rotation, however scrolling up/down before placing a unit allows you to fix its rotation to whichever rotation you want. To go back to placing in a random rotation, select another unit in the menu and then re select the unit for placement. While placing these units, changing the player to Gaia will reveal additional hidden units like trees, mines, wolves and other units that only Gaia can own in normal games. There are additional units in the game that cannot be seen in the editor's lists even when using Gaia to place them. There are two ways to use these hidden units: Use a create object trigger with the hidden unit's object ID Use the Advanced Genie Editor (A.G.E.) to unhide hidden units in the editor to allow for manual placement. If you do not know how to do either of those, you can refer to the Effects section of this guide for the first option, and/or refer to the Unhide Editor Units section of this guide","title":"7.1. Placing Units"},{"location":"scenarios/#72-deleting-units","text":"Units that are already placed on the map can be deleted from the map by the following ways: The first and the most obvious option is to use the Delete option in this tab. This allows us to delete units one by one from the map. The first option can be tedious if you need to delete a large amount of units, thus the second option is to use the Erase Units option in the Erase menu under the Terrain tab. Refer to 3.5. Erase about how to use the Erase option.","title":"7.2. Deleting Units"},{"location":"scenarios/#73-moving-units","text":"Units already placed on the map can be moved around on the map by using the Move option in this tab.","title":"7.3. Moving Units"},{"location":"scenarios/#74-rotating-units","text":"Units already placed on the map can be rotated by using the Rotate option in this tab. After the Rotate option is selected, clicking a unit will rotate it clockwise, and right clicking it will rotate it counter clockwise.","title":"7.4. Rotating Units"},{"location":"scenarios/#75-selecting-units","text":"When selecting a unit, its statistics like HP, Attack, Armour and units garrisoned inside it are shown. Units inside other units can be deleted using the garrison delete.","title":"7.5. Selecting Units"},{"location":"scenarios/#76-converting-units","text":"This option allows you to convert existing units from one or more players to another player. When enabled, 9 new options (to the right) appear in the menu for selecting which players' units you want to convert from . The currently selected player (on the left) is the player the units will be converted to . After picking a Brush Size when you click on an area, all of the units belonging to the players being converted from will be converted to the selected player. Remember the players being converted from are selected on the right side using the checkboxes, and the player being converted to is the one selected in the dropdown to the left!","title":"7.6. Converting Units"},{"location":"scenarios/#8-cinematics","text":"Under the Cinematics tab, there are options to change the movie clips displayed before or after a scenario. Bug These are mainly used in the campaigns, and functionality for changing them in scenarios is bugged as of the time of the writing of this guide.","title":"8. Cinematics"},{"location":"scenarios/#9-diplomacy","text":"Under the Diplomacy tab, there are options to change the diplomacy settings of the game:","title":"9. Diplomacy"},{"location":"scenarios/#91-diplomacy-stance","text":"The grid of checkboxes to the right allows you to change each player's stance with all of the other players.","title":"9.1. Diplomacy Stance"},{"location":"scenarios/#92-lock-teams","text":"This option makes it so that teams cannot be changed by players in the game. They can still be changed by triggers.","title":"9.2. Lock Teams"},{"location":"scenarios/#93-players-choose-teams","text":"Disabling this option will not allow players to pick teams in the lobby before the start of the game. The teams will not be locked however, and may still be changed in game unless the Lock Teams option is also enabled.","title":"9.3. Players Choose Teams"},{"location":"scenarios/#94-random-start-points","text":"This option seems to have no effect on the game. Question If you are aware of what this does, please reach out to one of the authors of this guide and let them know!","title":"9.4. Random Start Points"},{"location":"scenarios/#10-triggers","text":"Under the Triggers tab, triggers can be manipulated in a scenario. Triggers are the most powerful component of a scenario as they allow us to do a plethora of different things in a game. They can be used to add more dynamics and game mechanics to a scenario, almost anything that you could think of (within the context of AoE2 and its own limits) is possible to do in some way using triggers. Details about how to use triggers are covered in the Triggers section of this guide.","title":"10. Triggers"},{"location":"scenarios/#11-useful-hotkeys","text":"Some hotkeys that are useful to know and make the workflow of making and testing a scenario faster Scrolling up and down on a dropdown list makes the values go up and down the lists as well Pressing or holding a letter in any object selection menu will cycle through the list of objects If you are on a tab where a player can be selected (except triggers) then pressing numbers 1-8 will switch to that player When testing a scenario, pressing Ctrl + Shift and F# where # is the number of a player, will let you control that player. For example, pressing Ctrl + Shift + F4 will shift your control to player 4 Scrolling when placing objects will rotate them. Some gaia buildings and units have entirely different graphics for different rotations! Pressing Ctrl + G once allows for off grid placement of units. Pressing it again allows for stacking units and off grid placement together. Pressing a 3 rd time allows for on grid unit placement with stacking enabled. Pressing a 4 th time makes it go back to default! Even Buildings can be stacked using this option! Ctrl + Q Quit the scenario editor Ctrl + A Toggle hitboxes on every unit on the map Ctrl + S Save the scenario Ctrl + L Load a scenario Ctrl + N Create a new scenario Tabs F1 - F10 selects a tab in the scenario editor. F1 - Map, F2 - Terrain, and so on Ctrl + W Switch to the Messages tab Ctrl + R Switch to the Triggers tab Ctrl + T Switch to the Terrain tab Ctrl + U Switch to the Units tab Ctrl + O Switch to the Options tab Ctrl + P Switch to the Players tab Ctrl + D Switch to the Diplomacy tab Ctrl + C Switch to the Cinematics tab Ctrl + V Switch to the Global Victory tab Ctrl + M Switch to the Map tab Ctrl + Space Test Scenario (Currently bugged, causes a crash in the game D:)","title":"11. Useful Hotkeys"},{"location":"scenarios/tricks/","text":"","title":"Tricks"},{"location":"scenarios/advanced/byte_structure/","text":"","title":"Byte structure"},{"location":"scenarios/triggers/","text":"Basics of Triggers \u00b6 Written by: Alian713 What are Triggers \u00b6 Usually a regular AoE2 game proceeds without anything about the gameplay changing in the middle of the game. Using triggers allows us to essentially introduce data mods (and much more) into the game, WHILE the game is running! This means that, for example, you could have a scenario where at the 30 minute mark, all players must pay a certain amount of resources or face some consequences. Another example is one where certain actions taken by the player can cause different events. If you have ever played CBA (or sighed at people who play CBA) or played any of the campaigns in the game, all of them are made possible using triggers in a scenario. Another good example of just what triggers can do is this game mode Perk Pandemonium . Triggers introduce dynamics into a game and allow us to make interesting game modes as described above. Learning how to use triggers is simple and every map maker should be familiar with them to be able to make the best use of a scenario! 1. Getting Started: The UI \u00b6 To work with triggers in your scenario, you need to go to the Triggers tab in the editor. Here, you will see two boxes to the left. The box at the top lists all the existing triggers in a scenario. When a trigger is selected, the box at the bottom displays the list of conditions and effects for that trigger. What do the buttons under the boxes do? Under the 1 st box: New : creates a new trigger. Copy : After selecting a trigger, clicking this will create a new trigger that has the exact same settings, conditions and effects as the selected trigger. Delete : delete the selected trigger. This cannot be undone! Info : show settings of the selected trigger Under the 2 nd box: New Effect : creates a new effect under the selected trigger. New Condition : creates a new condition under the selected trigger. Delete : delete the selected condition or effect. This cannot be undone! Copy : copy the selected condition or effect. But wait, what are effects and conditions? Effects and Conditions are the basic elements of triggers that allow us to take certain actions, make decisions and do a lot more cool stuff. They are covered in more detail in the Effects and Conditions sections of the guide For now, simply put, an effect is the action that the trigger has to take and a condition is literally the thing which must be fulfilled before the action is allowed to be taken. 2. Trigger Settings \u00b6 When a trigger is selected, the settings related to it are displayed. The following is a description of all the settings and what they do: Enabled : this property controls if the trigger is active from the beginning of the game. An active trigger is one which can execute its effects immediately if its conditions are fulfilled. If a trigger is not active, then its effects will not be executed even if its conditions are fulfilled. Looping : this property controls if the trigger deactivates itself after running once or if it repeatedly executes its effects when its conditions are fulfilled. Triggers loop once every second Description : this textbox is used for displaying objectives in the Objectives panel of the scenario. See the setting below: Display as objective : When this checkbox is selected, the text in the Description field is shown in the Objectives panel of the scenario. The Objectives panel is the one that is opened when you click the button next to the tech tree at the top of the screen ingame. This panel is visible to ALL players in the game. Description String Table ID : This field is the same as the 5.8. Name String ID Short Description : This textbox is used for displaying objectives on screen ingame. See the setting below: Display on Screen : When this checkbox is selected, the text in the Short Description field is shown to the right side of the screen of ALL players in the game. If it does not show up for you when you enable this, try pressing the F4 key (or the score button) a few times. Make Header : When this checkbox is selected and Display on Screen is also selected, that particular Short Description is displayed with a bigger font size. Mute Objectives : When this checkbox is selected, completing an objective will not trigger a sound. Display Order : The objectives are displayed in descending order of priority. Short Description String Table ID : This field is the same as the 5. Description String Table ID . 3. General Information About Triggers \u00b6 When the conditions inside a trigger which is displayed as an objective are fulfilled, then the objective is marked as completed. A completed objective is strikethrough-ed in the Objectives panel and checked when displayed on screen. Disabling the trigger related to that objective will remove the objective from screen or the Objectives panel completely. A trigger with no conditions will immediately execute its effects on activation. There is a theoretical limit of 4294967295 triggers in a scenario. Roll The Dice in older versions of the game is known to use about 16000 triggers. There is a theoretical limit of 2147483647 effects and 2147483647 conditions inside one trigger. Perk Pandemonium is known to use up to 250 effects inside one trigger. Triggers are executed in the order that they were created in, and not the order of their appearence from top to bottom. The effects inside one trigger are also executed in the order that they were created in, and not the order of their appearence from top to bottom. The conditions inside a trigger are checked according to the order that they were created in as well. For the effects of a trigger to execute, all the conditions of the trigger must be fulfilled except in one case (when an OR condition is used). A trigger will give up on checking the rest of its conditions as soon as a condition that is false is encountered except in one case (when an OR condition is used). These rules are discussed in greater detail in the Conditions section of the guide.","title":"Basics of Triggers"},{"location":"scenarios/triggers/#basics-of-triggers","text":"Written by: Alian713","title":"Basics of Triggers"},{"location":"scenarios/triggers/#what-are-triggers","text":"Usually a regular AoE2 game proceeds without anything about the gameplay changing in the middle of the game. Using triggers allows us to essentially introduce data mods (and much more) into the game, WHILE the game is running! This means that, for example, you could have a scenario where at the 30 minute mark, all players must pay a certain amount of resources or face some consequences. Another example is one where certain actions taken by the player can cause different events. If you have ever played CBA (or sighed at people who play CBA) or played any of the campaigns in the game, all of them are made possible using triggers in a scenario. Another good example of just what triggers can do is this game mode Perk Pandemonium . Triggers introduce dynamics into a game and allow us to make interesting game modes as described above. Learning how to use triggers is simple and every map maker should be familiar with them to be able to make the best use of a scenario!","title":"What are Triggers"},{"location":"scenarios/triggers/#1-getting-started-the-ui","text":"To work with triggers in your scenario, you need to go to the Triggers tab in the editor. Here, you will see two boxes to the left. The box at the top lists all the existing triggers in a scenario. When a trigger is selected, the box at the bottom displays the list of conditions and effects for that trigger. What do the buttons under the boxes do? Under the 1 st box: New : creates a new trigger. Copy : After selecting a trigger, clicking this will create a new trigger that has the exact same settings, conditions and effects as the selected trigger. Delete : delete the selected trigger. This cannot be undone! Info : show settings of the selected trigger Under the 2 nd box: New Effect : creates a new effect under the selected trigger. New Condition : creates a new condition under the selected trigger. Delete : delete the selected condition or effect. This cannot be undone! Copy : copy the selected condition or effect. But wait, what are effects and conditions? Effects and Conditions are the basic elements of triggers that allow us to take certain actions, make decisions and do a lot more cool stuff. They are covered in more detail in the Effects and Conditions sections of the guide For now, simply put, an effect is the action that the trigger has to take and a condition is literally the thing which must be fulfilled before the action is allowed to be taken.","title":"1. Getting Started: The UI"},{"location":"scenarios/triggers/#2-trigger-settings","text":"When a trigger is selected, the settings related to it are displayed. The following is a description of all the settings and what they do: Enabled : this property controls if the trigger is active from the beginning of the game. An active trigger is one which can execute its effects immediately if its conditions are fulfilled. If a trigger is not active, then its effects will not be executed even if its conditions are fulfilled. Looping : this property controls if the trigger deactivates itself after running once or if it repeatedly executes its effects when its conditions are fulfilled. Triggers loop once every second Description : this textbox is used for displaying objectives in the Objectives panel of the scenario. See the setting below: Display as objective : When this checkbox is selected, the text in the Description field is shown in the Objectives panel of the scenario. The Objectives panel is the one that is opened when you click the button next to the tech tree at the top of the screen ingame. This panel is visible to ALL players in the game. Description String Table ID : This field is the same as the 5.8. Name String ID Short Description : This textbox is used for displaying objectives on screen ingame. See the setting below: Display on Screen : When this checkbox is selected, the text in the Short Description field is shown to the right side of the screen of ALL players in the game. If it does not show up for you when you enable this, try pressing the F4 key (or the score button) a few times. Make Header : When this checkbox is selected and Display on Screen is also selected, that particular Short Description is displayed with a bigger font size. Mute Objectives : When this checkbox is selected, completing an objective will not trigger a sound. Display Order : The objectives are displayed in descending order of priority. Short Description String Table ID : This field is the same as the 5. Description String Table ID .","title":"2. Trigger Settings"},{"location":"scenarios/triggers/#3-general-information-about-triggers","text":"When the conditions inside a trigger which is displayed as an objective are fulfilled, then the objective is marked as completed. A completed objective is strikethrough-ed in the Objectives panel and checked when displayed on screen. Disabling the trigger related to that objective will remove the objective from screen or the Objectives panel completely. A trigger with no conditions will immediately execute its effects on activation. There is a theoretical limit of 4294967295 triggers in a scenario. Roll The Dice in older versions of the game is known to use about 16000 triggers. There is a theoretical limit of 2147483647 effects and 2147483647 conditions inside one trigger. Perk Pandemonium is known to use up to 250 effects inside one trigger. Triggers are executed in the order that they were created in, and not the order of their appearence from top to bottom. The effects inside one trigger are also executed in the order that they were created in, and not the order of their appearence from top to bottom. The conditions inside a trigger are checked according to the order that they were created in as well. For the effects of a trigger to execute, all the conditions of the trigger must be fulfilled except in one case (when an OR condition is used). A trigger will give up on checking the rest of its conditions as soon as a condition that is false is encountered except in one case (when an OR condition is used). These rules are discussed in greater detail in the Conditions section of the guide.","title":"3. General Information About Triggers"},{"location":"scenarios/triggers/variables/","text":"","title":"Variables"},{"location":"scenarios/triggers/conditions/conditions/","text":"","title":"Conditions"},{"location":"scenarios/triggers/effects/effects/","text":"Written by: Alian713 1. What are effects? \u00b6 Effects are one of the two basic elements of triggers (the other one being Conditions). They are essentially \"cheats\" in some sense, that allow you to change information about the game as the game is being played. All technologies in the game utilise effects to do what they are meant to do. Usually, a technology almost always uses multiple effects in combination to achieve its purposes. Examples of technologies and the effects they use will be given when the appropriate effects for them are encountered. Some examples of basic effects that can be used in the scenario editor are: Create Unit , Send Chat , Display Instructions etc.. To use effects, Create a trigger Add an effect to it. Pick the effect you wish to use from the effects list. Configure the settings of the effect as desired Lets look at all the effects and their configurations one by one: 2. Common Terminology \u00b6 Feel free to skip these if you are already familiar with them 2.1. Bug \u00b6 Anything in the map that is not working as intended is a bug. Historically, the term \"bug\" comes from physical bugs getting stuck in computers and causing them to malfunction back in the day when computers used to be the size of entire rooms. In today's context, a bug in anything just means that its malfunctioning and not working as intended. 2.2. Debugging \u00b6 Attempting to find out the cause of the malfunction, and removing/fixing that cause is known as debugging. 2.3. Execution \u00b6 Executing a trigger means that we carry out its effects. 3. Effects and How to Use Them \u00b6 3.1. AI Script Goal \u00b6 This effect is used to communicate with the AI. An AI Trigger NUMBER set with this effect can be detected in an AI script using event-detected trigger NUMBER . The configurations for this effect are as follows: AI Script Goal: AI Trigger ID to set 3.2. Acknowledge AI Signal \u00b6 When set-signal is used in an AI file, this effect is used to unset it so it can be reused. This only works in Single Player games. Refer to the Acknowledge Multiplayer AI Signal effect for the multiplayer version of this effect. The configurations for this effect are as follows: AI Signal Value: The AI Signal ID to acknowledge 3.3. Acknowledge Multiplayer AI Signal \u00b6 When set-signal is used in an AI file, this effect is used to unset it so it can be reused. This only works in Multiplayer games. Refer to the Acknowledge AI Signal effect for the single player version of this effect.. The configurations for this effect are as follows: AI Signal Value: The AI Signal ID to acknowledge 3.4. Activate Trigger \u00b6 This effect can be used to activate a trigger. The configurations for this effect are as follows: Trigger List: The trigger to activate/deactivate 3.5. Attack Move \u00b6 This effect can be used to command units of a given player to attack move to a location. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect 3.6. Change Civilization Name \u00b6 This effect can be used to change the name of the civilization of a player to any desired name. The configurations for this effect are as follows: Source Player: The player that is affected by the effect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Message: The name/message/instruction to show on screen or the script call to execute 3.7. Change Color Mood \u00b6 This effect can change the colour mood of the map. The configurations for this effect are as follows: Color Mood: This is the new colour mood to set Quantity: The amount to modify by or a timer 3.8. Change Diplomacy \u00b6 This effect can be used to change the diplomacy stance of the soruce players with the target player. The configurations for this effect are as follows: Diplomacy Stance: The new diplomacy state Source Player: The player that is affected by the effect Target Player: This is the second player that is affected by the effect 3.9. Change Object Armor \u00b6 This effect can be used to change the armour of existing units of a given player to the specified value. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Quantity: The amount to modify by Armour or Attack Class: The Armour/Attack Class to Modify Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Operation: Add, Subtract, Multiply or Divide the given quantity Some useful tricks with this effect: The quantity field on this effect has a maximum limit of 255, use multiple of these effects/addition or multiplication operations to get a higher value 3.10. Change Object Attack \u00b6 This effect can be used to change the attack of existing units of a given player to the specified value. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Quantity: The amount to modify by Armour or Attack Class: The Armour/Attack Class to Modify Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Operation: Add, Subtract, Multiply or Divide the given quantity Some useful tricks with this effect: The quantity field on this effect has a maximum limit of 255, use multiple of these effects/addition or multiplication operations to get a higher value 3.11. Change Object Civilization Name \u00b6 This effect can be used to change the civilization name of specified objects of a given player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. 3.12. Change Object Cost \u00b6 This effect can be used to change the cost of a specifed unit for a particular player. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Food: The new food cost of the unit/technology Wood: The new wood cost of the unit/technology Stone: The new stone cost of the unit/technology Gold: The new Gold cost of the unit/technology Some useful tricks with this effect: Due to a current bug in the game, to properly set costs, you need to first set all the different wood, food, stone and gold costs of the tech to -1. Now using a 2 nd effect you can set them to anything you like. Units in the game can only have a maximum of 2 different resource of costs. 3.13. Change Object Description \u00b6 This effect can be used to change the description of a specifed unit for a particular player. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Message: The name/message/instruction to show on screen or the script call to execute Some useful tricks with this effect: There are special keywords that are used to display certain information about an object in its description This is illustrated with the following example: 1 2 3 4 Build Trade Workshop (<Cost>) Allows you to buy special perks <hp> <attack> <armor> <piercearmor> <garrison> LoS: 4 Here, all the words in the angle brackets are replaced by those relevant statistics for the unit. 3.14. Change Object HP \u00b6 This effect can be used to change the max HP of existing units of a given player to the specified value. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Operation: Add, Subtract, Multiply or Divide the given quantity Some useful tricks with this effect: Unit Max HP is capped at 32768. If you try to set it to a value above 32768, the unit will die because of an overflow. 3.15. Change Object Icon \u00b6 This effect can be used to change the icon of existing units of a given player to the 2 nd unit's icon. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Unit List 2: This is the second unit to affect 3.16. Change Object Name \u00b6 This effect can be used to change the names of existing units of a given player to the specified name. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Message: The name/message/instruction to show on screen or the script call to execute Some useful tricks with this effect: This effect is mostly used to make markers, signs and waypoints which the player can select and read using units on the map 3.17. Change Object Player Color \u00b6 This effect can be used to change the colour of specified objects of a given player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Player Color: The new colour of the unit 3.18. Change Object Player Name \u00b6 This effect can be used to change the player name of specified objects of a given player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. 3.19. Change Object Range \u00b6 This effect can be used to change the range of existing units of a given player to the specified value. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Operation: Add, Subtract, Multiply or Divide the given quantity 3.20. Change Object Speed \u00b6 This effect can be used to change the speed of existing units of a given player to the specified value. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect 3.21. Change Object Stance \u00b6 This effect can be used to change the stance of units of a given player to the given stance. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Attack Stance: Set the new stance of the unit, aggressive, defensive, stand ground or no attack 3.22. Change Ownership \u00b6 This effect can be used to convert units of the source player to the target player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Target Player: This is the second player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Flash Object: When this is enabled if the source and target players are the same, the selected object(s) will be flashed Some useful tricks with this effect: This effect can be used to make unconvertable gaia units. If a unit is originally owned by a different player, but is then converted to gaia using this effect, then that unit can no longer be converted by other players 3.23. Change Player Name \u00b6 This effect can be used to change the name of a player to any desired name. The configurations for this effect are as follows: Source Player: The player that is affected by the effect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Message: The name/message/instruction to show on screen or the script call to execute 3.24. Change Research Location \u00b6 This effect can be used to change the research location of a specifed technology for a particular player to another unit. The research location of Loom is the Town Centre. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect Unit List 2: This is the second unit to affect Button Location: The location of the button for a unit or technology. This number is given by \\((row-1)\\times5+column\\) . For example, the button location for the man at arms research in the barracks, which is in the 2 nd row and 1 st column, is given by \\((2-1)\\times5+1 = 6\\) 3.25. Change Technology Cost \u00b6 This effect can be used to change a technology's cost for a particular player. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect Food: The new food cost of the unit/technology Wood: The new wood cost of the unit/technology Stone: The new stone cost of the unit/technology Gold: The new Gold cost of the unit/technology Some useful tricks with this effect: Due to a current bug in the game, this effect changes the cost of the tech for all players Due to a current bug in the game, to properly set costs, you need to first set all the different wood, food, stone and gold costs of the tech to -1. Now using a 2 nd effect you can set them to anything you like. Techs in the game can only have a maximum of 3 different resource of costs. 3.26. Change Technology Description \u00b6 This effect can be used to change a technology's Description for a particular player. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Message: The name/message/instruction to show on screen or the script call to execute 3.27. Change Technology Name \u00b6 This effect can be used to change a technology's name for a particular player. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Message: The name/message/instruction to show on screen or the script call to execute 3.28. Change Technology Research Time \u00b6 This effect can be used to change a technology's research time for a particular player. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Source Player: The player that is affected by the effect Technology: The technology to affect 3.29. Change Train Location \u00b6 This effect can be used to change the train location of a specifed unit for a particular player to another unit. The train location of Archers is Archery Range. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Unit List 2: This is the second unit to affect Button Location: The location of the button for a unit or technology. This number is given by \\((row-1)\\times5+column\\) . For example, the button location for the man at arms research in the barracks, which is in the 2 nd row and 1 st column, is given by \\((2-1)\\times5+1 = 6\\) 3.30. Change Variable \u00b6 This effect can be used to change the value of a variable.. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Operation: Add, Subtract, Multiply or Divide the given quantity Variable: The variable to modify Message: The name/message/instruction to show on screen or the script call to execute 3.31. Change View \u00b6 This effect can be used to move the camera of the player to a specified location. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Scroll: If this is enabled, changing the camera to a new position shows a scrolling animation from the position the player was previously on. If not enabled, the camera cuts to the new position wihout any animations. Some useful tricks with this effect: This effect can be used to bring attention of the player to a certain part of the map 3.32. Clear Instructions \u00b6 This effect can be used to clear instructions on the screen before the timer for that instruction is up.. The configurations for this effect are as follows: Panel Position: Position 0 displays the instruction at the top, Position 1 displays the instruction in the middle of the top half of the screen and Position 2 displays the instruction at the bottom of the top half of the screen Some useful tricks with this effect: This effect is not used very often, since mostly you want your display instruction effects to display an instruction for the full length of time you specify 3.33. Clear Timer \u00b6 This effect can be used to remove a displayed timer from the screen. The configurations for this effect are as follows: Timer: The time to display the message for 3.34. Create Garrisoned Object \u00b6 This effect creates the unit chosen in the 2 nd list inside the selected object or the unit chosen in the 1 st list. The unit that the created unit is garrisoned inside does not need to be of the same player.. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Unit List 2: This is the second unit to affect Some useful tricks with this effect: The object you are creating garrisoned objects inside must have at least 1 garrison capacity and it must have the garrison ability 3.35. Create Object \u00b6 This effect can be used to create a unit or building for the specified player. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Facet: The rotation of the created unit 3.36. Damage Object \u00b6 This effect can be used to deal damage to units of a given player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Some useful tricks with this effect: Dealing negative damage to an object will actually increase their HP beyond their max HP. Using this, a unit's HP can go over 32768. This is used in Tower Defence maps like ATD where units have over a million HP, since directly setting an object's HP to over 32768 using the change object HP effect would kill the object. 3.37. Deactivate Trigger \u00b6 This effect can be used to activate a trigger. The configurations for this effect are as follows: Trigger List: The trigger to activate/deactivate 3.38. Declare Victory \u00b6 This effect can be used to grant victory or defeat to a specifed player. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Victory: If this is selected, the chosen player will win the game. If it is not selected, then the chosen player is defeated 3.39. Disable Object Selection \u00b6 This effect makes specified units of the given player unselectable. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. 3.40. Disable Technology Stacking \u00b6 This effect disables 256x tech mode for the specified technology and player. Refer to the Enable Technology Stacking effect. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect 3.41. Disable Unit Targeting \u00b6 This effect makes it so that the specified units of the given player cannot be targeted (basically, you can't perform any right click actions from another unit on these units anymore) by other units. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. 3.42. Display Instructions \u00b6 This effect can be used to display instructions on the screen. An icon of a unit may also be displayed along with the instructions. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Display Time: The amount of time to display the instruction for Panel Position: Position 0 displays the instruction at the top, Position 1 displays the instruction in the middle of the top half of the screen and Position 2 displays the instruction at the bottom of the top half of the screen Play Sound: The sound to play Message: The name/message/instruction to show on screen or the script call to execute Sound Name: The name of the sound to play Some useful tricks with this effect: This effect is useful for making dialogue sequences When you do multiple display instruction effects on the same panel position at the same time, only the last instruction is shown. One panel position can only show one instruction at a time Adding a colour prefix to a messages will colour the message in chat. The message must begin with the colour prefix for it to work, and the colour prefix is not shown in the real message shown in chat. The following colour prefixes may be used: <BLUE> <RED> <GREEN> <YELLOW> <AQUA> <PURPLE> <GREY> <ORANGE> 3.43. Display Timer \u00b6 This effect can be used to display a timer on screen. The configurations for this effect are as follows: String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Display Time: The amount of time to display the instruction for Time Unit: This specifies the unit of time used in the timer trigger. This can be seconds, minutes or years Timer: The time to display the message for Message: The name/message/instruction to show on screen or the script call to execute Some useful tricks with this effect: Adding a colour prefix to a messages will colour the message in chat. The message must begin with the colour prefix for it to work, and the colour prefix is not shown in the real message shown in chat. The following colour prefixes may be used: <BLUE> <RED> <GREEN> <YELLOW> <AQUA> <PURPLE> <GREY> <ORANGE> 3.44. Enable Disable Object \u00b6 This effect can be used to enable/disable any unit for a specific player. Note that sometimes, simply enabling a unit wont allow you to train them, because if it is not a default unit, the game doesn't know which building to train the unit in. Thus, A train location and a train button ( Change Train Location ), a cost ( Change Object Cost ), and optionally a discription ( Change Object Description ), of the unit are needed to also be set using additional effects to allow training the enabled unit.. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Enabled: If this is selected, the units/technology is enabled if it is not already enabled 3.45. Enable Disable Technology \u00b6 This effect can be used to enable/disable any technology for a specific player. Similar to units, when a non default technology is enabled, its train location and button ( Change Research Location ), costs ( Change Technology Cost ), and optionally a description ( Change Technology Description ), must be set using additional effects for someone to research it.. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect Enabled: If this is selected, the units/technology is enabled if it is not already enabled 3.46. Enable Object Selection \u00b6 This effect makes specified units of the given player selectable. Refer to the Disable Object Selection effect. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. 3.47. Enable Technology Stacking \u00b6 This effect enables 256x tech mode for the specified technology and player. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect 3.48. Enable Unit Targeting \u00b6 This effect makes it so that the specified units of the given player can be targeted by other units. Refer to the Disable Unit Targeting effect. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. 3.49. Freeze Object \u00b6 This effect can be used to stop units of a specific player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect 3.50. Heal Object \u00b6 This effect can be used to heal existing units of a given player by the specifed HP amount. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Some useful tricks with this effect: This effect should not be used to simulate regeneration of HP of a unit similar to heroes, because there is another effect ( Modify Attribute , change attribute regeneration rate to the desired quantity), that does exactly this 3.51. Kill Object \u00b6 This effect can be used to kill certain units of the specified player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect 3.52. Lock Gate \u00b6 This effect can be used to lock an unlocked gate. The configurations for this effect are as follows: Selected Objects: The units to apply the effect to 3.53. Modify Attribute \u00b6 This effect can be used to modify any attribute of a specified unit. Note that this effects the unit itself, not just existing units. This means that even new units created will have the modified attribute. Refer to the Attributes section of the guide to see a list of modifiable attributes and what each of them does. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Operation: Add, Subtract, Multiply or Divide the given quantity Attribute List: The attribute of a unit to modify Some useful tricks with this effect: Changing the Amount of 1 st Resource of a unit changes its population requirement Since the quantity field cannot take in fractional values, to modify an attribute by a fractional amount, use the division operation to your advantage. for example setting a value to 0.1 is the same as first setting it to 1 and then dividing by 10. Similarly, adding a value of 0.5 is the same as first multiplying the initial value by 10, adding 5 and then dividing by 10. 3.54. Modify Resource \u00b6 This effect can be used to modify the resource amounts of a particular player by specified amounts. Refer to the Resources section of the guide to see all the resources that can be modified and their purposes. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Tribute List: The resource to tribute Source Player: The player that is affected by the effect Operation: Add, Subtract, Multiply or Divide the given quantity 3.55. Modify Resource By Variable \u00b6 This effect can be used to modify the resource amounts of a particular player by the value of another variable. Refer to the Resources section of the guide to see all the resources that can be modified and their purposes. The configurations for this effect are as follows: Tribute List: The resource to tribute Source Player: The player that is affected by the effect Operation: Add, Subtract, Multiply or Divide the given quantity Variable: The variable to modify 3.56. Patrol \u00b6 This effect can be used to make units of a specified player patrol from one location to another. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect 3.57. Place Foundation \u00b6 This effect can be used to automatically place down a building foundation for a specific player. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to 3.58. Play Sound \u00b6 This effect can be used to play a specified sound. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Sound Name: The name of the sound to play Some useful tricks with this effect: This effect is useful for playing a notification sound 3.59. Remove Object \u00b6 This effect can be used to remove certain units of the specified player from the map. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect 3.60. Replace Object \u00b6 This effect can be used to replace existing units of a given player with another unit. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Target Player: This is the second player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Unit List 2: This is the second unit to affect Some useful tricks with this effect: This effect is widely used by unit upgrade technologies. Researching Man at Arms replaces all Militia with Man at Arms on the map Researching Crossbowman replaces all Archers with Crossbowmen on the map 3.61. Research Technology \u00b6 This effect can automatically research a technology for the specified player.. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect Force: If this is enabled, then the technology is researched even if the player's civilization does not have access to it 3.62. Script Call \u00b6 This effect allows us to write or call functions from an XS Script. While the script call effect can be used to both call functions and write small scripts, it is advised to always use a function call and never use this effect for writing scripts. Refer to the XS Scripting . The configurations for this effect are as follows: String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Message: The name/message/instruction to show on screen or the script call to execute 3.63. Send Chat \u00b6 This effect can be used to display messages in chat. The configurations for this effect are as follows: Source Player: The player that is affected by the effect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Message: The name/message/instruction to show on screen or the script call to execute Sound Name: The name of the sound to play Some useful tricks with this effect: This effect is super useful for debugging. When you're unsure of which triggers in your map are executed at which point, adding one of these to that trigger will display a message on screen when it gets executed This effect can also be used to simulate chat between two players This effect should NOT be used to display instructions to players, because there is an effect that can be used specifically for that Duplicate messages are not shown Adding a colour prefix to a messages will colour the message in chat. The message must begin with the colour prefix for it to work, and the colour prefix is not shown in the real message shown in chat. The following colour prefixes may be used: <BLUE> <RED> <GREEN> <YELLOW> <AQUA> <PURPLE> <GREY> <ORANGE> 3.64. Set Building Gather Point \u00b6 This effect can be used to set a gather point for specified buildings of a given player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. 3.65. Set Player Visibility \u00b6 This trigger sets the visibility of the target player for the source player. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Target Player: This is the second player that is affected by the effect Visibility State: The new visibility state 3.66. Stop Object \u00b6 This effect can be used to stop units of a given player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect 3.67. Task Object \u00b6 This effect can be used to task certain units of the specified player to (it basically simulates a right click at the specified location or unit) move to a specified locaiton, or perform an action on another unit. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect 3.68. Teleport Object \u00b6 This effect can be used to teleport units of a player from one area of the map to another location on the map. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect 3.69. Tribute \u00b6 This effect can be used to tribute resources from one player to another. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Tribute List: The resource to tribute Source Player: The player that is affected by the effect Target Player: This is the second player that is affected by the effect Some useful tricks with this effect: Tributing negative resources actually gives the source player the resource and deducts that amount from the target player Tributing negative resources from a player to gaia is a way to make silent resource trickles that do not make the tribute sound. 3.70. Unload \u00b6 This effect can be used to ungarisson objects from a unit or building. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect 3.71. Unlock Gate \u00b6 This effect can be used to unlock a locked gate. The configurations for this effect are as follows: Selected Objects: The units to apply the effect to 3.72. Use Advanced Buttons \u00b6","title":"Effects"},{"location":"scenarios/triggers/effects/effects/#1-what-are-effects","text":"Effects are one of the two basic elements of triggers (the other one being Conditions). They are essentially \"cheats\" in some sense, that allow you to change information about the game as the game is being played. All technologies in the game utilise effects to do what they are meant to do. Usually, a technology almost always uses multiple effects in combination to achieve its purposes. Examples of technologies and the effects they use will be given when the appropriate effects for them are encountered. Some examples of basic effects that can be used in the scenario editor are: Create Unit , Send Chat , Display Instructions etc.. To use effects, Create a trigger Add an effect to it. Pick the effect you wish to use from the effects list. Configure the settings of the effect as desired Lets look at all the effects and their configurations one by one:","title":"1. What are effects?"},{"location":"scenarios/triggers/effects/effects/#2-common-terminology","text":"Feel free to skip these if you are already familiar with them","title":"2. Common Terminology"},{"location":"scenarios/triggers/effects/effects/#21-bug","text":"Anything in the map that is not working as intended is a bug. Historically, the term \"bug\" comes from physical bugs getting stuck in computers and causing them to malfunction back in the day when computers used to be the size of entire rooms. In today's context, a bug in anything just means that its malfunctioning and not working as intended.","title":"2.1. Bug"},{"location":"scenarios/triggers/effects/effects/#22-debugging","text":"Attempting to find out the cause of the malfunction, and removing/fixing that cause is known as debugging.","title":"2.2. Debugging"},{"location":"scenarios/triggers/effects/effects/#23-execution","text":"Executing a trigger means that we carry out its effects.","title":"2.3. Execution"},{"location":"scenarios/triggers/effects/effects/#3-effects-and-how-to-use-them","text":"","title":"3. Effects and How to Use Them"},{"location":"scenarios/triggers/effects/effects/#31-ai-script-goal","text":"This effect is used to communicate with the AI. An AI Trigger NUMBER set with this effect can be detected in an AI script using event-detected trigger NUMBER . The configurations for this effect are as follows: AI Script Goal: AI Trigger ID to set","title":"3.1. AI Script Goal"},{"location":"scenarios/triggers/effects/effects/#32-acknowledge-ai-signal","text":"When set-signal is used in an AI file, this effect is used to unset it so it can be reused. This only works in Single Player games. Refer to the Acknowledge Multiplayer AI Signal effect for the multiplayer version of this effect. The configurations for this effect are as follows: AI Signal Value: The AI Signal ID to acknowledge","title":"3.2. Acknowledge AI Signal"},{"location":"scenarios/triggers/effects/effects/#33-acknowledge-multiplayer-ai-signal","text":"When set-signal is used in an AI file, this effect is used to unset it so it can be reused. This only works in Multiplayer games. Refer to the Acknowledge AI Signal effect for the single player version of this effect.. The configurations for this effect are as follows: AI Signal Value: The AI Signal ID to acknowledge","title":"3.3. Acknowledge Multiplayer AI Signal"},{"location":"scenarios/triggers/effects/effects/#34-activate-trigger","text":"This effect can be used to activate a trigger. The configurations for this effect are as follows: Trigger List: The trigger to activate/deactivate","title":"3.4. Activate Trigger"},{"location":"scenarios/triggers/effects/effects/#35-attack-move","text":"This effect can be used to command units of a given player to attack move to a location. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect","title":"3.5. Attack Move"},{"location":"scenarios/triggers/effects/effects/#36-change-civilization-name","text":"This effect can be used to change the name of the civilization of a player to any desired name. The configurations for this effect are as follows: Source Player: The player that is affected by the effect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Message: The name/message/instruction to show on screen or the script call to execute","title":"3.6. Change Civilization Name"},{"location":"scenarios/triggers/effects/effects/#37-change-color-mood","text":"This effect can change the colour mood of the map. The configurations for this effect are as follows: Color Mood: This is the new colour mood to set Quantity: The amount to modify by or a timer","title":"3.7. Change Color Mood"},{"location":"scenarios/triggers/effects/effects/#38-change-diplomacy","text":"This effect can be used to change the diplomacy stance of the soruce players with the target player. The configurations for this effect are as follows: Diplomacy Stance: The new diplomacy state Source Player: The player that is affected by the effect Target Player: This is the second player that is affected by the effect","title":"3.8. Change Diplomacy"},{"location":"scenarios/triggers/effects/effects/#39-change-object-armor","text":"This effect can be used to change the armour of existing units of a given player to the specified value. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Quantity: The amount to modify by Armour or Attack Class: The Armour/Attack Class to Modify Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Operation: Add, Subtract, Multiply or Divide the given quantity Some useful tricks with this effect: The quantity field on this effect has a maximum limit of 255, use multiple of these effects/addition or multiplication operations to get a higher value","title":"3.9. Change Object Armor"},{"location":"scenarios/triggers/effects/effects/#310-change-object-attack","text":"This effect can be used to change the attack of existing units of a given player to the specified value. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Quantity: The amount to modify by Armour or Attack Class: The Armour/Attack Class to Modify Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Operation: Add, Subtract, Multiply or Divide the given quantity Some useful tricks with this effect: The quantity field on this effect has a maximum limit of 255, use multiple of these effects/addition or multiplication operations to get a higher value","title":"3.10. Change Object Attack"},{"location":"scenarios/triggers/effects/effects/#311-change-object-civilization-name","text":"This effect can be used to change the civilization name of specified objects of a given player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected.","title":"3.11. Change Object Civilization Name"},{"location":"scenarios/triggers/effects/effects/#312-change-object-cost","text":"This effect can be used to change the cost of a specifed unit for a particular player. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Food: The new food cost of the unit/technology Wood: The new wood cost of the unit/technology Stone: The new stone cost of the unit/technology Gold: The new Gold cost of the unit/technology Some useful tricks with this effect: Due to a current bug in the game, to properly set costs, you need to first set all the different wood, food, stone and gold costs of the tech to -1. Now using a 2 nd effect you can set them to anything you like. Units in the game can only have a maximum of 2 different resource of costs.","title":"3.12. Change Object Cost"},{"location":"scenarios/triggers/effects/effects/#313-change-object-description","text":"This effect can be used to change the description of a specifed unit for a particular player. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Message: The name/message/instruction to show on screen or the script call to execute Some useful tricks with this effect: There are special keywords that are used to display certain information about an object in its description This is illustrated with the following example: 1 2 3 4 Build Trade Workshop (<Cost>) Allows you to buy special perks <hp> <attack> <armor> <piercearmor> <garrison> LoS: 4 Here, all the words in the angle brackets are replaced by those relevant statistics for the unit.","title":"3.13. Change Object Description"},{"location":"scenarios/triggers/effects/effects/#314-change-object-hp","text":"This effect can be used to change the max HP of existing units of a given player to the specified value. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Operation: Add, Subtract, Multiply or Divide the given quantity Some useful tricks with this effect: Unit Max HP is capped at 32768. If you try to set it to a value above 32768, the unit will die because of an overflow.","title":"3.14. Change Object HP"},{"location":"scenarios/triggers/effects/effects/#315-change-object-icon","text":"This effect can be used to change the icon of existing units of a given player to the 2 nd unit's icon. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Unit List 2: This is the second unit to affect","title":"3.15. Change Object Icon"},{"location":"scenarios/triggers/effects/effects/#316-change-object-name","text":"This effect can be used to change the names of existing units of a given player to the specified name. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Message: The name/message/instruction to show on screen or the script call to execute Some useful tricks with this effect: This effect is mostly used to make markers, signs and waypoints which the player can select and read using units on the map","title":"3.16. Change Object Name"},{"location":"scenarios/triggers/effects/effects/#317-change-object-player-color","text":"This effect can be used to change the colour of specified objects of a given player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Player Color: The new colour of the unit","title":"3.17. Change Object Player Color"},{"location":"scenarios/triggers/effects/effects/#318-change-object-player-name","text":"This effect can be used to change the player name of specified objects of a given player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected.","title":"3.18. Change Object Player Name"},{"location":"scenarios/triggers/effects/effects/#319-change-object-range","text":"This effect can be used to change the range of existing units of a given player to the specified value. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Operation: Add, Subtract, Multiply or Divide the given quantity","title":"3.19. Change Object Range"},{"location":"scenarios/triggers/effects/effects/#320-change-object-speed","text":"This effect can be used to change the speed of existing units of a given player to the specified value. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect","title":"3.20. Change Object Speed"},{"location":"scenarios/triggers/effects/effects/#321-change-object-stance","text":"This effect can be used to change the stance of units of a given player to the given stance. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Attack Stance: Set the new stance of the unit, aggressive, defensive, stand ground or no attack","title":"3.21. Change Object Stance"},{"location":"scenarios/triggers/effects/effects/#322-change-ownership","text":"This effect can be used to convert units of the source player to the target player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Target Player: This is the second player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Flash Object: When this is enabled if the source and target players are the same, the selected object(s) will be flashed Some useful tricks with this effect: This effect can be used to make unconvertable gaia units. If a unit is originally owned by a different player, but is then converted to gaia using this effect, then that unit can no longer be converted by other players","title":"3.22. Change Ownership"},{"location":"scenarios/triggers/effects/effects/#323-change-player-name","text":"This effect can be used to change the name of a player to any desired name. The configurations for this effect are as follows: Source Player: The player that is affected by the effect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Message: The name/message/instruction to show on screen or the script call to execute","title":"3.23. Change Player Name"},{"location":"scenarios/triggers/effects/effects/#324-change-research-location","text":"This effect can be used to change the research location of a specifed technology for a particular player to another unit. The research location of Loom is the Town Centre. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect Unit List 2: This is the second unit to affect Button Location: The location of the button for a unit or technology. This number is given by \\((row-1)\\times5+column\\) . For example, the button location for the man at arms research in the barracks, which is in the 2 nd row and 1 st column, is given by \\((2-1)\\times5+1 = 6\\)","title":"3.24. Change Research Location"},{"location":"scenarios/triggers/effects/effects/#325-change-technology-cost","text":"This effect can be used to change a technology's cost for a particular player. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect Food: The new food cost of the unit/technology Wood: The new wood cost of the unit/technology Stone: The new stone cost of the unit/technology Gold: The new Gold cost of the unit/technology Some useful tricks with this effect: Due to a current bug in the game, this effect changes the cost of the tech for all players Due to a current bug in the game, to properly set costs, you need to first set all the different wood, food, stone and gold costs of the tech to -1. Now using a 2 nd effect you can set them to anything you like. Techs in the game can only have a maximum of 3 different resource of costs.","title":"3.25. Change Technology Cost"},{"location":"scenarios/triggers/effects/effects/#326-change-technology-description","text":"This effect can be used to change a technology's Description for a particular player. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Message: The name/message/instruction to show on screen or the script call to execute","title":"3.26. Change Technology Description"},{"location":"scenarios/triggers/effects/effects/#327-change-technology-name","text":"This effect can be used to change a technology's name for a particular player. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Message: The name/message/instruction to show on screen or the script call to execute","title":"3.27. Change Technology Name"},{"location":"scenarios/triggers/effects/effects/#328-change-technology-research-time","text":"This effect can be used to change a technology's research time for a particular player. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Source Player: The player that is affected by the effect Technology: The technology to affect","title":"3.28. Change Technology Research Time"},{"location":"scenarios/triggers/effects/effects/#329-change-train-location","text":"This effect can be used to change the train location of a specifed unit for a particular player to another unit. The train location of Archers is Archery Range. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Unit List 2: This is the second unit to affect Button Location: The location of the button for a unit or technology. This number is given by \\((row-1)\\times5+column\\) . For example, the button location for the man at arms research in the barracks, which is in the 2 nd row and 1 st column, is given by \\((2-1)\\times5+1 = 6\\)","title":"3.29. Change Train Location"},{"location":"scenarios/triggers/effects/effects/#330-change-variable","text":"This effect can be used to change the value of a variable.. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Operation: Add, Subtract, Multiply or Divide the given quantity Variable: The variable to modify Message: The name/message/instruction to show on screen or the script call to execute","title":"3.30. Change Variable"},{"location":"scenarios/triggers/effects/effects/#331-change-view","text":"This effect can be used to move the camera of the player to a specified location. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Scroll: If this is enabled, changing the camera to a new position shows a scrolling animation from the position the player was previously on. If not enabled, the camera cuts to the new position wihout any animations. Some useful tricks with this effect: This effect can be used to bring attention of the player to a certain part of the map","title":"3.31. Change View"},{"location":"scenarios/triggers/effects/effects/#332-clear-instructions","text":"This effect can be used to clear instructions on the screen before the timer for that instruction is up.. The configurations for this effect are as follows: Panel Position: Position 0 displays the instruction at the top, Position 1 displays the instruction in the middle of the top half of the screen and Position 2 displays the instruction at the bottom of the top half of the screen Some useful tricks with this effect: This effect is not used very often, since mostly you want your display instruction effects to display an instruction for the full length of time you specify","title":"3.32. Clear Instructions"},{"location":"scenarios/triggers/effects/effects/#333-clear-timer","text":"This effect can be used to remove a displayed timer from the screen. The configurations for this effect are as follows: Timer: The time to display the message for","title":"3.33. Clear Timer"},{"location":"scenarios/triggers/effects/effects/#334-create-garrisoned-object","text":"This effect creates the unit chosen in the 2 nd list inside the selected object or the unit chosen in the 1 st list. The unit that the created unit is garrisoned inside does not need to be of the same player.. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Unit List 2: This is the second unit to affect Some useful tricks with this effect: The object you are creating garrisoned objects inside must have at least 1 garrison capacity and it must have the garrison ability","title":"3.34. Create Garrisoned Object"},{"location":"scenarios/triggers/effects/effects/#335-create-object","text":"This effect can be used to create a unit or building for the specified player. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Facet: The rotation of the created unit","title":"3.35. Create Object"},{"location":"scenarios/triggers/effects/effects/#336-damage-object","text":"This effect can be used to deal damage to units of a given player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Some useful tricks with this effect: Dealing negative damage to an object will actually increase their HP beyond their max HP. Using this, a unit's HP can go over 32768. This is used in Tower Defence maps like ATD where units have over a million HP, since directly setting an object's HP to over 32768 using the change object HP effect would kill the object.","title":"3.36. Damage Object"},{"location":"scenarios/triggers/effects/effects/#337-deactivate-trigger","text":"This effect can be used to activate a trigger. The configurations for this effect are as follows: Trigger List: The trigger to activate/deactivate","title":"3.37. Deactivate Trigger"},{"location":"scenarios/triggers/effects/effects/#338-declare-victory","text":"This effect can be used to grant victory or defeat to a specifed player. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Victory: If this is selected, the chosen player will win the game. If it is not selected, then the chosen player is defeated","title":"3.38. Declare Victory"},{"location":"scenarios/triggers/effects/effects/#339-disable-object-selection","text":"This effect makes specified units of the given player unselectable. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected.","title":"3.39. Disable Object Selection"},{"location":"scenarios/triggers/effects/effects/#340-disable-technology-stacking","text":"This effect disables 256x tech mode for the specified technology and player. Refer to the Enable Technology Stacking effect. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect","title":"3.40. Disable Technology Stacking"},{"location":"scenarios/triggers/effects/effects/#341-disable-unit-targeting","text":"This effect makes it so that the specified units of the given player cannot be targeted (basically, you can't perform any right click actions from another unit on these units anymore) by other units. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected.","title":"3.41. Disable Unit Targeting"},{"location":"scenarios/triggers/effects/effects/#342-display-instructions","text":"This effect can be used to display instructions on the screen. An icon of a unit may also be displayed along with the instructions. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Display Time: The amount of time to display the instruction for Panel Position: Position 0 displays the instruction at the top, Position 1 displays the instruction in the middle of the top half of the screen and Position 2 displays the instruction at the bottom of the top half of the screen Play Sound: The sound to play Message: The name/message/instruction to show on screen or the script call to execute Sound Name: The name of the sound to play Some useful tricks with this effect: This effect is useful for making dialogue sequences When you do multiple display instruction effects on the same panel position at the same time, only the last instruction is shown. One panel position can only show one instruction at a time Adding a colour prefix to a messages will colour the message in chat. The message must begin with the colour prefix for it to work, and the colour prefix is not shown in the real message shown in chat. The following colour prefixes may be used: <BLUE> <RED> <GREEN> <YELLOW> <AQUA> <PURPLE> <GREY> <ORANGE>","title":"3.42. Display Instructions"},{"location":"scenarios/triggers/effects/effects/#343-display-timer","text":"This effect can be used to display a timer on screen. The configurations for this effect are as follows: String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Display Time: The amount of time to display the instruction for Time Unit: This specifies the unit of time used in the timer trigger. This can be seconds, minutes or years Timer: The time to display the message for Message: The name/message/instruction to show on screen or the script call to execute Some useful tricks with this effect: Adding a colour prefix to a messages will colour the message in chat. The message must begin with the colour prefix for it to work, and the colour prefix is not shown in the real message shown in chat. The following colour prefixes may be used: <BLUE> <RED> <GREEN> <YELLOW> <AQUA> <PURPLE> <GREY> <ORANGE>","title":"3.43. Display Timer"},{"location":"scenarios/triggers/effects/effects/#344-enable-disable-object","text":"This effect can be used to enable/disable any unit for a specific player. Note that sometimes, simply enabling a unit wont allow you to train them, because if it is not a default unit, the game doesn't know which building to train the unit in. Thus, A train location and a train button ( Change Train Location ), a cost ( Change Object Cost ), and optionally a discription ( Change Object Description ), of the unit are needed to also be set using additional effects to allow training the enabled unit.. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Enabled: If this is selected, the units/technology is enabled if it is not already enabled","title":"3.44. Enable Disable Object"},{"location":"scenarios/triggers/effects/effects/#345-enable-disable-technology","text":"This effect can be used to enable/disable any technology for a specific player. Similar to units, when a non default technology is enabled, its train location and button ( Change Research Location ), costs ( Change Technology Cost ), and optionally a description ( Change Technology Description ), must be set using additional effects for someone to research it.. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect Enabled: If this is selected, the units/technology is enabled if it is not already enabled","title":"3.45. Enable Disable Technology"},{"location":"scenarios/triggers/effects/effects/#346-enable-object-selection","text":"This effect makes specified units of the given player selectable. Refer to the Disable Object Selection effect. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected.","title":"3.46. Enable Object Selection"},{"location":"scenarios/triggers/effects/effects/#347-enable-technology-stacking","text":"This effect enables 256x tech mode for the specified technology and player. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect","title":"3.47. Enable Technology Stacking"},{"location":"scenarios/triggers/effects/effects/#348-enable-unit-targeting","text":"This effect makes it so that the specified units of the given player can be targeted by other units. Refer to the Disable Unit Targeting effect. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected.","title":"3.48. Enable Unit Targeting"},{"location":"scenarios/triggers/effects/effects/#349-freeze-object","text":"This effect can be used to stop units of a specific player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect","title":"3.49. Freeze Object"},{"location":"scenarios/triggers/effects/effects/#350-heal-object","text":"This effect can be used to heal existing units of a given player by the specifed HP amount. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Some useful tricks with this effect: This effect should not be used to simulate regeneration of HP of a unit similar to heroes, because there is another effect ( Modify Attribute , change attribute regeneration rate to the desired quantity), that does exactly this","title":"3.50. Heal Object"},{"location":"scenarios/triggers/effects/effects/#351-kill-object","text":"This effect can be used to kill certain units of the specified player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect","title":"3.51. Kill Object"},{"location":"scenarios/triggers/effects/effects/#352-lock-gate","text":"This effect can be used to lock an unlocked gate. The configurations for this effect are as follows: Selected Objects: The units to apply the effect to","title":"3.52. Lock Gate"},{"location":"scenarios/triggers/effects/effects/#353-modify-attribute","text":"This effect can be used to modify any attribute of a specified unit. Note that this effects the unit itself, not just existing units. This means that even new units created will have the modified attribute. Refer to the Attributes section of the guide to see a list of modifiable attributes and what each of them does. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Operation: Add, Subtract, Multiply or Divide the given quantity Attribute List: The attribute of a unit to modify Some useful tricks with this effect: Changing the Amount of 1 st Resource of a unit changes its population requirement Since the quantity field cannot take in fractional values, to modify an attribute by a fractional amount, use the division operation to your advantage. for example setting a value to 0.1 is the same as first setting it to 1 and then dividing by 10. Similarly, adding a value of 0.5 is the same as first multiplying the initial value by 10, adding 5 and then dividing by 10.","title":"3.53. Modify Attribute"},{"location":"scenarios/triggers/effects/effects/#354-modify-resource","text":"This effect can be used to modify the resource amounts of a particular player by specified amounts. Refer to the Resources section of the guide to see all the resources that can be modified and their purposes. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Tribute List: The resource to tribute Source Player: The player that is affected by the effect Operation: Add, Subtract, Multiply or Divide the given quantity","title":"3.54. Modify Resource"},{"location":"scenarios/triggers/effects/effects/#355-modify-resource-by-variable","text":"This effect can be used to modify the resource amounts of a particular player by the value of another variable. Refer to the Resources section of the guide to see all the resources that can be modified and their purposes. The configurations for this effect are as follows: Tribute List: The resource to tribute Source Player: The player that is affected by the effect Operation: Add, Subtract, Multiply or Divide the given quantity Variable: The variable to modify","title":"3.55. Modify Resource By Variable"},{"location":"scenarios/triggers/effects/effects/#356-patrol","text":"This effect can be used to make units of a specified player patrol from one location to another. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect","title":"3.56. Patrol"},{"location":"scenarios/triggers/effects/effects/#357-place-foundation","text":"This effect can be used to automatically place down a building foundation for a specific player. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to","title":"3.57. Place Foundation"},{"location":"scenarios/triggers/effects/effects/#358-play-sound","text":"This effect can be used to play a specified sound. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Sound Name: The name of the sound to play Some useful tricks with this effect: This effect is useful for playing a notification sound","title":"3.58. Play Sound"},{"location":"scenarios/triggers/effects/effects/#359-remove-object","text":"This effect can be used to remove certain units of the specified player from the map. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect","title":"3.59. Remove Object"},{"location":"scenarios/triggers/effects/effects/#360-replace-object","text":"This effect can be used to replace existing units of a given player with another unit. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Target Player: This is the second player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect Unit List 2: This is the second unit to affect Some useful tricks with this effect: This effect is widely used by unit upgrade technologies. Researching Man at Arms replaces all Militia with Man at Arms on the map Researching Crossbowman replaces all Archers with Crossbowmen on the map","title":"3.60. Replace Object"},{"location":"scenarios/triggers/effects/effects/#361-research-technology","text":"This effect can automatically research a technology for the specified player.. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Technology: The technology to affect Force: If this is enabled, then the technology is researched even if the player's civilization does not have access to it","title":"3.61. Research Technology"},{"location":"scenarios/triggers/effects/effects/#362-script-call","text":"This effect allows us to write or call functions from an XS Script. While the script call effect can be used to both call functions and write small scripts, it is advised to always use a function call and never use this effect for writing scripts. Refer to the XS Scripting . The configurations for this effect are as follows: String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Message: The name/message/instruction to show on screen or the script call to execute","title":"3.62. Script Call"},{"location":"scenarios/triggers/effects/effects/#363-send-chat","text":"This effect can be used to display messages in chat. The configurations for this effect are as follows: Source Player: The player that is affected by the effect String Id: This is the same as the Name String ID . Refer to Name String ID section of the guide Message: The name/message/instruction to show on screen or the script call to execute Sound Name: The name of the sound to play Some useful tricks with this effect: This effect is super useful for debugging. When you're unsure of which triggers in your map are executed at which point, adding one of these to that trigger will display a message on screen when it gets executed This effect can also be used to simulate chat between two players This effect should NOT be used to display instructions to players, because there is an effect that can be used specifically for that Duplicate messages are not shown Adding a colour prefix to a messages will colour the message in chat. The message must begin with the colour prefix for it to work, and the colour prefix is not shown in the real message shown in chat. The following colour prefixes may be used: <BLUE> <RED> <GREEN> <YELLOW> <AQUA> <PURPLE> <GREY> <ORANGE>","title":"3.63. Send Chat"},{"location":"scenarios/triggers/effects/effects/#364-set-building-gather-point","text":"This effect can be used to set a gather point for specified buildings of a given player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected.","title":"3.64. Set Building Gather Point"},{"location":"scenarios/triggers/effects/effects/#365-set-player-visibility","text":"This trigger sets the visibility of the target player for the source player. The configurations for this effect are as follows: Source Player: The player that is affected by the effect Target Player: This is the second player that is affected by the effect Visibility State: The new visibility state","title":"3.65. Set Player Visibility"},{"location":"scenarios/triggers/effects/effects/#366-stop-object","text":"This effect can be used to stop units of a given player. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect","title":"3.66. Stop Object"},{"location":"scenarios/triggers/effects/effects/#367-task-object","text":"This effect can be used to task certain units of the specified player to (it basically simulates a right click at the specified location or unit) move to a specified locaiton, or perform an action on another unit. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect","title":"3.67. Task Object"},{"location":"scenarios/triggers/effects/effects/#368-teleport-object","text":"This effect can be used to teleport units of a player from one area of the map to another location on the map. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect","title":"3.68. Teleport Object"},{"location":"scenarios/triggers/effects/effects/#369-tribute","text":"This effect can be used to tribute resources from one player to another. The configurations for this effect are as follows: Quantity: The amount to modify by or a timer Tribute List: The resource to tribute Source Player: The player that is affected by the effect Target Player: This is the second player that is affected by the effect Some useful tricks with this effect: Tributing negative resources actually gives the source player the resource and deducts that amount from the target player Tributing negative resources from a player to gaia is a way to make silent resource trickles that do not make the tribute sound.","title":"3.69. Tribute"},{"location":"scenarios/triggers/effects/effects/#370-unload","text":"This effect can be used to ungarisson objects from a unit or building. The units affected by this effect are determined by the configurations of the effect. The configurations for this effect are as follows: Unit List 1: This is the unit to affect Source Player: The player that is affected by the effect Location: The location to create the unit on, or task a unit to Area: Only units on this selected area will be affected by the effect. If not set, units on the entire map are affected. Object Group: This is the class of units to effect Object Type: This is the type of the unit to effect","title":"3.70. Unload"},{"location":"scenarios/triggers/effects/effects/#371-unlock-gate","text":"This effect can be used to unlock a locked gate. The configurations for this effect are as follows: Selected Objects: The units to apply the effect to","title":"3.71. Unlock Gate"},{"location":"scenarios/triggers/effects/effects/#372-use-advanced-buttons","text":"","title":"3.72. Use Advanced Buttons"},{"location":"scenarios/useful_tools/age/unhide/","text":"","title":"Unhide"},{"location":"scenarios/useful_tools/age/uses/","text":"","title":"Uses"},{"location":"scenarios/useful_tools/parser/","text":"AoE2ScenarioParser \u00b6 Written by: KSneijders (MrKirby) What is the Parser used for? \u00b6 When working with scenarios you might have had to do some repetitive tasks many times. Some common examples are: placing units in a grid, copying triggers for all players or creating many similar effects. These sorts of problems can easily be done using a programming language! It's also a perfect tool to be able to tweak your minigames or maps. Let's say you have a minigame where you get 10 gold for each unit you kill. And later you find out, it's quite over powered, so you want to change all effects to 5 gold per unit. If you used the parser to setup all triggers and effects and you had a variable like: gold_per_unit = 10 you can just change it to 5, rerun the code and you fixed it in one go! The parser works by reading a scenario file, and converting it to objects in the programming language Python3 . You can then use the functions available to easily add or change things in the scenario. A couple example functions: add_unit , add_trigger , copy_trigger_per_player and many, many more! Check out the official AoE2ScenarioParser documentation for the most up-to-date installation guide and how to get started! Python Installation \u00b6 For the most up-to-date installation guide, you should check out the official AoE2ScenarioParser docs. Which can be found here . You can install the project using pip: 1 pip install AoE2ScenarioParser If you don't know what pip is, you can read about it in their documentation","title":"AoE2ScenarioParser"},{"location":"scenarios/useful_tools/parser/#aoe2scenarioparser","text":"Written by: KSneijders (MrKirby)","title":"AoE2ScenarioParser"},{"location":"scenarios/useful_tools/parser/#what-is-the-parser-used-for","text":"When working with scenarios you might have had to do some repetitive tasks many times. Some common examples are: placing units in a grid, copying triggers for all players or creating many similar effects. These sorts of problems can easily be done using a programming language! It's also a perfect tool to be able to tweak your minigames or maps. Let's say you have a minigame where you get 10 gold for each unit you kill. And later you find out, it's quite over powered, so you want to change all effects to 5 gold per unit. If you used the parser to setup all triggers and effects and you had a variable like: gold_per_unit = 10 you can just change it to 5, rerun the code and you fixed it in one go! The parser works by reading a scenario file, and converting it to objects in the programming language Python3 . You can then use the functions available to easily add or change things in the scenario. A couple example functions: add_unit , add_trigger , copy_trigger_per_player and many, many more! Check out the official AoE2ScenarioParser documentation for the most up-to-date installation guide and how to get started!","title":"What is the Parser used for?"},{"location":"scenarios/useful_tools/parser/#python-installation","text":"For the most up-to-date installation guide, you should check out the official AoE2ScenarioParser docs. Which can be found here . You can install the project using pip: 1 pip install AoE2ScenarioParser If you don't know what pip is, you can read about it in their documentation","title":"Python Installation"}]}